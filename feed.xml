<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Multunus blog</title>
  <subtitle>What started as a thought experiment eventually blossomed and grew into a sustainable business, where experiments were the order of the day. During this time, we've experimented and learnt a ton. On technology, engineering processes, design and culture.</subtitle>
  <id>http://www.multunus.com/blog</id>
  <link href="http://www.multunus.com/blog"/>
  <link href="http://www.multunus.com/feed.xml" rel="self"/>
  <updated>2017-08-30T15:00:29+05:30</updated>
  <entry>
    <title>Have Your Cake and Eat it Too</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/08/have-your-cake-and-eat-it-too/"/>
    <id>http://www.multunus.com/blog/2017/08/have-your-cake-and-eat-it-too/</id>
    <published>2017-08-30T15:00:29+05:30</published>
    <updated>2017-08-30T10:01:29+05:30</updated>
    <content type="html">&lt;p&gt;One of the problems the teams face, especially those following a fixed length iterations or sprint as Scrum recommends, is not having enough "stuff" built at the end of an iteration. Usually, this is what happens:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;A product team prioritises a set of items for the backlog&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The team estimates the stories at the beginning of the iteration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The team’s optimism comes down towards the end of the iteration&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The iteration ends with a retrospective where team feels lack of achievement&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As &lt;a href="https://vimeo.com/176856933"&gt;Joshua Kerievsky mentions&lt;/a&gt;, the team goes through the following emotions during the iteration:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/fixed-iterations.gif" alt="Emotions during fixed iterations" style="display:block;width:380px;" /&gt;&lt;/p&gt;

&lt;p&gt;We had gone through similar phases multiple times in the past. We followed Mainline/Trunk Based Development along with feature toggles. And also had enough automated tests to give us the confidence to release to production. But still, we had this issue of not achieving enough at the end of the iteration.&lt;/p&gt;

&lt;p&gt;That is when we started moving away from fixed iterations to variable length iterations and tried with &lt;a href="http://www.multunus.com/blog/2017/02/no-estimate/"&gt;time boxing instead of estimating&lt;/a&gt;. This was a huge enabler for Continuous Delivery by having small batches. And slicing the features to really small helped us to get quick feedback and change course depending upon what we learn.&lt;/p&gt;

&lt;p&gt;Sprints are still good, from the perspective of zooming in and zooming out, but &lt;a href="http://www.informit.com/articles/article.aspx?p=1833567&amp;amp;seqNum=2"&gt;decoupling deployments from releases&lt;/a&gt; was a big step forward. Manier times we decided &lt;strong&gt;not&lt;/strong&gt; to implement certain things because of our learnings from deployments. This makes products simpler as per &lt;a href="http://agilemanifesto.org/principles.html"&gt;Agile Manifesto&lt;/a&gt;,  &lt;em&gt;Simplicity - the art of maximising the work &lt;strong&gt;not done&lt;/strong&gt; - is essential&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id="small-batches"&gt;Small Batches&lt;/h2&gt;

&lt;p&gt;Small batch is a concept that comes from lean manufacturing and is key for Continuous Delivery. It is based on the saying &lt;strong&gt;&lt;a href="https://martinfowler.com/bliki/FrequencyReducesDifficulty.html"&gt;if it hurts, do it more often&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/iterative+-+incremental.jpg" alt="Agile is iterative and incremental" /&gt;&lt;/p&gt;

&lt;p&gt;It feels counter intuitive that a team who were not able to release anything at the end of a week or two weeks iteration but were able to get many stuff done when it was done on a daily basis. Surprisingly, this is what fundamentally mainline development enables.&lt;/p&gt;

&lt;p&gt;Apart from giving instant gratification to the team, as &lt;a href="https://trunkbaseddevelopment.com/observed-habits/"&gt;Paul Hammant mentions&lt;/a&gt;, a team who is committing to trunk on a continuous manner builds the below habits:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;No code freeze, every day is the same&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Quick reviews&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Always release ready&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Thin vertical slices&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are a lot of case studies around how small batches help teams to achieve awesome results. You can read the below articles to know more:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://queue.acm.org/detail.cfm?id=2945077"&gt;The small batches principle&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://itrevolution.com/the-amazing-devops-transformation-of-the-hp-laserjet-firmware-team-gary-gruver/"&gt;The Amazing DevOps Transformation Of The HP LaserJet Firmware Team&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But the question is, how do you enable small batches. There are only guidelines for doing this i.e. &lt;a href="http://xp123.com/articles/invest-in-good-stories-and-smart-tasks/"&gt;INVEST in good stories and SMART tasks&lt;/a&gt;. &lt;a href="http://www.scruminc.com/wp-content/uploads/2015/06/User-Stories-2.0.pdf"&gt;Better User stories&lt;/a&gt; cover a lot of techniques on this.&lt;/p&gt;

&lt;p&gt;I will be covering a few examples on this in the upcoming weeks.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>The Requirements Pit</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/08/the-requirement-pit/"/>
    <id>http://www.multunus.com/blog/2017/08/the-requirement-pit/</id>
    <published>2017-08-24T04:40:29+05:30</published>
    <updated>2017-09-03T10:21:48+05:30</updated>
    <content type="html">&lt;p&gt;&lt;a href="https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1503455788&amp;amp;sr=1-1&amp;amp;keywords=pragmatic+programmer"&gt;The Pragmatic Programmer: From Journeyman to Master&lt;/a&gt;, is a classic book and must be read by every programmer, maybe again and again. Published by Dave Thomas and Andy Hunt in 1999 as the first in the series The Pragmatic Bookshelf label, the book has a lot of tips on how software should be created and maintained.&lt;/p&gt;

&lt;p&gt;The book uses analogies to communicate the ideas. The &lt;a href="https://en.wikipedia.org/wiki/Broken_windows_theory"&gt;broken window theory&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Stone_Soup"&gt;the stone soup&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Boiling_frog"&gt;boiling frog&lt;/a&gt; are popular analogies from the book. 
Jeff Atwood's post &lt;a href="https://blog.codinghorror.com/a-pragmatic-quick-reference/"&gt;A Pragmatic Quick Reference&lt;/a&gt; covers a quick reference of the entire book.&lt;/p&gt;

&lt;p&gt;The book describes the experience Brian Eno [the famous producer and musician] had while designing an ultimate mixing board. Quoting from the book:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Sometimes the Interface Is the System&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;em&gt;In an article in Wired magazine (January 1999, page 176), producer and musician Brian Eno described an incredible piece of technology—the ultimate mixing board. It does anything to sound that can be done. And yet, instead of letting musicians make better music, or produce a recording faster or less expensively, it gets in the way; it disrupts the creative process.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;To see why, you have to look at how recording engineers work. They balance sounds intuitively. Over the years, they develop an innate feedback loop between their ears and their fingertips—sliding faders, rotating knobs, and so on. However, the interface to the new mixer didn't leverage off those abilities. Instead, it forced its users to type on a keyboard or click a mouse. The functions it provided were comprehensive, but they were packaged in unfamiliar and exotic ways. The functions the engineers needed were sometimes hidden behind obscure names, or were achieved with non intuitive combinations of basic facilities.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;That environment has a requirement to leverage existing skill sets. While slavishly duplicating what already exists doesn't allow for progress, we must be able to provide a transition to the future.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;For example, the recording engineers may have been better served by some sort of touchscreen interface—still tactile, still mounted as a traditional mixing board might be, yet allowing the software to go beyond the realm of fixed knobs and switches. Providing a comfortable transition through familiar metaphors is one way to help get buy-in.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;This example also illustrates our belief that successful tools adapt to the hands that use them. In this case, it is the tools that you build for others that must be adaptable.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Refer to the original Wired magazine article - &lt;a href="https://www.wired.com/1999/01/eno/"&gt;The revenge of the intuitive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the summary is &lt;strong&gt;&lt;em&gt;Work with a User to Think Like a User.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="documenting-requirements"&gt;Documenting Requirements&lt;/h2&gt;
&lt;p&gt;Like a good codebase, the requirements should also be abstract because none, including the end users, know the requirements well enough. These abstractions, help the software to be flexible. Let's look at an example:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;"An employee record may be viewed only by a nominated group of people"&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above conveys in a generic manner that there should be restrictions on who can view what. Compare that with:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;"Only an employee's supervisors and the personnel department may view that employee's records"&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While this is more specific, it can (or will) change tomorrow because of an addition of new role or change in the privileges for an existing role.&lt;/p&gt;

&lt;p&gt;There is a high probability that the system becomes more rigid when requirements are mentioned in more specific way vs when mentioned in a generic way. Documenting them as use cases, as &lt;a href="https://www.ivarjacobson.com/publications/white-papers/use-case-ebook"&gt;Ivar Jacobson recommends&lt;/a&gt; with the focus on the goal to be achieved helps it to be more abstract.&lt;/p&gt;

&lt;h2 id="project-glossary"&gt;Project Glossary&lt;/h2&gt;
&lt;p&gt;Also maintain a Project Glossary to bring in common and consistent vocabulary across the team i.e., the domain experts, end users, developers because:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;It's very hard to succeed on a project where the users and developers refer to the same thing by different names or, even worse, refer to different things by the same name.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My friend Yedhu has written a short and crisp summary about The Pragmatic Programmer. You can read them &lt;a href="http://www.yedhukrishnan.com/search/label/Pragmatic%20Programmer"&gt;here&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Awesome Results by Making People Awesome</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/08/awesome-results-by-making-people-awesome/"/>
    <id>http://www.multunus.com/blog/2017/08/awesome-results-by-making-people-awesome/</id>
    <published>2017-08-09T04:40:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/turn-the-ship-around.jpg" alt="Turn the Ship Around" /&gt;&lt;/p&gt;

&lt;p&gt;The book &lt;a href="http://www.amazon.in/Turn-Ship-Around-Turning-Followers/dp/1591846404"&gt;Turn the Ship around - Turning the followers into leaders&lt;/a&gt; introduces the model leader-leader and explains why its effective than the traditional leader-follower model.
Written by David Marquet the book outlines how he implemented the leader-leader model while being the captain of a nuclear submarine, the USS Santa Fe.&lt;/p&gt;

&lt;p&gt;David talks about four pillars of the leader-leader model:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Control&lt;/strong&gt; - Give control, don’t take control. This is probably the hardest for most leaders since the more stressful times become, the more we try to control the situation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Competence&lt;/strong&gt; - Give your team the tools they need to be technically competent. A technically competent team provides the foundation for trust.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Clarity&lt;/strong&gt; - State the organization’s goals clearly, openly, and honestly. Make sure everyone is working towards the same goals.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Courage&lt;/strong&gt; - Resist the urge to fall back into the leader-follower model. It is important to continue to trust your team to deliver, even in the face of adversity.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OqmdLcyES_Q"&gt;In a video&lt;/a&gt; explaining the model, David gives examples across different industries:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A software engineer deciding when something should be deployed&lt;/li&gt;
  &lt;li&gt;A sales person deciding how much should be charged to the customer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my earlier posts &lt;a href="http://www.multunus.com/blog/2017/07/fixed-requirements-an-oxymoron/"&gt;Fixed Requirements&lt;/a&gt; and &lt;a href="http://www.multunus.com/blog/2017/07/what-is-value/"&gt;What is Value?&lt;/a&gt;, I shared my experience while working with an enterprise customer in which we struggled to deliver valuable software. The major issue was the lack of focus on understanding the end users. The four aspects mentioned above - control, competence, clarity and courage - were missing in our context.&lt;/p&gt;

&lt;p&gt;Even though we had the control over when we could deploy, what needs to be deployed was &lt;strong&gt;controlled&lt;/strong&gt; by a lot of factors, many of them &lt;strong&gt;unclear&lt;/strong&gt; to the engineering team. And many on the team, both the engineering and the non-engineering folks, lacked the courage to make decisions and resistant to release their control. These had a huge (negative) impact on delivering value on time.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/modern-agile.png" alt="Modern Agile" /&gt;&lt;/p&gt;

&lt;p&gt;I concluded the post by touching upon &lt;a href="http://modernagile.org/"&gt;Modern Agile&lt;/a&gt;, described by Joshua Kerievsky, CEO of Industrial Logic and founder of Modern Agile as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Modern Agile is a community for people interested in uncovering better ways of getting awesome results. It leverages wisdom from many industries, is principle driven and framework free.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every organization, including software development organizations, should use the four guiding principles for producing exceptional outcomes and growing an outstanding culture.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id="make-people-awesome"&gt;Make People Awesome&lt;/h3&gt;

  &lt;p&gt;&lt;em&gt;Steve Jobs used to ask his colleagues, "What incredible benefits can we give to the customer? Where can we take the customer?" In modern agile we ask how we can make people in our ecosystem awesome. This includes the people who use, make, buy, sell or fund our products or services. We learn their context and pain points, what holds them back and what they aspire to achieve. How can we make them awesome?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id="make-safety-a-prerequisite"&gt;Make Safety a Prerequisite&lt;/h3&gt;

  &lt;p&gt;&lt;em&gt;Safety is both a basic human need and a key to unlocking high performance. We actively make safety a prerequisite by establishing safety before engaging in any hazardous work. We protect people’s time, information, reputation, money, health and relationships. And we endeavor to make our collaborations, products and services resilient and safe.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id="experiment--learn-rapidly"&gt;Experiment &amp;amp; Learn Rapidly&lt;/h3&gt;

  &lt;p&gt;&lt;em&gt;You can’t make people awesome or make safety a prerequisite if you aren’t learning. We learn rapidly by experimenting frequently. We make our experiments "safe to fail" so we are not afraid to conduct more experiments. When we get stuck or aren’t learning enough, we take it as a sign that we need to learn more by running more experiments.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;h3 id="deliver-value-continuously"&gt;Deliver Value Continuously&lt;/h3&gt;

  &lt;p&gt;&lt;em&gt;Anything that isn’t delivered isn’t helping anyone become more awesome or safe. In modern agile we ask ourselves, "How could valuable work be delivered faster?" Delivering value continuously requires us to divide larger amounts of value into smaller pieces that may be delivered safely now rather than later.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="emergent-design"&gt;Emergent design&lt;/h2&gt;

&lt;p&gt;I had attended Joshua’s &lt;a href="https://confengine.com/agile-india-2017/proposal/3646/modern-agile-workshop"&gt;Modern Agile workshop&lt;/a&gt; during Agile India ‘17 in which he shared his perspective about Modern Agile and building such a community. We started the workshop by watching the &lt;a href="https://www.youtube.com/watch?v=l4wlC1Qex8A"&gt;short film about the building of Gossamer Condor&lt;/a&gt; - the first human powered aircraft - by Paul MacCready.&lt;/p&gt;

&lt;p&gt;The project was far beyond their timeline and had a lot of setbacks, but the team kept experimenting and changed the course through the learnings from the experiments. It is interesting to see Paul making changes to the aircraft just before their 10th official attempt to demo the aircraft, in which they won the prize. I wonder how many of us will be ready to make changes, even small, during a major launch of the product.&lt;/p&gt;

&lt;p&gt;The team had a lot of crashes and they saw every crash as an opportunity to rebuild. 
They were able to build each version quickly because of their simple and modular design. 
The aircraft emerged from each of these experiments and the final product was vastly different from what they had originally envisioned.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/emergent-design.png" alt="Emergent Design" /&gt;
&lt;sup&gt;Courtesy: &lt;a href="https://pt.slideshare.net/ThoughtWorks/neal-ford-emergent-design-and-evolutionary-architecture"&gt;Emergent Design and Evolutionary Architecture - Neal Ford&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Emergent Design is one of the required practices for continuous experimentation and delivery. You can see Paul MacCready and the team doing the same, the product and the architecture emerging over a period of time.&lt;/p&gt;

&lt;p&gt;Emergent Design helps us to &lt;a href="http://www.multunus.com/blog/2017/04/continuous-design-to-avoid-cruft/"&gt;reduce legacy to the minimum&lt;/a&gt;. For the product to emerge through the learnings from the experiments, two key things should happen:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Being open to changing the course rather than fixing our mind with our earlier understanding about the market and customers&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Letting the architecture and design of the product evolve over a period of time than fixing it early on&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Who doesn’t want to be on a team who &lt;strong&gt;&lt;em&gt;make people around them awesome&lt;/em&gt;&lt;/strong&gt;? For us to do that, each of us need to &lt;strong&gt;&lt;em&gt;be a leader than a follower&lt;/em&gt;&lt;/strong&gt;. And let’s be &lt;strong&gt;&lt;em&gt;leaders who want to create more leaders than followers&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It requires &lt;strong&gt;&lt;em&gt;courage&lt;/em&gt;&lt;/strong&gt; too, the courage to accept that we are wrong, the courage to start from scratch whenever appropriate and the courage to give control to others. And all these will be possible only if there is &lt;strong&gt;&lt;em&gt;clarity&lt;/em&gt;&lt;/strong&gt; on the vision and &lt;strong&gt;&lt;em&gt;continuous experimentations&lt;/em&gt;&lt;/strong&gt; towards achieving the vision.&lt;/p&gt;

&lt;h2 id="further-references"&gt;Further References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=rhCCxx0CXEc"&gt;Modern Agile&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=u6XAPnuFjJc"&gt;Drive: The surprising truth about what motivates us&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=TwasxNk1824"&gt;The Lean Mindset&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=OqmdLcyES_Q"&gt;Greatness&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ESOaDiv3lXA"&gt;What is Value?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Zop0wTPrbk8"&gt;Managing Manager‐less Processes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uk-CF7klLdA"&gt;Programmer Anarchy&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://modernagile.org/#learnMore"&gt;References in modernagile.org&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>What is Value?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/07/what-is-value/"/>
    <id>http://www.multunus.com/blog/2017/07/what-is-value/</id>
    <published>2017-07-30T14:00:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Continuing with my reflections (you can call them rants too :)) on my earlier post -  Fixed Requirements, where the fundamental issue was that we couldn’t deliver value to the users, or rather we delivered it very late. That brings in the question "what is value, how do we know it is delivered".&lt;/p&gt;

&lt;p&gt;We built a prototype to quickly validate and demonstrate the idea that we can build a tool sync two different systems.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/workflow.png" alt="Workflow" /&gt;&lt;/p&gt;

&lt;p&gt;When we delivered the same to the users, there were a lot of surprises in our understanding of the users, the external tools integrated for syncing and the environment in which it is deployed. For eg: for the prototype, we used a CSV to map the fields. It was fine because the users were us, the engineers, who knows how the system works.  But the end users, who were non-techies, they made all kinds of mistakes in mapping. It was really frustrating for them and for us too. We had a lot of back and forth with the users explaining to them how to map the fields.&lt;/p&gt;

&lt;p&gt;Most of us assume that value means delivering all the items in the backlog. We were also trapped into the same or we didn’t react well enough when we realised that what we are building is not adding enough value to the end users.&lt;/p&gt;

&lt;p&gt;Great products can not be built with cheap methods. You need to make good investments:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Investing time for understanding the users&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Investing in learning about good architecture and design of reliable systems&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Investing in building a good workflow for delivering reliable software&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These investments pay off in the long run and save time and effort later thus saving money for the business. But not investing on these initially may feel like you are saving but becomes costlier in the long run, by creating unhappy users. If our users are unhappy, am not sure what value we get by cutting corners.&lt;/p&gt;

&lt;h2 id="in-scope-vs-out-of-scope"&gt;In scope vs Out of scope&lt;/h2&gt;

&lt;p&gt;We couldn’t change much in this process mainly because of how the sales and support team worked. The sales team agree on a fixed requirements with the customers. And any time there is a change that was requested, it goes through a long process of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cross checking with the "agreed scope"&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Back and forth trying to understand what is agreed and what is not?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At the end of the process arriving at a conclusion&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I agree that users don’t know what they want and we shouldn’t agree with everything that the users are asking for. It was sad to see using contracts as a yardstick to decide whether to make changes to the product or not rather than considering whether it adds value.&lt;/p&gt;

&lt;p&gt;Yes, we also need to consider the cost of building it too. But, if the focus is on adding value there will be &lt;a href="https://www.agileconnection.com/article/how-impact-mapping-gives-you-multiple-options-pursue"&gt;multiple ways for achieving the same&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was part of many such discussions and failed in convincing the team to change the course. Luckily, we could bring in small changes to the product which made it "useable" for the users and made them somewhat happy. But the journey to that was stressful and painful. Looking back, I never want to be in such a situation again.&lt;/p&gt;

&lt;p&gt;One question we need to ask consistently while building products is "What am working on now how is it valuable to the users"? &lt;a href="https://www.youtube.com/watch?v=ESOaDiv3lXA"&gt;Jez Humble’s talk&lt;/a&gt; made me realise and align about the concept of value. And I would recommend you watch it too.&lt;/p&gt;

&lt;p&gt;And how do we continuously deliver value? &lt;a href="http://modernagile.org/"&gt;Modern Agile&lt;/a&gt; has the below guiding principles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Make people awesome&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make safety a prerequisite&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Experiment and learn rapidly&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deliver value continuously&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Everything else, which is not aligned with the above four, are non-valuable and we should be spending our least amount of time in doing the same. But it is sad to see our industry doesn’t work that way. Hope things will change in the coming days by more and more people understanding the value of delivering value.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Beyond Unit Tests</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/07/beyond-unit-tests/"/>
    <id>http://www.multunus.com/blog/2017/07/beyond-unit-tests/</id>
    <published>2017-07-24T14:00:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;For &lt;a href="https://gk-landingpage.firebaseapp.com/"&gt;our product&lt;/a&gt;, we use SMS as the notification mechanism as we felt it is the most reliable mechanism in our context. We use &lt;a href="https://www.textlocal.in/"&gt;TextLocal&lt;/a&gt; to send out these SMSs.&lt;/p&gt;

&lt;p&gt;For each of the SMS that goes out of the system, we need to add a template. These templates are approved after verifying that there is no promotional content in the message. The promotional SMS, as the name suggests, is used for promoting a product a service and has to follow guidelines such as &lt;a href="https://support.exotel.in/support/solutions/articles/38688-what-is-the-difference-between-a-transactional-sms-and-a-promotional-sms"&gt;DND policy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The message template can have placeholders which are replaced with actual content while sending out the SMS. For example, we've an automated booking module through IVR i.e. the customer can book a trial class in Yoga Studios through the IVR system. The system sends a reminder message to the customer 90 minutes before the class along with address, time etc. The template for the message is as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/sms-template.png" alt="SMS template" /&gt;&lt;/p&gt;

&lt;p&gt;You can see certain parts embedded in %%, which is used as variables and gets replaced with the provided data while sending out the SMS. The section defines two things: &lt;em&gt;the type of the data and the maximum length of the data.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="testing"&gt;Testing&lt;/h2&gt;

&lt;p&gt;A slight change in the message resulted in failures because of template mismatch. And we faced issues with the data length too. For eg: In the above case the length of Studio name is given as 20 and there can be cases where it can be longer than 20. The message gets rejected and it results in the SMS not getting delivered to the user. And we needed to update the template when we face such issues.&lt;/p&gt;

&lt;p&gt;We followed TDD and even then we couldn’t capture the above cases with the same. As Michael Nygard &lt;a href="http://thinkrelevance.com/blog/2013/11/26/better-than-unit-tests"&gt;quoted in his post&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;The key problem with testing is that a test (of any kind) that uses one particular set of inputs tells you nothing at all about the behaviour of the system or component when it is given a different set of inputs. The huge number of different possible inputs usually rules out the possibility of testing them all, hence the unavoidable concern with testing will always be, "have you performed the right tests?" The only certain answer you will ever get to this question is an answer in the negative — when the system breaks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We usually write few input criteria for Unit tests good enough number to cover the edge cases. Too many will make the unit tests unmaintainable or unreadable. So how do we test these kinds of scenarios?&lt;/p&gt;

&lt;h2 id="property-based-testing"&gt;Property based testing&lt;/h2&gt;

&lt;p&gt;Property based testing takes a different approach. It enables us to test our code against all possible inputs(or at least large enough inputs). It randomly generates a vast number of test cases to exercise the system.&lt;/p&gt;

&lt;p&gt;Instead of looking for success, property-based testing looks for failures. The failures are those input values which couldn't match the expected output or states. And in this way, property based testing complements the unit tests by generating a good enough number for edge cases.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thinkrelevance.com/media/BAhbBlsHOgZmSSIrMjAxMy8xMS8yNi8yMC8xNy80OS82OTAvcXVpY2tjaGVjay5wbmcGOgZFVA/quickcheck.png?sha=7c512d79" alt="Property based testing" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hackage.haskell.org/package/QuickCheck"&gt;Qucikcheck&lt;/a&gt;, referred above, is a testing tool for Haskell which generates a lot of cases against the specification that was provided to it. Later it was adopted by Zach Tellman in &lt;a href="http://yellerapp.com/posts/2015-04-13-effective-test-check.html"&gt;Test.Check&lt;/a&gt; a similar tool written in Clojure.&lt;/p&gt;

&lt;p&gt;There are &lt;a href="https://gist.github.com/npryce/4147916"&gt;tools available&lt;/a&gt; in almost all the languages for writing Property based testing.&lt;/p&gt;

&lt;p&gt;In the upcoming post(s), I will explain how to write property based tests.&lt;/p&gt;

&lt;h2 id="further-readings"&gt;Further Readings&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lKXe3HUG2l4"&gt;"The Mess We're In" by Joe Armstrong&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=f84n5oFoZBc"&gt;Hammock Driven Development by Rich Hickey&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://vimeo.com/130847897"&gt;Property-Based Testing by Rob Howard (Railscamp, 2015)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.infoq.com/presentations/property-based-testing"&gt;Property-based Testing for Better Code by Jessica Kerr&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>Fixed Requirements - An Oxymoron?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/07/fixed-requirements-an-oxymoron/"/>
    <id>http://www.multunus.com/blog/2017/07/fixed-requirements-an-oxymoron/</id>
    <published>2017-07-18T14:00:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/build-cycle.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;One issue with the software industry is the belief &lt;em&gt;we know **exactly **what **needs to **be built&lt;/em&gt;. It is wrong to assume that we’ve all these cool technologies with us and anything that we build will be &lt;em&gt;perfect&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I’ve reminded this many times to &lt;em&gt;myself&lt;/em&gt;, the team including the non-software/engineering people I interact with: &lt;em&gt;we will never know what the users want&lt;/em&gt;. Sometimes we’ve a feel or an intuition for it. And it can be right depending on your proximity to the users. And the way to confirm that is through conversations with the users and keeping a close watch on how they use our software.&lt;/p&gt;

&lt;h2 id="a-simple-migration-tool"&gt;A simple migration tool&lt;/h2&gt;

&lt;p&gt;I was working with a customer to deliver a product to migrate documents from one system to another. Our customer has a workflow management system targeting specific domains. They needed a tool to migrate documents from different document management systems [like Sharepoint, Documentum etc.] to acquire customers who were already using these tools. This would help make their onboarding process to our system much faster.&lt;/p&gt;

&lt;p&gt;The tool description is simple, &lt;strong&gt;&lt;em&gt;copy documents from one system to another&lt;/em&gt;&lt;/strong&gt;. Yes, the document has metadata such as who created it, how many versions exist, when those versions got created and by whom, a unique ref that each of the tools maintains to identify the document, etc. These metadata needs to be mapped to different fields using a mapping file provided to the tool.&lt;/p&gt;

&lt;p&gt;We built a prototype to help the sales team demo the idea to their customers and it worked. Customers got the idea quickly enough.&lt;/p&gt;

&lt;p&gt;However, to make the tool ready for deployment, we needed more testing and polish, such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Making sure the tool is intuitive enough to understand which documents had synced successfully  and which ones had  failed - along with the reasons for failures&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Handling customisations of these document management systems in a smooth manner&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Handling varying numbers of documents&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Handling varying document sizes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Handling intermittent connections&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We didn’t follow a good enough system to convert the prototype to  "useable" software and to convey to the stakeholders why it requires effort. The rest of the post is a retrospective of the same and what could have been done differently.&lt;/p&gt;

&lt;h2 id="three-cs"&gt;Three Cs&lt;/h2&gt;

&lt;p&gt;User stories, as per Extreme Programming, have &lt;a href="http://ronjeffries.com/xprog/articles/expcardconversationconfirmation/"&gt;three &lt;/a&gt;&lt;a href="http://ronjeffries.com/xprog/articles/expcardconversationconfirmation/"&gt;critical&lt;/a&gt;&lt;a href="http://ronjeffries.com/xprog/articles/expcardconversationconfirmation/"&gt; elements&lt;/a&gt;, called the three Cs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Card&lt;/strong&gt; - A 1 or 2 lines line "definition" of what needs to be implemented&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Conversation&lt;/strong&gt; - The conversation among the stakeholders and the team around what needs to be built in a way that both parties share their opinions, thoughts and feelings. The stronger the collaboration and the communication, better the quality of the product.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Confirmation&lt;/strong&gt; - Arrive at an understanding among the stakeholders and the team about what needs to be built. At this stage, our &lt;em&gt;assumption&lt;/em&gt; is that if we build in a certain way, it will be valuable to the users.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We didn’t follow a disciplined way for all the three Cs. Even though we had stories "card", our conversations and confirmation were not good enough and that resulted in a less than optimal quality of the final product.&lt;/p&gt;

&lt;p&gt;It happened because of various reasons such as the lack of time from the end users, stakeholders having different processes being followed for building software and our lack of persistence in influencing others.&lt;/p&gt;

&lt;h2 id="domain-knowledge"&gt;Domain Knowledge&lt;/h2&gt;

&lt;p&gt;Related to above, the conversations should help us in arriving at &lt;a href="http://www.multunus.com/blog/2017/01/naming-the-hardest-software/"&gt;Ubiquitous&lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2017/01/naming-the-hardest-software/"&gt; Language&lt;/a&gt; and also for gaining domain knowledge because interactions with the expert users help to improve the understanding of the space.&lt;/p&gt;

&lt;h2 id="respecting-the-logs"&gt;Respecting the logs&lt;/h2&gt;

&lt;p&gt;As Dan North mentioned in his talk &lt;a href="https://vimeo.com/209681251"&gt;Ops and &lt;/a&gt;&lt;a href="https://vimeo.com/209681251"&gt;Operability&lt;/a&gt;, &lt;em&gt;A log is an &lt;strong&gt;append-only, read-only, user interface&lt;/strong&gt;&lt;/em&gt;. It should allow one to answer the below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What happened?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who is impacted?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do we fix it?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We learned this the hard way :)&lt;/p&gt;

&lt;h2 id="exceptions-need-to-be-exceptions"&gt;Exceptions need to be exceptions&lt;/h2&gt;

&lt;p&gt;Somewhat related to logging, we need to respect exceptions too and should be handled whenever required by making sure that no information is lost. Many know how much it pains when you’ve a block like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/eating-exceptions.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We didn’t have the above one. But there were cases which needed to be considered as exceptions but were not. For e.g.: handling non 2XX response code when making API calls.&lt;/p&gt;

&lt;h2 id="what-worked-well"&gt;What worked well&lt;/h2&gt;

&lt;p&gt;In spite of the above issues, certain things we did, worked in our favour.&lt;/p&gt;

&lt;h3 id="tdd"&gt;TDD&lt;/h3&gt;

&lt;p&gt;We had enough coverage for the tool which helped us in multiple ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Better extensibility. We could add integrations with other document management systems without too much difficulty&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had to refactor the code multiple times. One time we had to move from one persistence layer to another and we could do that because of good abstraction layer and decent test coverage.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hardly any regression issues. We were confident when the tests passed.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="continuous-delivery"&gt;Continuous Delivery&lt;/h3&gt;

&lt;p&gt;We continuously delivered, never waited for fixed length iterations to deliver what we accomplished. This meant that we were slicing features in small chunks.&lt;/p&gt;

&lt;p&gt;The tool was deployed in-house. We were given a test instance, simulating the production setup. Continuously delivering to this environment helped users to test the tool against their document management tools.&lt;/p&gt;

&lt;h3 id="communication-with-actual-users"&gt;Communication with actual users&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://s.tmimgcdn.com/blog/wp-content/uploads/2011/09/DevWatchingUsabilityTest.png?x47994" alt="Dev watching usability test" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: &lt;a href="http://blog.templatemonster.com/2011/09/14/usability-testing-basics/"&gt;Templatemonster&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Those who have watched how users use the software you built, agree that there is no better learning experience than the same. Others who haven’t experienced it, I highly recommend setting apart time, even though it can be embarrassing.&lt;/p&gt;

&lt;p&gt;We have been conversing with the end users and we could see them using the product, struggling with it and watch their emotions. That is when we realised that we need to improve our domain knowledge and need to improve the conversations and bring in confirmations. Ideally, we should have had two levels of communication:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;One during the development to understand and confirm what needs to be built by communicating through quick prototypes for different scenarios&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then feedback session with the working software to confirm that what we envisioned with the prototype is "usable" enough&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we realised that we are missing the first point above [because the prototype was already built], we took baby steps to bring in changes and improve the same.&lt;/p&gt;

&lt;p&gt;There were constraints which made it difficult for us to implement certain changes. These constraints were imposed due to the contracts and working agreement among different parties. I will be covering those aspects in a separate post.&lt;/p&gt;

&lt;h2 id="finally"&gt;Finally!!!&lt;/h2&gt;

&lt;p&gt;Over a period of time, we brought in some rhythm and discipline to improve the situation. And finally did a decent job of delivering it, which was way beyond expected timelines. But in the end, the users were happy. They saw value in the tool. Even though it took a lot longer for us to reach that stage, we felt good that we delivered something that is useful.&lt;/p&gt;

&lt;p&gt;Of course, we could have reached there a lot earlier, if we had the right focus and persistence.&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;The fundamental reason for failure was being unclear about the users and to accept that it is really difficult to spec out exactly what needs to be built, as the requirement evolves over a period of time. Rarely we build the exact same software multiple times. There will be similarities in, but it will have differences too.&lt;/p&gt;

&lt;p&gt;And this is what differentiates software industry from any other engineering streams like construction. While building a bridge, it is easier to spec out the steps and requirements somewhat closer. But in software things, can change significantly during the development because of its discovery process. I recommend you to watch &lt;a href="https://www.infoq.com/presentations/Deliberate-Discovery"&gt;Deliberate&lt;/a&gt;&lt;a href="https://www.infoq.com/presentations/Deliberate-Discovery"&gt; Discovery&lt;/a&gt;&lt;a href="https://www.infoq.com/presentations/Deliberate-Discovery"&gt; by Dan North&lt;/a&gt; which explains about how to design this discovery process.&lt;/p&gt;

&lt;p&gt;And the only way to understand what needs to be built is through constant communication and observation. It is the responsibility of every software professionals to &lt;a href="http://www.multunus.com/blog/2017/03/forgotten-story-whom-are-we-building-it-for/"&gt;understand the feelings of our users&lt;/a&gt; and everything that we do should be to optimise for delivering value for them. Any time the focus shifts to something else, the quality of the product dips.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/broken-bridge.jpg" alt="Reckless job" /&gt;&lt;/p&gt;

&lt;p&gt;If we don’t expect a reckless job from other engineering streams [as shown above], why should we be different? Let us be more prudent to our jobs.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>State of IT</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/07/state-of-it/"/>
    <id>http://www.multunus.com/blog/2017/07/state-of-it/</id>
    <published>2017-07-05T14:00:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">
&lt;p&gt;Continuing with my earlier post about &lt;a href="http://www.multunus.com/blog/2017/06/operability/"&gt;Operability&lt;/a&gt;, but this one focussing more on the State of DevOps report. &lt;a href="https://puppet.com/resources/whitepaper/state-of-devops-report"&gt;State of DevOps report&lt;/a&gt; is a report published by Puppet every year along with &lt;a href="https://devops-research.com/about.html"&gt;Nicole &lt;/a&gt;&lt;a href="https://devops-research.com/about.html"&gt;Forsgren&lt;/a&gt;, &lt;a href="https://continuousdelivery.com/"&gt;Jez Humble&lt;/a&gt;, &lt;a href="http://www.realgenekim.me/"&gt;Gene Kim&lt;/a&gt;, &lt;a href="https://puppet.com/company/leadership/nigel-kersten"&gt;Nigel Kersten&lt;/a&gt; by analysing the results of the survey they conduct. 
They received over &lt;strong&gt;&lt;em&gt;27,000 responses over the last six years&lt;/em&gt;&lt;/strong&gt; and found clear evidence that &lt;em&gt;DevOps practices yield remarkable results for IT teams and organisations&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/water-49024_1280.jpg" alt="Continuous Flow" /&gt;&lt;/p&gt;

&lt;p&gt;The report says by focussing on Continuous Flow of delivering value to the customers, the performance i.e. the individual, the team and the organisation, improves significantly. And this is done by optimising:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Deployment Frequency&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lead time [from commit to production]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Meantime to Recovery (MTTR)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change Failure Rate&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the key practices to be followed for improving the above are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;High level of  automation [build, test and deploy automations]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;Trunk &lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;based&lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt; development&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Loosely coupled architecture&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lean_product_development"&gt;Lean product &lt;/a&gt;&lt;a href="https://en.wikipedia.org/wiki/Lean_product_development"&gt;development&lt;/a&gt; [working in small batches with tight feedback cycle]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What is interesting is Trunk based development, the most controversial of the above. The authors of the &lt;a href="http://itrevolution.com/devops-handbook"&gt;DevOps Handbook &lt;/a&gt;mentioned the below in the book:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/devops-book-quote.png" alt="Trunk based development" /&gt;&lt;/p&gt;

&lt;p&gt;Trunk based development was highlighted in the report for last few years as a key differentiator between the high performing and low performing teams.&lt;/p&gt;

&lt;p&gt;Short-lived branches are aligned with Trunk based development because the focus is on small batches. But how short is Short-lived? The research shows that &lt;strong&gt;&lt;em&gt;branches&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;_ living beyond a day_&lt;/strong&gt; slows down the team’s integration and deployment flow and that’s a warning sign to look at the team’s practices and architecture.&lt;/p&gt;

&lt;p&gt;Tapabrata Pal, Director of Engineering at Capital One, &lt;a href="https://www.youtube.com/watch?v=6Q0mtVnnthQ"&gt;talks &lt;/a&gt;&lt;a href="https://www.youtube.com/watch?v=6Q0mtVnnthQ"&gt;about&lt;/a&gt; how changing the Branching strategy along with automating the pipeline helped them increase the deployments by 20%.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://samnewman.io/index.html"&gt;Sam Newman&lt;/a&gt; in his talk &lt;a href="https://www.youtube.com/watch?time_continue=2&amp;amp;v=lqRQYEHAtpk"&gt;Feature &lt;/a&gt;&lt;a href="https://www.youtube.com/watch?time_continue=2&amp;amp;v=lqRQYEHAtpk"&gt;Branches&lt;/a&gt;&lt;a href="https://www.youtube.com/watch?time_continue=2&amp;amp;v=lqRQYEHAtpk"&gt; and Toggles in a post Github world&lt;/a&gt; mentions the formulae for calculating the pain of merging:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/pain-or-merge.png" alt="Pain of Merge" /&gt;&lt;/p&gt;

&lt;p&gt;He also talks about the Pull Request model popularised by Github and why it makes sense for Open Source and how it becomes a hindrance to Continuous Flow.&lt;/p&gt;

&lt;p&gt;Fundamentally the Continuous Flow can be built if the team has clarity &lt;a href="http://www.multunus.com/blog/2017/03/forgotten-story-whom-are-we-building-it-for/"&gt;for whom they are building the products for&lt;/a&gt; and &lt;a href="http://www.multunus.com/blog/2017/04/optimising-for-happiness/"&gt;optimising&lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2017/04/optimising-for-happiness/"&gt; for happiness&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to know more, please refer the following on the same topic:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.infoq.com/presentations/death-continuous-integration"&gt;The Death of &lt;/a&gt;&lt;a href="https://www.infoq.com/presentations/death-continuous-integration"&gt;Continuous&lt;/a&gt;&lt;a href="https://www.infoq.com/presentations/death-continuous-integration"&gt; Integration&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://martinfowler.com/bliki/ContinuousIntegrationCertification.html"&gt;Continuous&lt;/a&gt;&lt;a href="https://martinfowler.com/bliki/ContinuousIntegrationCertification.html"&gt; Integration&lt;/a&gt;&lt;a href="https://martinfowler.com/bliki/ContinuousIntegrationCertification.html"&gt; Certification&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://speakerdeck.com/tdpauw/xp2017-feature-branching-is-evil"&gt;Feature Branching is Evil&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://trunkbaseddevelopment.com/"&gt;Trunk based &lt;/a&gt;&lt;a href="https://trunkbaseddevelopment.com/"&gt;development&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2017/03/long-living-feature-branches-an-antipattern/"&gt;Long living Feature &lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2017/03/long-living-feature-branches-an-antipattern/"&gt;Branches&lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2017/03/long-living-feature-branches-an-antipattern/"&gt; - An Anti Pattern&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://vimeo.com/210631471"&gt;Merge hells&lt;/a&gt;&lt;a href="https://vimeo.com/210631471"&gt;!! Feature Toggles to the rescue&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2013/06/github-workflow-vs-mainline-development/"&gt;GitHub Workflow vs Mainline &lt;/a&gt;&lt;a href="http://www.multunus.com/blog/2013/06/github-workflow-vs-mainline-development/"&gt;development&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
  </entry>
  <entry>
    <title>Operability</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/06/operability/"/>
    <id>http://www.multunus.com/blog/2017/06/operability/</id>
    <published>2017-06-28T09:30:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/operability+-+meme.jpg" alt="Operability" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Operability is the ability to keep an equipment, a system or a whole industrial installation in a safe and reliable functioning condition, according to predefined operational requirements.&lt;/em&gt;
~&lt;em&gt;&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Operability]"&gt;https://en.wikipedia.org/wiki/Operability&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The term Operability caught my attention during &lt;a href="https://web.pipelineconf.info/programme/speakers/#Dan+North"&gt;Dan North’s keynote titled Ops and Operability @ Pipeline Conference&lt;/a&gt;. I had heard this term many times in the past, especially as part of &lt;a href="https://en.wikipedia.org/wiki/Non-functional_requirement"&gt;"ilities"&lt;/a&gt;. But this talk was different, about the importance of developers asking and experiencing the answers for the below questions:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/ops-and-operability.png" alt="Ops and Operability" /&gt;&lt;/p&gt;

&lt;p&gt;So how do you measure Operability? How do you need to know what needs to be improved?&lt;/p&gt;

&lt;h2 id="state-of-devops-report-17"&gt;State of DevOps Report ‘17&lt;/h2&gt;

&lt;p&gt;Every year, Puppet along with &lt;a href="https://devops-research.com/about.html"&gt;Nicole Forsgren&lt;/a&gt;, &lt;a href="https://continuousdelivery.com/"&gt;Jez Humble&lt;/a&gt;, &lt;a href="http://www.realgenekim.me/"&gt;Gene Kim&lt;/a&gt;, &lt;a href="https://puppet.com/company/leadership/nigel-kersten"&gt;Nigel Kersten&lt;/a&gt; publishes this report by analysing the results of a survey that they conduct. 
They have received more than 27,000 responses over the last six years and found clear evidence that DevOps practices yield remarkable results for IT teams and organisations.&lt;/p&gt;

&lt;p&gt;The report measures the performance of various teams using the following four metrics and categorises them as &lt;strong&gt;High&lt;/strong&gt;, &lt;strong&gt;Medium&lt;/strong&gt; and &lt;strong&gt;Low&lt;/strong&gt; performers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Deployment Frequency&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lead time [from commit to production]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mean Time to Recovery&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change Failure Rate [% of changes resulting in impairment or service outage requiring hotfix or patch]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The analysis shows that the high performing teams always outplay the rest on all the above metrics by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;On Demand deployment&lt;/em&gt;&lt;/strong&gt; over deployments once per week or month&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;Less than an hour of Lead time&lt;/em&gt;&lt;/strong&gt; than once in a week to a month&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;Less than an hour of Mean time to Recovery&lt;/em&gt;&lt;/strong&gt; than once in a week to a month&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;em&gt;0-15% Change Failure Rate&lt;/em&gt;&lt;/strong&gt; than 30-45%&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reasons the high performance teams outplay others are due to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;High level of Automation [build, test and deploy automations]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;Trunk Based Development&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Loosely coupled Architecture&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lean_product_development"&gt;Lean product development&lt;/a&gt; [working in small batches with tight feedback cycle]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To summarise, Continuous Delivery, DevOps along with Lean product development helps the team to be high performant.&lt;/p&gt;

&lt;p&gt;The report covers in detail about each aspect of the above. You can download the report from the below link.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://puppet.com/resources/whitepaper/state-of-devops-report"&gt;https://puppet.com/resources/whitepaper/state-of-devops-report&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="aim-for-operability"&gt;Aim for Operability&lt;/h2&gt;

&lt;p&gt;Coming back to Operability, the topic of this post, Continuous Delivery focuses on Operational Excellence. As Steve Smith has mentioned in the post &lt;a href="http://www.alwaysagileconsulting.com/articles/aim-for-operability-not-devops-as-a-cult/"&gt;Aim for Operability, not DevOps as a cult&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Operability&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;is of critical importance to Continuous Delivery, as throughput is dependent upon the ability of the organisation to maintain safe and reliable systems according to its operational requirements.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And focusing on improving the four metrics mentioned above - Deployment Frequency, Lead Time, &lt;a href="https://www.thoughtworks.com/radar/techniques/focus-on-mean-time-to-recovery"&gt;Mean time to Recovery (MTTR)&lt;/a&gt;, Change Failure Rate - helps you to improve Operability. These metrics are for improving the flow - a continuous flow of value to the customers.&lt;/p&gt;

&lt;p&gt;Key for this, IMO, is &lt;a href="http://www.multunus.com/blog/2014/08/production-outages-part-2/"&gt;building resilience&lt;/a&gt; - resilient teams, resilient management and leadership and resilient systems. And that is where the culture comes into the picture, a culture where there are blameless postmortems to learn from incidents and take appropriate measures in the future.&lt;/p&gt;

&lt;p&gt;I had written briefly about &lt;a href="http://www.multunus.com/blog/2016/11/tryst-continuous-delivery/#get-started"&gt;how to get started with Continuous Delivery&lt;/a&gt; at a very high level. If you are really keen on taking it forward, please read &lt;a href="http://itrevolution.com/devops-handbook"&gt;DevOps Handbook&lt;/a&gt; by Gene Kim, Jez Humble, Patrick Debois, and John Willis.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Migrating to Cloud - In a Continuous Delivery manner</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/06/migrating-to-cloud-continuous-delivery/"/>
    <id>http://www.multunus.com/blog/2017/06/migrating-to-cloud-continuous-delivery/</id>
    <published>2017-06-16T09:30:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/7/005/074/19e/017c499.jpg" alt="Akshay Surve" style="width:250px;float: left;padding-right:10px;" /&gt;
Recently during &lt;a href="https://www.meetup.com/SoftwareArchitectsBangalore/events/237117024/"&gt;a meetup&lt;/a&gt;, I got a chance to listen to &lt;a href="https://www.linkedin.com/in/akshaysurve/"&gt;Akshay Surve&lt;/a&gt;, co-founder of DeltaX.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.deltax.com/"&gt;DeltaX&lt;/a&gt; is a platform which provides analytics around Social Media Marketing.&lt;/p&gt;

&lt;p&gt;Akshay shared an interesting story about how DeltaX moved to cloud over a period of six months in a continuous delivery manner.&lt;/p&gt;

&lt;p&gt;Quoting Akshay, as he wrote in &lt;a href="https://dxrecursion.aerobatic.io/articles/2017-04/migration-to-azure"&gt;his blog&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;In the second half of 2016 - we decided to migrate our multi-tenant app from bare-metal servers to Azure. While you can find numerous benchmarks for various cloud platforms - there are very few relatable drill downs on the thought process as part of such migrations to the cloud as is. More importantly, this was not just a migration - it was literally a war with all hands on the deck; keeping the existing usage, client data and growth intact we were able to migration over 1.4TB data and existing clients to the cloud successfully.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They had a multi-tenant database, so they moved tenant by tenant to the cloud instead of the entire migration. It took them around six months for the same, but taking it slowly helped them to plan better.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/deltaX-migration.png" alt="Migration Timeline" /&gt;&lt;/p&gt;

&lt;p&gt;The most interesting part for me in the talk is the way they sliced the huge mountain to small batches rather than doing it in a single big-batch. The small batch allowed them to observe, and optimise further and also allowed them to switch back as they had both the systems running parallel. I know small is relative here, but you get the point :)&lt;/p&gt;

&lt;p&gt;Continuous Delivery is about delivering small batches of changes in a repeatable and sustainable manner. It is less risky because it will mostly be automated and mostly it will be reversible steps.&lt;/p&gt;

&lt;p&gt;Database is one place where usually Continuous Delivery is considered to be difficult. In my previous post, I wrote about how to approach database refactoring using &lt;a href="http://www.multunus.com/blog/2017/06/continuous-delivery-for-database/"&gt;Expand and Contract Pattern&lt;/a&gt;. And Akshay and team have shown an example of how it can be done for migrating to cloud too. They analysed, developed and deployed in small chunks which gave them confidence about the system over time.&lt;/p&gt;

&lt;p&gt;You can watch the video of his talk in the below link:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=niwLpGuaAiU"&gt;https://www.youtube.com/watch?v=niwLpGuaAiU&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently I read about how Capital One, one of the leading banks of US, &lt;a href="https://medium.com/capital-one-developers/moving-one-of-capital-ones-largest-customer-facing-apps-to-aws-668d797af6fc?imm_mid=0f2918&amp;amp;cmp=em-webops-na-na-newsltr_20170609"&gt;moved their customer facing app to AWS&lt;/a&gt;, which has an active user base of tens of millions of customers.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Continuous Delivery for Database</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/06/continuous-delivery-for-database/"/>
    <id>http://www.multunus.com/blog/2017/06/continuous-delivery-for-database/</id>
    <published>2017-06-07T14:40:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In my previous posts, I touched upon &lt;a href="https://paulhammant.com/blog/branch_by_abstraction.html"&gt;Branch by Abstraction&lt;/a&gt; and &lt;a href="https://www.martinfowler.com/bliki/StranglerApplication.html"&gt;Strangler Pattern&lt;/a&gt; which can be used as a technique for long refactorings or rewrites of the application. I also wrote about how to approach &lt;a href="http://www.multunus.com/blog/2013/09/what-is-agile-design/"&gt;emergent design&lt;/a&gt; instead of &lt;a href="http://c2.com/cgi/wiki?BigDesignUpFront"&gt;Big Upfront Design&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What about Database changes? Can it be done in a continuous delivery manner?&lt;/p&gt;

&lt;p&gt;Evolutionary Database or Refactoring Database is a concept that came out through the Book - &lt;a href="https://martinfowler.com/books/refactoringDatabases.html"&gt;Refactoring Databases&lt;/a&gt; published a decade back. The book talks many patterns that can be applied for Evolutionary Design of databases which is key for Continuous Delivery.&lt;/p&gt;

&lt;p&gt;Most of ORMs support migrations which allow database versioning. But how do you take care of porting data when refactoring a big table to multiple smaller ones or handling deletion of columns etc. This is where the &lt;a href="https://martinfowler.com/bliki/ParallelChange.html"&gt;expand contract pattern&lt;/a&gt; can be applied, which is somewhat similar to the Branch by abstraction where you keep the old and new implementation in parallel for some time.&lt;/p&gt;

&lt;p&gt;Let me explain that with an example, one of the database changes that we made for our product.&lt;/p&gt;

&lt;p&gt;The application receives enquiries through the IVR system to automate the customer support calls. Depending upon the option selected through the IVR, an SMS is sent to the customer which they can use for further interaction with the system.&lt;/p&gt;

&lt;p&gt;When we started off, we had the following fields for the enquiries table:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;customer_contact_number&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;call_start_time&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;call_end_time&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;extension&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;customer_name&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;customer_email&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We added the &lt;em&gt;name&lt;/em&gt; and &lt;em&gt;email&lt;/em&gt; of the customer later down the line to the enquiries table. But we realised that it’s time to move out customer related data to another table so that we can reference it throughout the application.&lt;/p&gt;

&lt;p&gt;It required the following steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Add the &lt;em&gt;customers&lt;/em&gt; table&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change the code to use &lt;em&gt;customers&lt;/em&gt; table&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Port the existing data to the &lt;em&gt;customers&lt;/em&gt; table&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Delete the fields from &lt;em&gt;enquiries&lt;/em&gt; table&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of us know that rollback of database migrations is hard when it comes to deleting of table or fields. So it is always recommended to do the migrations, port the data and watch it for some time and then delete the unwanted fields.&lt;/p&gt;

&lt;p&gt;This means we need to have both the earlier and current implementation running in parallel for some time. And that is what is called the expand-contract pattern.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/db-cd.png" alt="&amp;quot;DB - Expand Contract Pattern&amp;quot;" /&gt;&lt;/p&gt;

&lt;p&gt;This is also known as &lt;a href="https://martinfowler.com/bliki/ParallelChange.html"&gt;Parallel Change&lt;/a&gt;, which can be applied for other refactorings which require backward compatibility [eg: API changes]. Branch by Abstraction also follows parallel change to support long-term refactoring.&lt;/p&gt;

&lt;p&gt;Following are some references about Database Refactorings and how to support Continuous Delivery of Databases.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ViXMER7RlVU"&gt;Enabling Continuous Delivery with Database Practices&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://martinfowler.com/bliki/ParallelChange.html"&gt;Parallel Change&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://martinfowler.com/articles/evodb.html"&gt;Evolutionary Database Design&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Are you doing CI or CI Theatre ?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/05/ci-theatre/"/>
    <id>http://www.multunus.com/blog/2017/05/ci-theatre/</id>
    <published>2017-05-27T14:40:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/theatre.jpg" alt="How to do Code Review" /&gt;&lt;/p&gt;

&lt;p&gt;There are many Continuous Integrations tools available - Jenkins (the most popular one), and other hosted tools such as Circle CI, Wercker, Codeship, Bitrise to name a few. Does it mean that if we are using any of the tools, we are "&lt;em&gt;doing CI&lt;/em&gt;?"&lt;/p&gt;

&lt;p&gt;The following is the definition of Continuous Integration as per the Wikipedia:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Continuous Integration (CI) is the practice of merging all developer working copies to a shared &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Trunk_(software)"&gt;mainline&lt;/a&gt; several times a day&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;According to the definition above, if you are not integrating &lt;strong&gt;&lt;em&gt;at least once in a day&lt;/em&gt;&lt;/strong&gt; to mainline (aka trunk), then it is not Continuous Integration. Instead, it is called &lt;a href="https://www.thoughtworks.com/radar/techniques/ci-theatre"&gt;CI Theatre&lt;/a&gt; which means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Running CI against a shared mainline but with infrequent commits, so integration isn't really continuous;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Running a build with poor test coverage&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Allowing the build to stay red for long periods;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Running CI against feature branches which result in &lt;a href="http://paulhammant.com/2017/02/14/fake-news-via-continuous-isolation/"&gt;continuous isolation&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="commits-as-communication"&gt;Commits as communication&lt;/h2&gt;

&lt;p&gt;CI Theatre gives the developers a good feeling, but sadly it misses out the benefits.&lt;/p&gt;

&lt;p&gt;Commits are the way to communicate between the developers. If we are delaying that for later by not committing or committing to a branch, then it is a problem as it is important to communicate at the right time.&lt;/p&gt;

&lt;p&gt;The Feature Branching popularised by Github Flow makes sense for Open Source where you need a more rigorous way to look at what goes into the codebase, in an organisation where you seem to be knowing or can know each individual who commits code, a very strict commit policy may not be required.&lt;/p&gt;

&lt;p&gt;If you believe that your environment totally demands Code Review, do pairing which is the best way to review as it is a continuous review or have short living branches i.e. branches those live for few hours to a day or two.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/code-review.png" alt="How to do Code Review" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;&lt;em&gt;&lt;strong&gt;Courtesy:&lt;/strong&gt; &lt;a href="https://speakerdeck.com/tdpauw/xp2017-feature-branching-is-evil"&gt;Feature Branching is Evil by Thierry de Pauw&lt;/a&gt;&lt;/em&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;And the tooling is not important for doing Continuous Integration. Read &lt;a href="http://www.jamesshore.com/Blog/Continuous-Integration-on-a-Dollar-a-Day.html"&gt;Continuous Integration a Dollar a Day&lt;/a&gt;, to see how to &lt;em&gt;"do CI"&lt;/em&gt; with an old machine and a rubber duck.&lt;/p&gt;

&lt;p&gt;Once you start &lt;em&gt;doing CI&lt;/em&gt; [not &lt;a href="https://www.gocd.io/2017/05/16/its-not-CI-its-CI-theatre/"&gt;&lt;em&gt;CI Theatre&lt;/em&gt;&lt;/a&gt;], see whether you pass the &lt;a href="https://martinfowler.com/bliki/ContinuousIntegrationCertification.html"&gt;CI certification test&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/ci-certification.png" alt="CI Certification" /&gt;&lt;/p&gt;

&lt;p&gt;If it passes, excellent. You are on the right track for Continuous Delivery.&lt;/p&gt;

&lt;h2 id="wrong-branching-strategy"&gt;Wrong branching strategy&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/long-lived-branches.png" alt="Long Lived Branches" /&gt;&lt;/p&gt;

&lt;p&gt;I got a chance to listen to &lt;a href="https://twitter.com/alainhelaili"&gt;Alain Hélaïli&lt;/a&gt; about &lt;a href="https://xp2017.sched.com/event/91if/end-to-end-agility-at-github"&gt;End to End Agility @ Github&lt;/a&gt; in which he emphasised that the branches are short lived @ Github than the complex long-lived branches as shown above. And they deploy 50 times a day to production. But it is sad to see that many of us ignore "short-lived" from the branching and say we follow Github flow which kills the purpose.&lt;/p&gt;

&lt;p&gt;I also heard about an organisation installing a daemon on every developer machine which deletes uncommitted changes. That will be really fun :)&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Continuous delivery - Raspberry Pi as Media Players</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/05/cd-raspberry-pi-as-media-players/"/>
    <id>http://www.multunus.com/blog/2017/05/cd-raspberry-pi-as-media-players/</id>
    <published>2017-05-21T09:30:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-images/vamsee.jpg" alt="Vamsee" style="width:200px;float: left;padding-right:10px;" /&gt;&lt;/p&gt;

&lt;p&gt;This is a continuation of the &lt;a href="http://www.multunus.com/blog/2017/05/cd-raspberry-pi-as-media-players/"&gt;previous post&lt;/a&gt;, in which &lt;a href="https://twitter.com/vamsee"&gt;Vamsee Kanakala&lt;/a&gt; shared his journey and thoughts about Continuous Delivery.&lt;/p&gt;

&lt;p&gt;In this post, he is sharing his experience while working with one of the customers.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This is an outdoor advertising company which uses Raspberry Pi &amp;amp; Linux to power their outdoor TV units which stream advertisements in highly-trafficked public places like railway stations and airports.&lt;/p&gt;

&lt;p&gt;The main problem they had was that any changes to the software which runs the media controllers (Linux boxes) running the TV were cumbersome. They were contemplating shifting to the cheaper Raspberry Pi platform to power their media controllers instead of earlier Fedora running on regular PC units. There was practically no release management either.&lt;/p&gt;

&lt;p&gt;Since there was already a Proof of Concept for Raspberry Pi ready and it needed to be operationalized on the field, I started on that. We made the software field-ready, ran several tests across multiple railway stations, and rolled out to outstation locations.  I also upgraded the existing Linux boxes to Debian installation and brought them up to speed with the software running on the &lt;a href="https://www.raspbian.org/"&gt;Raspbian&lt;/a&gt; platform.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-images/raspberry-pi-2.jpeg" alt="Raspberry Pi" /&gt;&lt;/p&gt;

&lt;p&gt;The Raspberry Pi release of the media controller, after about 6 months of initial development and intensive testing on the field, turned out to be stable and the client started rolling out the new platform across all the stations across Karnataka, eventually Tamil Nadu, AP, Maharashtra and Delhi NCR over the next couple of years. Last I heard, they’re crossing 2K units of Raspberry Pi installations across India. Also, we added the capability to roll out releases on the fly after the initial installation, so rolling out releases also became very simple (OTA - over the air) rather than the earlier method of manually replacing all the USB drives attached to each PC unit.&lt;/p&gt;

&lt;h2 id="the-bottlenecks-faced"&gt;The bottlenecks faced&lt;/h2&gt;

&lt;p&gt;One of the main bottlenecks of the existing team of sysadmins not being exposed to proper release management and software development practices. The earlier procedure was to mount and open a bootable .iso image, modify the required files, and repack the iso file and copy it over to other USB drives, so and so forth. Needless to say, this was time-consuming, error-prone and highly inconvenient.&lt;/p&gt;

&lt;p&gt;So we planned a system that once installed, will handle upgrades over the air (OTA) along with the media files that are being updated over the air anyways. But to enable this, I had to train the team on good git workflows, how to do 2-week releases and how to roll them out onto the field.&lt;/p&gt;

&lt;p&gt;Next, instead of just repacking modified iso files, we moved to a disk-image creation framework (Debian LiveCD project) so we could check in everything into git, make changes and build the release-ready golden image with just one command. I also had to do some hands-on mentoring as well as clear documentation on how to commit, how to tag releases, how to build pre-release and release images, how to clearly communicate with on-field teams for upcoming releases, etc. Since we had to handle two different image formats (for Raspberry Pi units and regular PCs) it took careful planning on syncing new features between two different platforms and making sure they are released almost simultaneously.&lt;/p&gt;

&lt;p&gt;We also had some problems like proper reporting of the issues faced on the field, triaging of the bugs reported, etc. There were a lot of issues that would show up only on the field, so we had to create a test bay of Raspberry Pis and PCs with similar setup as that on the field, that runs continuously in the lab and we log metrics on important features with each new release so we don’t have any regressions in performance.&lt;/p&gt;

&lt;p&gt;Additionally, I setup a system for reporting the issues in the field and triaging of the same. I also setup a weekly meeting call with all the stakeholders including field managers to plan what’s coming up in the next release and how to roll it out onto the field. Eventually, this team became self-sufficient and are now able to run the release management by themselves.&lt;/p&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;

&lt;p&gt;As Vamsee shared in the experience above, optimising the build pipeline is the way to improve continuous delivery. It can be done for any team, for any platform given a good amount of focus and investment.&lt;/p&gt;

&lt;p&gt;If you are convinced about the value of Continuous Delivery, what are you waiting for? 
Follow the steps in &lt;a href="/blog/2016/11/tryst-continuous-delivery#get-started"&gt;Getting Started section of the previous post&lt;/a&gt; if you need guidance in getting started.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Interview with Vamsee</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/05/interview-with-Vamsee/"/>
    <id>http://www.multunus.com/blog/2017/05/interview-with-Vamsee/</id>
    <published>2017-05-08T16:20:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-images/vamsee.jpg" alt="Vamsee" style="width:220px;float: left;padding-right:10px;" /&gt;
We have a change for the post in this week. I usually share guidelines or case studies about how software should be delivered. 
Instead, this week I am interviewing &lt;a href="https://twitter.com/vamsee"&gt;Vamsee Kanakala&lt;/a&gt; - who is a good friend of mine and a popular personality in both Ruby and DevOps communities, especially in India.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Q: A quick introduction about yourself i.e. your experience as Dev, Ops and then as a DevOps evangelist&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve been in the IT industry for nearly 14 years now - out of which I’ve been a web developer for close to 10 years. Though I have worked on multiple web technologies over the years, a large part of my experience is with Ruby on Rails and related technologies. I’m a big believer in Agile methodologies, and Rails had been an easy fit. Since I always had an entrepreneurial bent of mind, I chose to be a consultant working for startups, mostly remotely.&lt;/p&gt;

&lt;p&gt;One of my earlier clients, an Australian startup asked me to be the Engineering Manager for their Indian office, I had the opportunity to look at some of the issues a small but dynamic team faces up close - like setting up proper developer workflows - processes around git usage, fixing deployment issues, having proper ci/build server setup, etc. That’s when I realized how important a good DevOps engineer is for startup teams.&lt;/p&gt;

&lt;p&gt;Since I had some trouble hiring a good DevOps engineer for that team, after I left that job, I hit upon the idea of offering precisely this expertise as a service to startups. By that time, I was already playing with tools like Puppet, Chef, Docker, etc. So the transition to DevOps consultant was smooth, and I have been helping small teams setup &lt;em&gt;DevOps processes&lt;/em&gt; and execute successfully on ambitious release goals for these past 4 years.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Q: Can you expand a little more on what you mean by DevOps processes?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you look at the whole nine yards of the building and maintaining of software, a lot of questions arise such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;How automated are developer environments?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do they tie into ease of deployments?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do we need containers? Why?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is implementing immutable servers a goal?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are we doing backups?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are the restore-tested?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How about monitoring?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that is what is I meant by DevOps processes above i.e. looking at the whole nine yards and removing the impediments for smooth flow of software delivery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Q: A related question to the above. In your opinion, what is your definition of Continuous Delivery? Why does Continuous Delivery matter?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I touched upon that above. My definition of Continuous Delivery would be a team being able to &lt;em&gt;release software early and often, with as little friction as possible&lt;/em&gt;. Continuous Delivery matters immensely for any team which cares about shipping features on time. In my opinion, it’s also a state of mind, that’s shared by everyone on the team - the attitude of relentlessly removing the obstacles to getting to a place that would let them ship several times a day without any disruptions to regular development work. In other words, deployments should be as simple as a git commit, and any developer should be able to deploy to production, provided the commit passes the automated tests.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Q: I assume customers approach you when they have good traction in the market and want to improve the predictability and sustainability of delivery. But the challenge the team has is implementing Continuous Delivery Pipeline while continuing to deliver the product. How do you approach this to maintain the product delivery and improving the delivery pipeline?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Actually, my clients span the whole spectrum - some approach me because they’ve had a break-in on one of their servers and they realize that the current team doesn’t have the bandwidth to take care of the servers. Some, like you mentioned, need help in scaling up the speed of releases. I’ve also worked with startups who’ve had forward-thinking technical leadership and wanted to do things the "right way" from the get go.&lt;/p&gt;

&lt;p&gt;But if it’s help with scaling release speed they want, I always tell them there’s no easy answer - first, I need to measure the velocity of the current team, understand their current bottlenecks, and make changes to the status quo - this might involve training the developers with the correct git workflows, helping them write better tests, etc. This might also involve rationalizing the deploy process so they could ship faster.&lt;/p&gt;

&lt;p&gt;I always look for the low-hanging fruit first and then go about changing the hard things - like development culture. If it means that the releases have to take a break so I can fix some broken workflows, so be it. I don’t make any promises up front because each team is different when it comes to the challenges they face in shipping faster. However, usually the solutions are not inaccessible by any measure - it just takes instilling discipline in the team and educating them about the &lt;em&gt;right way&lt;/em&gt; of doing things, and how a little faith in the process makes their lives easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Q: What do you think are the fundamentals that every team should be doing, to implement a smooth Continuous Delivery Pipeline? What needs to change in the team fundamentally for this?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What I hope for the most is a &lt;em&gt;curious team&lt;/em&gt; - a team which realizes some things are broken and are eager to the fix them - it makes my job immensely easier. And equally frequently, I hope for &lt;em&gt;humble technical leadership&lt;/em&gt; - people who are ready to admit things are broken and are ready to listen to an outside consultant - however hard it might be to have someone external point out weaknesses. This is perhaps the single most important reason whether I succeed or not - if the client doesn’t give me enough rope to change how things are currently being done, there’s very little I can do to fix those issues.&lt;/p&gt;

&lt;p&gt;All change is hard, so it involves courage on all parties - on my part to push the team to change, the leadership to accept things are broken and to seek help and the team to be open to new ideas and be willing to try something new. Obviously, I go out of my way to help all parties get to this place as much as I can, but the fundamental requirement is for the team to be &lt;em&gt;ready for the change.&lt;/em&gt; It’s not always easy, which is what makes my work very challenging and when it works, equally rewarding.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Thank you Vamsee for taking time and sharing your thoughts and opinions with us.&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;&lt;em&gt;In the next part, we’ll talk more about your experiences while working with customers.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Optimising for Happiness</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/04/optimising-for-happiness/"/>
    <id>http://www.multunus.com/blog/2017/04/optimising-for-happiness/</id>
    <published>2017-04-25T15:20:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="http://cdn.loc.gov/service/pnp/fsac/1a34000/1a34900/1a34931r.jpg" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;Following is a story, a real incident, that &lt;a href="https://en.wikipedia.org/wiki/Peter_Drucker"&gt;Peter Drucker&lt;/a&gt; mentions in his book &lt;a href="https://en.wikipedia.org/wiki/Concept_of_the_Corporation"&gt;Concept of the Corporation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;During the World War II, workers in an aircraft plant were displaying "bad morale" and doing “slipshod work”, as workers had never seen any of the planes they were producing, had never found out where the part they worked on fitted, and had never been told how important this part was to the total functioning of the place.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So a big bomber got brought in for employees to see. The workers were invited to inspect it, to sit in it and to bring their wives and children along. When finally they were shown the part they were making in the bomber, and its importance was explained to them by a crew member, the bad morale and unrest disappeared at once.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In other words, these workers suddenly got the benefits of clarity, concreteness and purpose—all of which are essential to provide if you want something from someone.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Chad Dickenson, CEO of Etsy, talks about how they &lt;a href="https://www.youtube.com/watch?v=22EECFEk9Xs"&gt;Optimise for Developer Happiness at Etsy&lt;/a&gt; by "making it easier to ship". In the same talk, he mentions how Continuous Deployment helps them to achieve the same.&lt;/p&gt;

&lt;h2 id="the-biggest-puzzle---connecting-the-dots"&gt;The biggest puzzle - Connecting the dots&lt;/h2&gt;

&lt;p&gt;In one of my earlier posts, I mentioned about the trap of &lt;a href="http://www.multunus.com/blog/2017/03/forgotten-story-whom-are-we-building-it-for/"&gt;forgetting the poor users&lt;/a&gt; in the journey of using the latest, cool frameworks or technologies. By creating a system for the developers to connect to the end users, this trap can be avoided.&lt;/p&gt;

&lt;p&gt;It is good to ask these questions to ourselves:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;How do our users feel when they use the product or feature we built? What emotions do they go through?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we make them happy by making it easier to use?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we continually make the users happier?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By optimising for developer happiness [by making it easier to ship], the software developers should be able to concentrate on the above questions and improve the product further. In the end, the only thing that matters is the value we deliver to the users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deployment Pipeline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So how do you optimise for developer happiness? We need a system for the easy flow of code from development to production. You can visualise it as a pipeline.&lt;/p&gt;

&lt;p&gt;Deployment Pipeline aka Build Pipeline or Continuous Delivery Pipeline is a way to define different stages in the software delivery to get faster and frequent feedback.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/deployment-pipeline.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;It kicks in when someone commits to the repository. The feedback required are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The code can be compiled and build&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Automated testing to capture regression issues, if any&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deploy it to necessary environment(s)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The stages in the pipeline changes depending upon the team. Say for eg: some teams might have staging environments. Others may have automated security or performance tests so and so forth.&lt;/p&gt;

&lt;p&gt;Needless to say, it should be optimised for free flow rather than getting stuck every once in awhile.&lt;/p&gt;

&lt;p&gt;The bottlenecks for this free flow are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Branching strategy - merging of multiple branches for deployment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lack of automated tests&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lack of automation for deployments&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The right &lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;Continuous Integration setup with Mainline development&lt;/a&gt; takes care of the first. The rest are simple enough to understand i.e. test and deployment automation.&lt;/p&gt;

&lt;p&gt;For a green field project, it might be easier to get started in this way. But implementing this for a brown field is not easy. So the question is where to start?&lt;/p&gt;

&lt;p&gt;The first thing is to have a visualisation of the pipeline even before implementing it. Lookout areas where the flow gets interrupted. It usually gets stuck where there is no automation.&lt;/p&gt;

&lt;p&gt;You cannot automate everything on day 1. And don’t expect to fix all the problems over night. It takes time and needs to be balanced with the product delivery too. It is not easy, but take small steps and eventually, it will reach a much more automated pipeline. If it brings in happiness, why not invest in the same?&lt;/p&gt;

&lt;p&gt;Start with automating critical paths. For eg: use tools like &lt;a href="https://github.com/twitter/diffy"&gt;Diffy&lt;/a&gt; while parallelly adding unit tests for the newly added code.&lt;/p&gt;

&lt;p&gt;Applying the &lt;a href="http://wiki.c2.com/?BoyScoutRule"&gt;Boy Scout Rule&lt;/a&gt; helps to bring in improvements continuously which will result in significant improvements over a period of time.&lt;/p&gt;

&lt;p&gt;Having a deployment pipeline gives the developers enough time as the releases/deployments are painless. It also creates enough base for a team to have an environment to interact with the end users.&lt;/p&gt;

&lt;p&gt;As mentioned in the beginning of the post, extending this pipeline to connect to the end users brings in the happiness to the full cycle as &lt;em&gt;clarity, concreteness and purpose—all of which are essential to provide if you want something from someone.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/before-after-cd.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.druckerinstitute.com/2012/04/master-motivation/"&gt;Mastering Motivation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=22EECFEk9Xs"&gt;Optimise for Developer Happiness&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://blog.leanstack.com/continuous-deployment-startup-lessons-learned-conference-4-23-2010-def20ca345e0"&gt;Continuous Deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Design - To Avoid Technical Cruft</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/04/continuous-design-to-avoid-cruft/"/>
    <id>http://www.multunus.com/blog/2017/04/continuous-design-to-avoid-cruft/</id>
    <published>2017-04-15T16:20:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In &lt;a href="http://www.multunus.com/blog/2017/04/technical-debt-a-catchall-phrase/"&gt;my previous post&lt;/a&gt;, I referred to the below four rules of Simple Design to reduce the code getting messy or becoming&lt;a href="https://en.wikipedia.org/wiki/Cruft"&gt; cruft&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Passes all the tests&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reveals Intention&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;No Duplication&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fewer Elements&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first 3 rules are self-explanatory but the fourth one is confusing and contradictory especially with related to SOLID principles and design patterns. It conveys the principles &lt;a href="http://en.wikipedia.org/wiki/You_aren't_gonna_need_it"&gt;YAGNI&lt;/a&gt; and &lt;a href="http://www.codinghorror.com/blog/2006/10/the-last-responsible-moment.html"&gt;Last Responsible Moment&lt;/a&gt; i.e. don’t do anything assuming that it might be required in future.&lt;/p&gt;

&lt;h2 id="design-incrementally"&gt;&lt;strong&gt;Design Incrementally&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Agile recommends to do design continuously and emerge your design instead of doing a &lt;a href="http://c2.com/cgi/wiki?BigDesignUpFront"&gt;Big Design UpFront&lt;/a&gt; (BDUF) and recommends to &lt;a href="http://www.xprogramming.com/Practices/PracSimplest.html"&gt;Do The Simplest Thing That Could Possibly Work&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is the excerpt from XP Explained Book by Kent Beck on Incremental Design.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;XP teams can meet their human need for immediate and frequent success as well as their economic need to defer investment to the last responsible moment. Some of the teams who read and applied the first edition of this book didn’t get the part of the message about the last responsible moment. They piled story on story as quickly as possible with the least possible investment in design. Without daily attention to design, the cost of changes does skyrocket. The result is poorly designed, brittle, hard-to-change systems.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The question is not whether or not to design, instead the question is when to design. The incremental design suggests that the most effective time to design is in the light of experience.&lt;/p&gt;

&lt;p&gt;If small, safe steps are how to design, the next question is when to improve the design. The simple heuristic I found helpful is to eliminate duplication. &lt;em&gt;I have the same logic in two places, I work with the design to understand how I can have only one copy.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="emergent-design-and-continuous-design"&gt;&lt;strong&gt;Emergent Design and Continuous Design&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Emergent Design - popularised by Neal Ford - the design emerges by following Last Responsible Moment and Idiomatic Patterns. Refer to his &lt;a href="http://www.ibm.com/developerworks/java/library/j-eaed1/index.html"&gt;15 article series&lt;/a&gt;, which talks about the same. I will write about the same, especially about the Idiomatic Patterns, in another post.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.martinfowler.com/ieeeSoftware/continuousDesign.pdf"&gt;Continuous Design&lt;/a&gt; was the term given by James Shore. He explains the same as:&lt;/p&gt;

&lt;p&gt;I prefer the term continuous design because it emphasizes the core of the process: continuously taking advantage of opportunities to improve your design. When you discover a design flaw, you fix it. When a new feature doesn’t fit, you update the design.&lt;/p&gt;

&lt;h2 id="summary"&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Instead of doing a big bang design phase, refactor the code meticulously by applying the&lt;a href="http://wiki.c2.com/?BoyScoutRule"&gt; Boys Scout Rule&lt;/a&gt;. Use tools to identify &lt;a href="http://c2.com/cgi/wiki?AbcMetric"&gt;Cyclomatic Complexity&lt;/a&gt; and &lt;a href="http://www.ibm.com/developerworks/library/j-eaed6/"&gt;Afferent Coupling&lt;/a&gt; in the code. Follow Test Driven Development which helps to do enough design required for the current requirement. Test coverage gives the confidence to refactor the code.&lt;/p&gt;

&lt;h2 id="references"&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://c2.com/cgi/wiki?XpSimplicityRules"&gt;http://c2.com/cgi/wiki?XpSimplicityRules&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://c2.com/cgi/wiki?DoTheSimplestThingThatCouldPossiblyWork"&gt;http://c2.com/cgi/wiki?DoTheSimplestThingThatCouldPossiblyWork&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.netobjectives.com/blogs/primer-emergent-design"&gt;http://www.netobjectives.com/blogs/primer-emergent-design&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://martinfowler.com/articles/designDead.html"&gt;http://martinfowler.com/articles/designDead.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://wirfs-brock.com/blog/2011/01/18/agile-architecture-myths-2-architecture-decisions-should-be-made-at-the-last-responsible-moment/"&gt;http://wirfs-brock.com/blog/2011/01/18/agile-architecture-myths-2-architecture-decisions-should-be-made-at-the-last-responsible-moment/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.codinghorror.com/blog/2007/03/curlys-law-do-one-thing.html"&gt;http://www.codinghorror.com/blog/2007/03/curlys-law-do-one-thing.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://tobeagile.com/2012/10/16/seven-strategies-for-doing-emergent-design/"&gt;http://tobeagile.com/2012/10/16/seven-strategies-for-doing-emergent-design/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*This is an updated version of an earlier post** -**&lt;a href="http://www.multunus.com/blog/2013/09/what-is-agile-design/"&gt; What is Agile Design*?&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Technical Debt - A catchall phrase?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/04/technical-debt-a-catchall-phrase/"/>
    <id>http://www.multunus.com/blog/2017/04/technical-debt-a-catchall-phrase/</id>
    <published>2017-04-07T04:20:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Those who have driven in Bangalore know that how much tough it is to drive here especially during the peak hours @ signals like Silk Board. Everyone tries to get out of the signal as quickly as possible, not giving much importance to the shortcuts we take, like the wrong side, overtaking from left etc.&lt;/p&gt;

&lt;p&gt;We complain about how tough it is to drive in Bangalore and the question that can be asked is &lt;em&gt;how much we contribute to it&lt;/em&gt; or &lt;em&gt;how much we try to correct it&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;This is similar to the excuse we've for Technical Debt. The code is anyways messy, adding one more is not going to make any different. It was like this when I joined the project. We had time pressures so had to release it faster.&lt;/p&gt;

&lt;p&gt;And this thought process ends up creating the Vicious cycle as follows:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/vicious-circle-code.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;And this is the beginning of the so-called Technical Debt.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/technical-debt-a-mess.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;And there is one more term that we all like to complain - Legacy Code. Below is one of the best definitions of legacy code I've ever seen.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/legacy-code.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;Let's look at some examples of what we call as Technical Debt.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/example1.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/example2.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Credit:&lt;/em&gt; &lt;a href="http://thedailywtf.com/articles/the-refactoring"&gt;&lt;em&gt;http://thedailywtf.com/articles/the-refactoring&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following is commonly seen - &lt;em&gt;Ignoring Exceptions&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/example3.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/example4.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;And other common examples which I've not covered are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code duplication&lt;/li&gt;
  &lt;li&gt;Mismatching names&lt;/li&gt;
  &lt;li&gt;Longer methods and/or classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am sure all of us seen variations of all these.&lt;/p&gt;

&lt;h1 id="what-is-technical-debt"&gt;What is Technical Debt&lt;/h1&gt;

&lt;p&gt;Let's take a step back and look at what Wikipedia has to say about Technical debt:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Technical debt can be compared to monetary debt. Unaddressed technical debt increases software entropy. Technical debt is not necessarily a bad thing, and sometimes (e.g., as a proof-of-concept) technical debt is required to move projects forward.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And this is what Ward Cunningham, the person who coined the metaphor, also seemed to have in mind while he coined the term.&lt;/p&gt;

&lt;p&gt;To summarise, it is not a license to create an architecture as follows, nor &lt;a href="https://sites.google.com/site/unclebobconsultingllc/a-mess-is-not-a-technical-debt"&gt;the license to create crappy code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/messy-architecture.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;If we all agree that the above flaw is not considered as professional in other engineering streams, the same rule is applicable to Software Engineering too.&lt;/p&gt;

&lt;p&gt;As prudent professionals, it is our responsibility to follow &lt;a href="https://martinfowler.com/bliki/BeckDesignRules.html"&gt;the four rules of simple design&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passes all the tests&lt;/li&gt;
  &lt;li&gt;Expresses every idea that we need to express&lt;/li&gt;
  &lt;li&gt;No Duplication&lt;/li&gt;
  &lt;li&gt;Minimal methods, classes and modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this includes the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://blog.codinghorror.com/i-shall-call-it-somethingmanager/"&gt;Frequent activity of renaming classes, modules, methods, variables&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Applying &lt;a href="http://wiki.c2.com/?BoyScoutRule"&gt;Boy scout rule&lt;/a&gt; i.e. Leave the campground cleaner than you found it&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.8thcolor.com/en/2013/04/dead-code-is-rotting-your-codebase/"&gt;Delete the unused code courageously&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="technical-debt-quadrant"&gt;Technical Debt Quadrant&lt;/h1&gt;

&lt;p&gt;Going back to the definition of Technical Debt by Wikipedia, it should be a result of a  conscious, thoughtful and prudent decision than that of an unconscious one.&lt;/p&gt;

&lt;p&gt;Martin Fowler uses a quadrant to explain similar concepts where he points out that it is not useful to discuss whether something is a debt or not, better ask whether it is reckless or prudent. The more the issues/flows are in the Prudent section, better it is.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/04/technical-debt-quadrant.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;h1 id="paying-down-technical-debt"&gt;Paying down Technical Debt&lt;/h1&gt;

&lt;p&gt;Every team will have technical debt, and it is normal because we learn with our products continuously so it is ideal to have prudent debts.&lt;/p&gt;

&lt;p&gt;Another thing is that not all of them needs-pay off. Some of them might be in those areas where we hardly make changes.&lt;/p&gt;

&lt;p&gt;So how to identify what needs-payoff? I would like to quote Henrik Kniberg here:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What is technical debt anyway? Anything about your code &amp;amp; development environment that slows you down. For example:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Unclear, unreadable code.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Lack of test automation, build automation, deployment automation, and anything else that could be automated that you do manually today.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Duplicate code.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Tangled architecture &amp;amp; unnecessarily complex dependencies.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Slow, ineffective tools.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Uncommitted code &amp;amp; long-lived branches (hides problems that will slow you down later).&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Important technical documentation that is missing or out-of-date.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Unnecessary technical documentation that is being maintained and kept up-to-date.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Lack of test environments.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Long build-test cycle &amp;amp; lack of continuous integration.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And pay off them with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Continuous refactoring, applying &lt;a href="http://wiki.c2.com/?BoyScoutRule"&gt;Boy Scout Rule&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/blog/2017/01/naming-hardest-thing-software/"&gt;Use constant communications to improve namings&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Setup Continuous Integration, Follow Mainline Development&lt;/li&gt;
  &lt;li&gt;Setup Deployment Pipeline [Automated Testing and Deployment]&lt;/li&gt;
  &lt;li&gt;For long running rewrites or major design/architectural changes, use:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href="https://trunkbaseddevelopment.com/branch-by-abstraction/"&gt;Branch by abstraction&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href="https://trunkbaseddevelopment.com/strangulation/"&gt;Strangler Pattern&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="references"&gt;References&lt;/h1&gt;

&lt;p&gt;Following are some of the highly recommend books for improving the code quality and cleanliness:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;Clean Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Refactoring-Improving-Existing-Addison-Wesley-Technology-ebook/dp/B007WTFWJ6?_encoding=UTF8&amp;amp;amp;btkr=1&amp;amp;amp;ref_=dp-kindle-redirect"&gt;Refactoring&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627"&gt;Growing Object Oriented Software - Guided by Tests [known as the GOOS book]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following are some of the articles/talks on the same subject:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=IadcIkBeBuI"&gt;Building a Culture of Code Quality - Bryan Helmkamp&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=SfWCRl75Kas"&gt;The Technical Debt Trap - Doc Norton&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blog.davidpeterson.co.uk/2011/04/why-do-agile-projects-fail-so-often.html"&gt;Why do teams fail to sustain code quality?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://sites.google.com/site/unclebobconsultingllc/a-mess-is-not-a-technical-debt"&gt;A mess is not a technical debt - Uncle Bob&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=pqeJFYwnkjE"&gt;Debt Metaphor - Ward Cunningham&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://martinfowler.com/bliki/TechnicalDebtQuadrant.html"&gt;Technical Debt Quadrant - Martin Fowler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://martinfowler.com/bliki/SacrificialArchitecture.html"&gt;Sacrificial Architecture - Martin Fowler&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://blog.crisp.se/2013/07/12/henrikkniberg/the-solution-to-technical-debt"&gt;The solution to technical debt - Henrik Kniberg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.codinghorror.com/i-shall-call-it-somethingmanager/"&gt;I Shall Call It.. SomethingManager - Jeff Atwood&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Forgotten Story - Whom are we building it for</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/03/forgotten-story-whom-are-we-building-it-for/"/>
    <id>http://www.multunus.com/blog/2017/03/forgotten-story-whom-are-we-building-it-for/</id>
    <published>2017-03-31T04:02:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Recently, during a conference I was listening to a talk on how a team rewrote the product for better scalability. The product is well known and been existing in the market for some time now.&lt;/p&gt;

&lt;p&gt;I thought it’s good to understand their reasoning and strategy behind rewrite. The speaker mentioned about why rewrite, the standard reasons i.e. hard to add more features or make improvements because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Spaghetti code&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bugs cropping up&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Redundant code, hard to refactor&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It seems they modularised the code for better maintainability and testability which justifies the rewrite. But the highlighted success metric was &lt;em&gt;we produced 100K lines of code in 180 days or so — after which the code was released to production&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;More surprisingly, when asked a question &lt;em&gt;what is the feedback&lt;/em&gt;, the answer was — &lt;em&gt;It looks great we are confident to add more features into the codebase now&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I felt like crying and was about to ask "&lt;em&gt;what about your poor customers who has been waiting for product improvements and what is the ROI for the business who invested many months without getting anything in return&lt;/em&gt;"?&lt;/p&gt;

&lt;p&gt;Someone else asked the question before me, and this is the response:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We released it to 20% of the users and it will eventually get deployed to more in the coming weeks or so.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Hardly any advantage of the rewrite was highlighted from the end users’ perspective. Again the emphasis is the code, the design and the architecture.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I respect the speaker. He seemed a pretty, mature software engineer. But the situation highlights the state of the industry where we love our code so much and forget the end users, for whom we are writing the code for.&lt;/p&gt;

&lt;p&gt;During this age of Continuous Delivery/Deployment with the emphasis to *improve the flow for delivering value continuously, *it is sad to see the success being defined by the code we write — how well we organise it, what framework(s) we use, and the number of lines of code. On top of all, it is completely fine to do all these in a vacuum without releasing anything to the end users.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I heard a similar story from another team too, but the difference here is that the team realised the mistake. Quoting the team member:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We thought we knew everything about the product, identified the features that we need to get rid of, the areas of improvements and the new features to be added. We wrote down everything in detail, drew wireframes, involved the business people before starting the development. This time we added unit testing to increase our confidence in the code and also automated the deployment. We created a deployment pipeline, which kicks off a build for every commit and automatically deploys to staging if the build and tests and successful.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We estimated the release to happen within X months as we were very confident about the requirements, but it took double the time. The business had to continue the investment in this team without any return for many months. Parallelly there was another team to maintain the existing product until the new one reached the entire user base.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We learned the hard lesson, there is nothing called requirement in Software and what needs to be built gets evolved depending upon how the customers interact with your software. So delivering continuously to get feedback is really important.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The good side of the second story is that they learned the lesson in a hard way. But the first team still believes that they did the right thing.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I know each team is different, the context, the business, the skillset, everything differs. But one thing that should be constant is that every business exists for serving customers better. And every team member, regardless of their role, should be working towards achieving that continuously.&lt;/p&gt;

&lt;p&gt;The below article talks about the techniques one can apply to rewrite a legacy application, while delivering value continuously. Please apply those if you are thinking of rewriting. Deploy it in a planned phased manner rather than a big-bang release.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://paulhammant.com/2013/07/14/legacy-application-strangulation-case-studies/"&gt;http://paulhammant.com/2013/07/14/legacy-application-strangulation-case-studies/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another one by &lt;a href="https://en.wikipedia.org/wiki/Joel_Spolsky"&gt;Joel Spolsky&lt;/a&gt; on the similar lines, written almost seventeen years back.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/"&gt;https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This was earlier published under Medium with the same title - &lt;a href="https://medium.com/@leenasn/forgotten-story-whom-are-we-building-it-for-af167062a546"&gt;Forgotten story — Whom are we building it for&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Long living feature branches - An Anti Pattern</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/03/long-living-feature-branches-an-antipattern/"/>
    <id>http://www.multunus.com/blog/2017/03/long-living-feature-branches-an-antipattern/</id>
    <published>2017-03-14T19:02:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;A few years back, we were working on a Javascript heavy web application which had built using &lt;a href="http://backbonejs.org/"&gt;backbone.js&lt;/a&gt;. We found that we were loading all the Javascripts at once than applying lazy loading. This affected the user experience because of the high page load time and wanted to fix that.&lt;/p&gt;

&lt;p&gt;We decide to use &lt;a href="http://requirejs.org/docs/whyamd.html"&gt;Require.js’s AMD&lt;/a&gt; [Asynchronous Module Definition] to implement lazy loading. We had to change our own Javascript files and also needed to apply certain techniques to the external JS [like JQuery] to support AMD. We started on that and realized that we are getting into a black hole as we had to literally change the entire JS code. We didn’t react to our learning and it took around two weeks to completely support AMD.&lt;/p&gt;

&lt;p&gt;We saw changes in the application performance, but the as a team we felt bad because We couldn’t work on anything else during this time because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It was taking longer than expected so the entire team jumped on trying to finish it faster&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;During this time, the application was somewhat broken, so deploying something to production was not possible&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We thought we were doing continuous delivery i.e. every commit can go to production, but it was broken this time. We needed to find out how to handle long running rewriting in a "continuous delivery" manner.&lt;/p&gt;

&lt;h2 id="learning-from-experience"&gt;Learning from experience&lt;/h2&gt;

&lt;p&gt;We came across a similar situation in the recent past. This was for an application which allowed the user to create custom designs, which they can print in their T-Shirts or hoodies. We were using RGhost for creating the designs in PDF but later realised that because of certain constraints with RGhost it’s better to use LaTex.&lt;/p&gt;

&lt;p&gt;We didn’t want to repeat the earlier mistake, we want to do the rewrite in small batches. We had an abstraction layer for the PDF Generation somewhat like as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class PDFGenerator

  def generate_pdf_from_text(text,font_attributes)
    #Call the RGhost’s implementation
  end

  def generate_pdf_from_image(image_path,image_attributes)
    #Call the LaTex’s implementation
  end

  #other methods

end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And we change one function by function to the new implementation. We added feature toggle too so that we can switch to old implementation in case we find a problem in production.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;  def generate_pdf_from_image(image_path,image_attributes)

    if USE_LATEX
      #new implementation
    else
     #old implementation
    end
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The approach was really great, because we could fine tune the new implementation with the learnings from production and as it was in small batches and it was completely fine to complete the port in few weeks time as there was no dependency on this.&lt;/p&gt;

&lt;h2 id="branch-by-abstraction"&gt;Branch by Abstraction&lt;/h2&gt;

&lt;p&gt;The above technique is similar to the technique called &lt;a href="https://martinfowler.com/bliki/BranchByAbstraction.html"&gt;Branch by Abstraction&lt;/a&gt;, i.e. introduce an abstraction layer and route it to the existing implementation.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/03/branch_by_abstraction1.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;Let the abstraction layer redirect to newer implementation as an when it is ready.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/03/branch_by_abstraction2.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;You can visualise Branch by Abstraction with the &lt;a href="https://trunkbaseddevelopment.com/branch-by-abstraction/"&gt;following example given by Paul Hammant&lt;/a&gt; i.e consider it as changing the wheels of a car with the conditions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Mechanics must be able to simultaneously work on the upholstery, engine, etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The car must be drivable after every change.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2017/03/branch_by_abstraction3.png" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;It works in large scale too. &lt;a href="https://continuousdelivery.com/2011/05/make-large-scale-changes-incrementally-with-branch-by-abstraction/"&gt;This case study&lt;/a&gt; talks about two major changes implemented using Branch by Abstraction i.e.:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Moving from iBatis to Hibernate [famous ORMs in the Java world]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Moving from Velocity and JsTemplate to JRuby on Rails&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="every-commit-should-be-ready-for-deployment"&gt;Every commit should be ready for deployment&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;Mainline Development and Feature toggles&lt;/a&gt; help you to achieve this mantra to a great extend, but the question is how do you handle major refactorings or rewritings? Use Branch by Abstraction.&lt;/p&gt;

&lt;p&gt;Yes, it requires the discipline to use abstractions appropriately. But why not, if the same helps for better maintenance.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Pair Programming</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/03/pair-programming/"/>
    <id>http://www.multunus.com/blog/2017/03/pair-programming/</id>
    <published>2017-03-10T09:30:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This post is mostly about how we do pair programming and things that we've learnt in the last few years about effectively doing it. We've also included some quirks that you will notice when you start practicing pair programming. So we've tried to focus less on the what and more on the how.&lt;/p&gt;

&lt;p&gt;We follow pair programming for most our work. It helps us maintain a high quality of code and an extremely low defect rate. It can also be a great way for a new programmer to be inducted into the team as it accelerates learning.&lt;/p&gt;

&lt;p&gt;Pair programming involves two programmers working on the same piece of code at the same work station. One programmer (called the &lt;strong&gt;driver&lt;/strong&gt;) writes the code, while the other(called the &lt;strong&gt;navigator&lt;/strong&gt;) reviews the code being written. And these roles have to switch frequently. So, the two practical aspects of pair programming are &lt;strong&gt;code review&lt;/strong&gt; and &lt;strong&gt;frequent role switching&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id="code-review"&gt;&lt;strong&gt;Code review&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Pair programming, like many other practices of extreme programming, is a software engineering practice taken to the extreme - in this case code review. The driver writes the code while the navigator sleeps. The two programmers switch roles frequently so that both of them get enough sleep.&lt;/p&gt;

&lt;p&gt;Just kidding! The driver writes the code and takes care of the low level implementation details while the navigator reviews the driver’s work from a higher level of abstraction.&lt;/p&gt;

&lt;p&gt;If you are only beginning to pair program, it might be beneficial to have a checklist written down on a piece of card and stuck somewhere near your monitor. This is what we call a navigator checklist. This checklist contains questions that a navigator needs to keep asking himself (and sometimes the driver) during development. Here’s a sample checklist -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Are naming conventions being followed?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the next test to write?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is this test valuable?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the next task to work on?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How does this fit in the overall design of the application?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is this task taking longer than expected? If yes, what should be the time box?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can this part of the code be designed better?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is there scope to improve existing parts of the code with the available time?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is there an edge case that needs to be considered?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is it time to switch roles?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is it time for a break?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why are we writing this code?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Have we been debating for more than 10 minutes without writing code?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is highly recommended that you modify this checklist as you learn more about your pair and from action items that you get from cause effect analysis of bugs. Also based on the experience levels of the programmers, some of these will make sense while others won’t.&lt;/p&gt;

&lt;h3 id="frequent-role-switching"&gt;&lt;strong&gt;Frequent role switching&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;There are two common styles followed to switch roles during pair programming. First one is to use the &lt;a href="https://en.wikipedia.org/wiki/Pomodoro_Technique?__s=%5Bsubscriber.token%5D"&gt;Pomodoro technique&lt;/a&gt;. This basically breaks down the work into 30 minute long intervals (25 minutes of coding + 5 minutes of short break). After each interval the pair switches roles. This can work great when role switching is followed religiously. But more often than not, it might be hard to unglue programmers from their keyboards at the end of a Pomodoro and when this happens frequently, the navigator might lose focus/interest.&lt;/p&gt;

&lt;p&gt;The other style is called the &lt;strong&gt;Ping-Pong pairing&lt;/strong&gt; developed by &lt;a href="http://articles.coreyhaines.com/posts/thoughts-on-pair-programming/?__s=%5Bsubscriber.token%5D"&gt;Corey Haines&lt;/a&gt;. In its simplest form, one programmer writes the test and the other takes care of getting the test to pass. This is a very powerful style as this drastically improves the involvement of the programmers and also clears doubts as to when to switch roles.&lt;/p&gt;

&lt;h3 id="other-things-to-be-considered"&gt;&lt;strong&gt;Other things to be considered&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Before you start pairing, it is necessary to have a high level of clarity on how you are going to go about coding for the problem at hand.&lt;/strong&gt; This is important as otherwise a lot of time will be spent on researching and discussing solutions. So, if there are any unknowns go ahead do a &lt;a href="http://www.jamesshore.com/Agile-Book/spike_solutions.html?__s=%5Bsubscriber.token%5D"&gt;spike&lt;/a&gt; to get that clarity beforehand.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair programming when done right can be very tiring and hence it is very important to take frequent breaks and to make sure you don’t pair for more than 6 - 7 hours a day.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As with any great practice, a pragmatic rather than dogmatic approach is absolutely essential. Pairing for 100% of the time is never an objective. Based on the experience levels of the programmers and the kind of task at hand, you might want to choose not to pair.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If a pair has been working together for a long time, then a strange phenomenon called &lt;strong&gt;Pair marriage&lt;/strong&gt; can happen - both start to think alike and code alike. This will defeat the whole idea of two people with different perspectives working together. So it is essential to plan for switching pairs at an appropriate frequency.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="where-do-you-go-from-here"&gt;&lt;strong&gt;Where do you go from here?&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;It is a little counter intuitive but we have observed that in most cases and in the long run, pair programming helps you be more productive than working alone. If you have never done pair programming before, it can be hard to buy the idea of two people working together on a single task when they could have been working on two different things in parallel. So how do you give this a try? Here's something that we tried with one of our teams.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;When things are not very hectic, add some slack to a sprint and get two programmers to pair on a story&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Ensure that the pair follows the practice with discipline even if it feels ridiculous at times&lt;/strong&gt;. Eg., if you are following the Pomodoro, it might feel ridiculous to stop exactly at the end of 25 minutes when the driver is just a couple of minutes to logically conclude the task at hand. But it is necessary to follow the practice to the T, at least initially.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It might be necessary to enforce a rule saying no discussion should go beyond 10 minutes as there will be a tendency to spend a lot of time on discussing to make decisions. Of course there will be exceptions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Somewhere in the middle of the sprint, replace one person in the pair.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At the end of the sprint, get feedback from all three programmers involved in the experiment.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should definitely see an improvement in their productivity and code quality. As with any new technique, it makes sense to follow the &lt;a href="https://martinfowler.com/bliki/ShuHaRi.html?__s=%5Bsubscriber.token%5D"&gt;ShuHaRi&lt;/a&gt;.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Why we don't estimate</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/02/no-estimate/"/>
    <id>http://www.multunus.com/blog/2017/02/no-estimate/</id>
    <published>2017-02-22T09:30:29+05:30</published>
    <updated>2017-12-01T22:18:43+05:30</updated>
    <content type="html">&lt;p&gt;Estimations are predictions. Unfortunately, they end up being perceived as &lt;em&gt;commitments&lt;/em&gt;. And the team in question starts getting unduly pressured when the estimates go wrong. At Multunus this has happened many times in the past.&lt;/p&gt;

&lt;p&gt;We learnt a lot of things from &lt;a href="http://www.jamesshore.com/Agile-Book/"&gt;Art of Agile Development [by James Shore]&lt;/a&gt;. We found it tremendously useful for learning how to get started with Extreme Programming - and making the "prevention rather than cure" mental shift. This, in turn, resulted in much less waste - and higher efficiency across the team.&lt;/p&gt;

&lt;p&gt;But we were still struggling with estimating. We tried the story points and velocity approach suggested by XP. But we were still unable to deliver things at a predictable pace.&lt;/p&gt;

&lt;p&gt;We realised there was no point in trying any harder to come up with better estimates. It was time to look at things from a different perspective, time to look beyond XP’s default practices.&lt;/p&gt;

&lt;p&gt;During our search for alternative approaches [see references below], we discovered multiple presentations and blog posts - all suggesting the same thing: Estimating can never be accurate &lt;em&gt;enough&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The rest of the post is how we avoid estimates as much as possible, instead follow the below steps to deliver software:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First release/milestone to be done within 6-8 weeks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And further major milestones need to be done in every few weeks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Every story we sliced into stories which can be done in two days&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We continuously deliver code to production and features which take longer will be delivered with Feature Toggles so that it can be turned on/off.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: When we say story, we are referring to &lt;a href="http://www.jamesshore.com/Agile-Book/stories.html"&gt;Agile Stories&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="no-estimates"&gt;No Estimates&lt;/h2&gt;

&lt;p&gt;As a first step towards to avoid estimating, we started slicing the stories/tasks to the same size. Instead of asking "how big is this", we slice them and make sure that all the stories are of somewhat same size. We further sliced the bigger ones to smaller ones, to make them equal size. This brought up some more predictability and more importantly, the stress of estimation was brought down significantly.&lt;/p&gt;

&lt;p&gt;Further, we started seeing a pattern i.e. we are somewhat becoming more comfortable and predictable with &lt;strong&gt;delivering once in two days&lt;/strong&gt; or say slicing stories which can be done within two days.&lt;/p&gt;

&lt;h2 id="identifying-what-to-deliver"&gt;Identifying what to deliver&lt;/h2&gt;

&lt;p&gt;The key to achieving this is to continuously prioritise and deliver what is more valuable to the customer. We use certain techniques to achieve the same.&lt;/p&gt;

&lt;p&gt;The simplest of the technique is drawing the Story Map [as recommended by &lt;a href="https://blog.intercom.com/using-job-stories-design-features-ui-ux/"&gt;Jobs to be done Framework&lt;/a&gt;], which helps us to visualise the user interactions of the system and prioritise what is important and what can come late.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.thisisproductmanagement.com/episodes/jobs-to-be-done/"&gt;Listen to Karen Dillon&lt;/a&gt; - Contributing Editor of Harvard Business Review and co-author of &lt;a href="https://www.amazon.com/Competing-Against-Luck-Innovation-Customer/dp/0062435612"&gt;Competing Against Luck&lt;/a&gt; - talking about Jobs to be done framework and how it can be used for understanding customers and building innovative products.&lt;/p&gt;

&lt;p&gt;Here is a simple Story Map we created for an application where the requirement was to create an application to sync two different kinds of Document Management Systems like Sharepoint, HP Records Manager, Documentum etc. to each other.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/story-map.png" alt="Story Map" /&gt;&lt;/p&gt;

&lt;p&gt;There are too many things to be implemented for the system, the above is the simplest flow.&lt;/p&gt;

&lt;p&gt;We drew the user journey as shown above and highlighted the ones which are minimum enough for the customer to start using the system. So the ones highlighted with stars (*) went for the first milestone, which we delivered in the first 4-6 weeks.&lt;/p&gt;

&lt;p&gt;We de-prioritised certain tasks during the development phase too, as it is difficult to think of everything initially. What remained constant was "deliver a useable product as quickly as possible". The idea is to deliver value to the customer as early as possible and continuously and also learn more about the customer through each milestone.&lt;/p&gt;

&lt;p&gt;All of you know that a product usually changes once customers/users start using it. So the idea is to deliver the product early so that we can adopt the changes early.&lt;/p&gt;

&lt;p&gt;There are more tools like &lt;a href="http://www.multunus.com/blog/2016/02/introduction-impact-mapping-creating-impact-map-ecommerce-product/"&gt;Impact Mapping&lt;/a&gt; and &lt;a href="http://www.gv.com/sprint/"&gt;Design Sprint&lt;/a&gt;, which along with the Jobs To be Done framework, helps to bring in better understanding and clarity across team members.&lt;/p&gt;

&lt;h2 id="no-estimates---100-of-the-time"&gt;No Estimates - 100% of the time?&lt;/h2&gt;

&lt;p&gt;Timeboxing helps us to create a sense of urgency which in turn helps us to be more creative. Yes, we would still need to have ballpark estimates to the customer when they engage with us.&lt;/p&gt;

&lt;p&gt;We try not to plan anything beyond a couple of months, which has helped us to make the estimate somewhat successful. We politely refuse their request to estimate beyond a few months, by explaining them why.&lt;/p&gt;

&lt;p&gt;We try to arrive at the first 2-3 milestones as mentioned above and restricting the overall estimate to a few months than committing to an engagement for many months.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://neilkillick.com/2012/04/12/do-not-estimate-software-projects-at-all"&gt;http://neilkillick.com/2012/04/12/do-not-estimate-software-projects-at-all/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://softwaredevelopmenttoday.blogspot.com.au/2012/01/story-points-considered-harmful-or-why.html"&gt;http://softwaredevelopmenttoday.blogspot.com.au/2012/01/story-points-considered-harmful-or-why.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.infoq.com/presentations/Want-Better-Estimates-Stop-Estimating"&gt;http://www.infoq.com/presentations/Want-Better-Estimates-Stop-Estimating&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.industriallogic.com/blog/stop-using-story-points/"&gt;http://www.industriallogic.com/blog/stop-using-story-points/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://dannorth.net/2009/07/01/the-perils-of-estimation/"&gt;http://dannorth.net/2009/07/01/the-perils-of-estimation/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is an updated version of my earlier post - &lt;strong&gt;&lt;em&gt;&lt;a href="http://www.multunus.com/blog/2013/04/estimating-to-timeboxing-our-journey/"&gt;Estimating to Timeboxing - Our Journey&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Naming - The hardest thing in Software</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2017/01/naming-the-hardest-software/"/>
    <id>http://www.multunus.com/blog/2017/01/naming-the-hardest-software/</id>
    <published>2017-01-31T22:50:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;em&gt;There are only two hard things in Computer Science: cache invalidation and naming things.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;– Phil Karlton&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;All of us struggle with &lt;strong&gt;&lt;em&gt;naming&lt;/em&gt;&lt;/strong&gt; on a day to day basis. What should we call a class, a field or table in the database or an action in the controller? The fact that it is harder to change it later adds to the complexity too.&lt;/p&gt;

&lt;p&gt;Ubiquitous Language&lt;/p&gt;

&lt;p&gt;There are techniques that help you arrive at better names. One of them is called Ubiquitous Language - a common, shared language that the developers and the domain experts/users use to communicate.&lt;/p&gt;

&lt;p&gt;The best way to arrive at a common language is through conversation. Let's look at an example of how to use conversations to arrive at Ubiquitous Language.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gk-landingpage.firebaseapp.com/"&gt;Good Karma&lt;/a&gt; is a Phone CRM product we are building for Yoga Studios [yes, it is our &lt;strong&gt;&lt;em&gt;own&lt;/em&gt;&lt;/strong&gt; product :)]. The IVR system automates the enquiries the studios receives for different kinds of classes they such as normal yoga classes, ayurvedic classes, yoga teachers training, dietician courses to name a few.&lt;/p&gt;

&lt;p&gt;Here’s an interesting conversation I had with a Yoga studio founder -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Leena:&lt;/em&gt;&lt;/strong&gt; Hi Naveen, I had a few questions about different types of yoga classes that we should handle in the system. Can we discuss those now?*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Naveen:&lt;/em&gt;&lt;/strong&gt; Sure. Did you mean Group class, Teacher’s training etc? We call them Business Lines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Leena:&lt;/em&gt;&lt;/strong&gt; Oh ok. Yes, I meant &lt;strong&gt;&lt;em&gt;Business lines&lt;/em&gt;&lt;/strong&gt;. Can you give me examples of how &lt;strong&gt;&lt;em&gt;bookings&lt;/em&gt;&lt;/strong&gt; work for each of them?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Naveen:&lt;/em&gt;&lt;/strong&gt; For &lt;strong&gt;&lt;em&gt;Group classes&lt;/em&gt;&lt;/strong&gt;, we offer &lt;strong&gt;&lt;em&gt;Trial classes&lt;/em&gt;&lt;/strong&gt; so that the customers can get a feel of the sessions and about the teachers too. Some customers are particular about certain &lt;strong&gt;&lt;em&gt;Senior teachers&lt;/em&gt;&lt;/strong&gt;, so we need to make sure that the system allows the customers to choose a specific teacher in case they prefer so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Leena:&lt;/em&gt;&lt;/strong&gt;Do trial classes exist for other business lines too? Say for &lt;strong&gt;&lt;em&gt;Teacher’s training&lt;/em&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;em&gt;Ayurvedic courses&lt;/em&gt;&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Naveen:&lt;/em&gt;&lt;/strong&gt; No, it depends on the business line. For Teachers’ training, usually the customer’s give their details and we get back to them when the course starts. It is not as frequent as Group Classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Naveen:&lt;/em&gt;&lt;/strong&gt; Forgot to mention another thing - these depend on the &lt;strong&gt;&lt;em&gt;branches&lt;/em&gt;&lt;/strong&gt; too. Certain branches don’t offer trial classes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_Leena: _&lt;/strong&gt;One more question. You mentioned senior teachers; do you have any other kind of roles?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Naveen:&lt;/em&gt;&lt;/strong&gt; Yes, there are &lt;strong&gt;&lt;em&gt;Studio&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;managers&lt;/em&gt;&lt;/strong&gt;. In some branches, they could be senior teachers. But not all seniors teachers are managers. Apart from that, we have &lt;strong&gt;&lt;em&gt;founders&lt;/em&gt;&lt;/strong&gt;, i.e. people like me who started the studio.&lt;/p&gt;

&lt;p&gt;The advantage of having such conversations is that it will help you identify more than entities and names - even the actions or rules of the system too.&lt;/p&gt;

&lt;p&gt;I’ve highlighted the important terminologies that the customer uses and the same should be the used for conversations among the team members. This will get reflected in the code too. For example, in the above conversation, I started off with the term &lt;strong&gt;&lt;em&gt;Yoga classes&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;Business lines&lt;/em&gt;&lt;/strong&gt;. Had it not been corrected by Naveen, the term services would have shown up in the code too.&lt;/p&gt;

&lt;p&gt;After having conversations such as these, we convert them into story maps or flowcharts as given below. This helps us to visualise and create a common understanding within the team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-cdimages/gk-features.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/gk-features.png" alt="image alt text" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Domain-Driven Design&lt;/p&gt;

&lt;p&gt;Ubiquitous Language is one of the key parts of Domain-Driven Design, where the premise is &lt;strong&gt;&lt;em&gt;initiating a creative collaboration between technical and &lt;a href="https://en.wikipedia.org/wiki/Domain_expert"&gt;domain experts&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; to iteratively refine a conceptual model that addresses particular domain problems.&lt;/p&gt;

&lt;p&gt;It is much deeper, the following mindmap should give you a quick overview and depth of this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-cdimages/domain-driven-design.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/domain-driven-design.png" alt="image alt text" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If done well Domain-driven design helps you move to a &lt;a href="https://www.infoq.com/presentations/ddd-microservices-2016"&gt;Microservice Architecture&lt;/a&gt;. I will be covering more about domain driven design in the future posts.&lt;/p&gt;

&lt;h2 id="further-references"&gt;Further References&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.jamesshore.com/Agile-Book/ubiquitous_language.html"&gt;Ubiquitous Language - By James Shore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.amazon.in/Domain-Driven-Design-Tackling-Complexity-Software-ebook/dp/B00794TAUG"&gt;Domain Driven Design: Tackling Complexity Software in the Heart of Software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pluralsight.com/courses/domain-driven-design-fundamentals"&gt;Pluralsight Course - Domain Driven Design Fundamentals&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pluralsight.com/courses/domain-driven-design-in-practice"&gt;Pluralsight course - Domain Driven Design In Practice&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=dnUFEg68ESM"&gt;Domain Driven Design By Eric Evans&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://m.signalvnoise.com/hunting-for-great-names-in-programming-16f624c8fc03"&gt;Hunting for great names in programming by DHH&lt;/a&gt;&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Refactoring to design patterns- The template pattern</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/12/refactoring-template-method-pattern/"/>
    <id>http://www.multunus.com/blog/2016/12/refactoring-template-method-pattern/</id>
    <published>2016-12-22T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;The &lt;a href="https://sourcemaking.com/design_patterns/template_method"&gt;template method pattern&lt;/a&gt; is a useful design pattern when you have a bunch of classes which follow a similar algorithm/steps but vary in the implementation of the steps.&lt;/p&gt;

&lt;p&gt;Let's take a look a simple example where refactoring to this pattern improves the overall maintainability of the code.&lt;/p&gt;

&lt;h3 id="pdf-generation"&gt;PDF generation&lt;/h3&gt;

&lt;h5 id="before-refactoring"&gt;Before refactoring&lt;/h5&gt;

&lt;p&gt;We had a code that generates PDF from a report. Here is the class which does that:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class ReportPDFGenerator
  def generate(data)
    add_encoding(data)
    # Linear PDF report Generation Code
  end

  def add_encoding(pdf)
    # Add encoding if requested
    # else return the same PDF
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Later, we introduced another type of report called complex report, where the way of generating the report is entirely different. We wrote a class for that like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class ComplexReportPDFGenerator
  def generate(data)
    add_encoding(data)
    # Complex PDF Generation Code
  end

  private

  def add_encoding(data)
    # Add encoding if requested
    # else return the same PDF
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Refactoring this into the template pattern to remove some duplication, more importantly, to easily support another requirement where there is a slight change in how the PDF generation varies.&lt;/p&gt;

&lt;h5 id="after-refactoring"&gt;After refactoring&lt;/h5&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class ReportPDFGenerator
  def initialize(data)
    @data = data
  end

  def generate(data)
    add_encoding(data)
    generate_pdf(data)
  end

  private

  def add_encoding(data)
    # default implementation
  end

  def generate_pdf(data)
    #default implementation
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Linear Report PDF Generator:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class LinearReportPDFGenerator &amp;lt; ReportPdfGenerator
  def generate_pdf(data)
    # Linear PDF Generation Code
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Complex Report PDF Generator:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class ComplexReportPDFGenerator &amp;lt; ReportPDFGenerator
  def generate_pdf(data)
    # complex pdf Generation Code
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we are aware of what template patterns mean, let's take a look at another slightly more complicated scenario. Both these examples were taken from our codebases, it is just that we have removed some details that are not relevant.&lt;/p&gt;

&lt;p&gt;The following example is taken from a micro-financing application that we work on.&lt;/p&gt;

&lt;h5 id="before-refactoring-1"&gt;Before refactoring&lt;/h5&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class BankAccountDepositDisburser
  def initialize(loan)
    @loan = loan
    @loan_validator = LoanValidator.new @loan
    @loan_agreement_validator = LoanAgreementValidator.new @loan.loan_agreement

    @bank_deposit_validator = BankAccountDepositValidator.new(@loan.bank_account_deposit)
  end

  def disburse
    if valid?
      @loan.disburse!
    end
  end

  def valid?
    [@loan_validator.valid?, @loan_agreement_validator.valid?, @bank_deposit_validator.valid?].all?
  end
end

class ACHDepositDisburser
  def initialize(loan)
    @loan = loan
    @loan_validator = LoanValidator.new @loan
    @loan_agreement_validator = LoanAgreementValidator.new @loan.loan_agreement

    @ach_deposit_validator = AchDepositValidator.new @loan.ach_deposit
  end

  def disburse
    if valid?
      @loan.disburse!
    end
  end

  def valid?
    [@loan_validator.valid?, @loan_agreement_validator.valid?, @ach_deposit_validator.valid?].all?
  end
end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above snippet, you can see that both these class are in charge of disbursing loans, it just that the validations that need to run before we can disburse these loans are different. There are also some default validations that needs to run. This seems like a good opportunity to refactor to Template pattern.&lt;/p&gt;

&lt;h5 id="after-refactoring-1"&gt;After refactoring&lt;/h5&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;class LoanDisburser
  def initialize(loan)
    @loan = loan
    initialize_validators
  end

  def disburse
    @loan.disburse! if valid?
  end

  def initialize_validators
    @validators = []
    @validators &amp;lt;&amp;lt; LoanValidator.new(@loan)
    @validators &amp;lt;&amp;lt; LoanAgreementValidator.new(@loan.loan_agreement)
  end

  def valid?
    @validators.map(&amp;amp;:valid?).all?
  end
end

class BankAccountDepositDisburser &amp;lt; LoanDisburser
  def initialize_validators
    super
    @validators &amp;lt;&amp;lt; BankAccountDepositValidator.new(@loan.bank_account_deposit)
  end
end

class ACHDepositDisburser &amp;lt; LoanDisburser
  def initialize_validators
    super
    @validators &amp;lt;&amp;lt; AchDepositValidator.new(@loan.ach_deposit)
  end
end

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;

&lt;p&gt;As you have already seen template pattern is a useful design pattern to use when you have classes that go through a similar sequence of steps but vary in how the step are implemented.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Abstractions in Ruby and Clojure</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/12/abstractions-ruby-clojure/"/>
    <id>http://www.multunus.com/blog/2016/12/abstractions-ruby-clojure/</id>
    <published>2016-12-22T17:22:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the primary reasons I find it much easier to write Clojure is just the fact that you get to model your problems just using simple functions and values. This method seems to naturally fit my mental model of solutions to programming problems.&lt;/p&gt;

&lt;p&gt;One of the questions that usually comes up when the discussing the above with someone who is relatively new to functional programming (Clojure or otherwise) is how can you even have good abstractions without Objects. In Object Oriented programming the idea of abstractions seems strongly dependent on objects which encapsulate a certain state and behavior into a single entity.&lt;/p&gt;

&lt;p&gt;Before we go into the details of how or whether it is even possible to create abstractions in Clojure. Let's come up with a definition of what do we even mean by an abstraction in the context of programming.&lt;/p&gt;

&lt;h3 id="define-abstraction"&gt;Define Abstraction&lt;/h3&gt;

&lt;p&gt;From Wikipedia:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;In software engineering and computer science, abstraction is a technique for arranging complexity of computer systems. It works by establishing a level of complexity on which a person interacts with the system, suppressing the most complex details below the current level
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another definition from Uncle Bob ( Robert C. Martin):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Abstraction is the elimination of the irrelevant  and the amplification of essential.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Something that is tangential to our current discussion is the fact that there are times when we unknowingly confuse abstraction with indirection and complicate things without no actual benefit. &lt;a href="https://zedshaw.com/archive/indirection-is-not-abstraction/"&gt;This is good discussion on this subject&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One good way to internalize and understand how the ability to create abstractions does not necessarily require objects or classes is to compare a common and simple abstraction that is implemented in Ruby and Clojure. Although we use these specific programming languages, most of this should apply to a lot of functional and object-oriented languages combinations. As an example, we pick the abstraction of a Collection&lt;/p&gt;

&lt;h3 id="collection"&gt;Collection&lt;/h3&gt;

&lt;p&gt;A Collection is one of the most common abstractions we tend to use. Most programming languages support multiple collections like things Arrays, Lists, HashMaps, Vectors etc.&lt;/p&gt;

&lt;p&gt;Depending on our use case we will have to select one of these types to store our data. What we don't want is for the code which operates at a higher level to actually have the need to know the specific type of collection they are working with.&lt;/p&gt;

&lt;p&gt;Before we go into the details as to how this is achieved in Clojure or Ruby. Let's take a look at what is the collection abstraction about. The collection abstraction is mostly about, well a collection of things. This is most essential aspects of a collection, everything else is a detail that is not very important from the context of a general collection abstraction. Things like how the collection is stored, whether they have linear or random access to access to their elements. What is the algorithmic complexity of adding or removing an element from them? etc.&lt;/p&gt;

&lt;h3 id="ruby"&gt;Ruby&lt;/h3&gt;

&lt;p&gt;Ruby provides a lot of collection like classes such as Array, Set, Hash etc. A common collection abstraction ruby supports is mostly based on the &lt;a href="https://ruby-doc.org/core-2.3.3/Enumerable.html"&gt;enumerable module&lt;/a&gt;. To act like a collection a new collection like class needs to do is implement the "each" function and include the enumerable interface.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-Ruby"&gt;a = [1, 2, 3]
b = Set.new [1, 2, 3]
c =  {:a =&amp;gt; 1, :b =&amp;gt; 2}

# one of the methods supported by the enumerable interface is the take method. It returns n number of elements from the collection the order of the elements depends on the specific collection implementation.
2.3.0 :021 &amp;gt; a.take(2)
 =&amp;gt; [1, 2]

2.3.0 :030 &amp;gt; b.take(2)
 =&amp;gt; [1, 2]

2.3.0 :032 &amp;gt; c.take(2)
 =&amp;gt; [[:a, 1], [:b, 2]]



&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This seems fairly straight forward we have different classes for each collection they can provide a custom implementation of the each method and that makes them compatible with any code that expects a collection.&lt;/p&gt;

&lt;h3 id="clojure"&gt;Clojure&lt;/h3&gt;

&lt;p&gt;Clojure too implements a bunch of Collection types like Lists, Vectors, Maps, Set etc. The common abstraction that Clojure provides for these types is the sequence abstraction(seqs). A seq is a logical list. Clojure uses the ISeq interface to allow many data structures to provide access to their elements as sequences. The seq function yields an implementation of ISeq appropriate to the collection.&lt;/p&gt;

&lt;p&gt;The seq interface consists of the following functions
* (first coll) - return the first element.
* (rest coll) - returns a logical collection of the rest of elements (not necessarily a seq). Never returns nil
* (next coll) - returns a seq of the rest of the elements, which will be nil if no elements remain.
*(cons item seq) - construct a new sequence with the item prepended to seq&lt;/p&gt;

&lt;p&gt;Just like the methods in the enumerable class in Ruby there are lot functions in the clojure.core &lt;a href="http://clojure.org/reference/sequences"&gt;package which works on the sequence abstraction&lt;/a&gt;. These functions call the seq function to get a sequence view of the particular collection. Most of these functions automatically call the seq function before doing anything else with them.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-Clojure"&gt;(def a [ 1 2 3])

(def b { :a 1 :b 2 :c 3})

(def c #{1 2 3})

(take 2 a)
;; (1,2)

(take 2 b)
;;([:a 1] [:b 2])

(take 2 c)
;;(1 3)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;
&lt;p&gt;Although in Clojure you don't package state and behavior as you would in a typical object-oriented language. It provides tools for implementing polymorphic behavior where you can specify how a method in an abstract interface is implemented for a specific data type. One interesting observation here is that the core process of creating abstraction is somewhat programming language independent. An abstraction is an artifact of how the programmer(s) models the problem.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery for Tablet app</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/12/continuous-delivery-for-tablet-app-media-company/"/>
    <id>http://www.multunus.com/blog/2016/12/continuous-delivery-for-tablet-app-media-company/</id>
    <published>2016-12-05T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In my &lt;a href="http://www.multunus.com/blog/2016/11/tryst-continuous-delivery/"&gt;earlier post&lt;/a&gt;, I mentioned the product we developed for a Media Company, where we deployed Android Tablets and Linux Media Players as Kiosk Devices in clinics across the US. These devices air informative content relevant to the patients visiting the clinics.&lt;/p&gt;

&lt;p&gt;We deployed the first kiosk mode tablet within 6 weeks. We received excellent feedback from both the patients and the doctors.&lt;/p&gt;

&lt;p&gt;I think the below comment from one of the senior doctors at the clinic summarises it well:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"A longtime dream come true!  It is exciting to be able to educate patients while they wait in the exam room. They select and view topics of their choice.  The presentations are engaging and free of commercial bias. This &lt;strong&gt;*_is_&lt;/strong&gt;&lt;/em&gt; the future". *&lt;/p&gt;

&lt;p&gt;Below is the stats about the number of devices field in a span of two years.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/if-stats.jpg" alt="image alt text" /&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the above, we automated the setup of the devices using &lt;a href="http://www.androidpolice.com/2010/05/01/custom-roms-for-android-explained-and-why-you-want-them/"&gt;Custom ROM&lt;/a&gt;, which increased the number of installations drastically.&lt;/p&gt;

&lt;p&gt;Further down the line, we also extended similar functionality to Linux Media Players.&lt;/p&gt;

&lt;h2 id="speed-discipline-and-quality---not-a-paradox"&gt;&lt;strong&gt;Speed, Discipline and Quality - Not a paradox&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Without the speed of the Multunus team and the ability to show real live tablets, we would not be in the position. So, thank you and congrats.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The above are the comments we heard from our customer when we kept delivering the product. Delivering on the business cadence wouldn’t have been possible without Continuous Delivery.&lt;/p&gt;

&lt;p&gt;It is not easy to bring in that cadence. There was always pressure to deliver faster with compromises, especially on the code quality.&lt;/p&gt;

&lt;p&gt;It is the business policy to hustle, and that is where the great engineering culture comes into the picture. A culture that balances discipline, quality and speed. Many consider Speed and Discipline don’t go together. But if you practice Continuous Delivery well, you see that it can be done.&lt;/p&gt;

&lt;p&gt;To take one instance, one of the major struggles for us was to &lt;a href="http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/"&gt;Test Drive Android Code&lt;/a&gt;. Because of the way the Android Framework was designed and also because of the device dependency to run the test suite, the unit tests were slower which has affected the pace of development. We moved to &lt;a href="http://robolectric.org/"&gt;Robolectric&lt;/a&gt;, but learning Robolectric while writing the production code was a challenge which we balanced and overcame over a period of time.&lt;/p&gt;

&lt;p&gt;If you are convinced about the value of Continuous Delivery, what are you waiting for? 
Follow the steps in &lt;a href="/blog/2016/11/tryst-continuous-delivery#get-started"&gt;Getting Started section of the previous post&lt;/a&gt; if you need guidance in getting started.&lt;/p&gt;

&lt;p&gt;Try and let us know your experiences. Feel free to reply if you’ve questions. I will be glad to answer those.&lt;/p&gt;

</content>
  </entry>
  <entry>
    <title>Continuous Delivery – Is it for everyone?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/12/continuous-delivery-us/"/>
    <id>http://www.multunus.com/blog/2016/12/continuous-delivery-us/</id>
    <published>2016-12-05T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;During the meetups or conferences related to Continuous Delivery, I've seen many raising the below concerns about Continuous Delivery:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I think it works only for technology companies. Does it work in high-security environments like banks and insurance companies?&lt;/li&gt;
  &lt;li&gt;It works for high performing companies like Amazon, Facebook and Netflix. Our project is unique so it may not work&lt;/li&gt;
  &lt;li&gt;Our business is not ready for Continuous Delivery&lt;/li&gt;
  &lt;li&gt;The investment required is too big which, our business can't afford&lt;/li&gt;
  &lt;li&gt;We'd invested the time, but got little returns.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of us know stories and experiences are the most effective way to learn. Let me share a few of my experiences with Continuous Delivery and how it impacted great business outcomes and team performance.&lt;/p&gt;

&lt;h1 id="dream-come-true"&gt;Dream come true&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;"A longtime dream come true!  It is exciting to &lt;strong&gt;be able to &lt;/strong&gt;educate patients while they wait in the exam room. They select and view topics of their choice.  The presentations are engaging and free of commercial bias. This &lt;/em&gt;&lt;strong&gt;&lt;em&gt;is&lt;/em&gt;&lt;/strong&gt;&lt;em&gt; the future&lt;strong&gt;"&lt;/strong&gt;. ~ Feedback from the senior doctor at the clinic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In my &lt;a href="http://www.multunus.com/blog/2016/11/tryst-continuous-delivery/"&gt;earlier post&lt;/a&gt;, I mentioned the product we developed for a Media Company, where we deployed Android Tablets and Linux Media Players as Kiosk Devices in clinics across the US. These devices air informative content relevant to the patients visiting the clinics.&lt;/p&gt;

&lt;p&gt;We deployed the first kiosk mode tablet within 6 weeks. We received excellent feedback from both the patients and the doctors. The content improved the relationship between the patients, doctors and the clinic as patients became more curious and optimistic about being cured.&lt;/p&gt;

&lt;h2 id="the-constraints"&gt;The Constraints&lt;/h2&gt;

&lt;p&gt;Once the number of devices increased in the field, we identified that the "initial setup of the device" was the most time-consuming process. We automated the same using Custom ROM, which increased the number of installations drastically.&lt;/p&gt;

&lt;p&gt;For remote control of the devices, we were using a commercial software - a well known Mobile Device Management Software. The software was costly and had reliability issues. But the focus was on acquiring customers, and the cost was manageable until the customer base reached a certain threshold.&lt;/p&gt;

&lt;p&gt;But later it became a constraint as the reliability of the software affected the revenues. We had to make frequent updates to the devices to learn faster from the field, but because of unreliable nature of the off-the-shelf software, we couldn't deploy as frequently we expected.&lt;/p&gt;

&lt;p&gt;We invested on porting it to own custom solution over a period of time through continuous delivery and got rid of the commercial software once we got enough confidence on our own solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/if-stats.jpg"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/if-stats.jpg" alt="if-stats" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"&lt;strong&gt;Without the speed of the &lt;/strong&gt;Multunus&lt;strong&gt; team and the ability to show real live tablets, we &lt;/strong&gt;would** not be in the position. So, thank you and congrats."&lt;/em&gt;&lt;/p&gt;

&lt;h2 id="speed-discipline-and-quality---not-a-paradox"&gt;Speed, Discipline and Quality - Not a paradox&lt;/h2&gt;

&lt;p&gt;Delivering on the business cadence wouldn't have been possible without Continuous Delivery - delivering software continuously in a sustainable and predictable manner.&lt;/p&gt;

&lt;p&gt;It is not simple to bring in that cadence. There was always pressure to deliver faster with compromises, especially on the code quality.&lt;/p&gt;

&lt;p&gt;It is the business policy to hustle, and that is where the great engineering culture comes into the picture. A culture that balances discipline, quality and speed. Many consider Speed and Discipline don't go together. But if you practice Continuous Delivery well, you see that it can be done.&lt;/p&gt;

&lt;p&gt;To take one instance, one of the major struggles for us was to &lt;a href="http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/"&gt;Test Drive Android Code&lt;/a&gt;. Because of the way the Android Framework was designed and also because of the device dependency to run the test suite, the unit tests were slower which has affected the pace of development. We moved to &lt;a href="http://robolectric.org/"&gt;Robolectric&lt;/a&gt;, but learning Robolectric while writing the production code was a challenge which we balanced and overcame over a period of time.&lt;/p&gt;

&lt;h2 id="the-outage"&gt;The outage&lt;/h2&gt;

&lt;p&gt;Continuous Delivery is good but requires investment too. When invested well, it gives you continuous and sustainable delivery of high-quality software. We learned that hard lesson.&lt;/p&gt;

&lt;p&gt;The business decided to move away from the off-the-shelf mobile device management software to the custom built one. They arrived at a deadline without planning much about the smooth transition from one system to the other for the production devices. With large devices on the field, with hardly any human access, deploying a new system needs to be done in small batches of rollouts along with enough monitoring and alerting systems to help us quickly react.&lt;/p&gt;

&lt;p&gt;The deployment of monitoring systems got deprioritized with the other features. A small configuration issue resulted in an outage for 80% of the field devices. Something that was least expected and became very costly.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.multunus.com/blog/2014/07/production-outages-part1/"&gt;We pulled off the situation&lt;/a&gt; both emotionally and technically using the same agility practices. It was really stressful and high pressure, but the practices helped us to maintain calm and take control as quickly as possible.&lt;/p&gt;

&lt;h1 id="christmas-every-week"&gt;Christmas every week&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;"We consider Every Tuesday meeting [the lending meeting] as Christmas  every Tuesday&lt;strong&gt;"&lt;/strong&gt;. ~ Feedback from a loan officer &lt;strong&gt;about&lt;/strong&gt; the weekly production updates&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few years back a Micro-Finance institute approached us to build end-to-end loan processing application. They were managing the entire cycle through Zoho and Google Docs integrated with 3rd party APIs.&lt;/p&gt;

&lt;p&gt;When the number of manual steps  became a bottleneck for scaling to more users, they approached us to build an end to end solution.&lt;/p&gt;

&lt;h2 id="weakest-linkin-the-chain"&gt;Weakest link in the chain&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.multunus.com/portfolio/micro-loan-processing-platform/"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/12/closer.png" alt="closer" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The weakest link was the loan closing module. The loans are requested for different reasons or purposes  - an individual to start a business, a group of people starting a business as partners, a small business taking a loan to expand their business - as examples.&lt;/p&gt;

&lt;p&gt;So we need to slice entire the loan processing system into multiple modules and automate one by one. We identified the workflow to be automated, agreed on the UX considering that this needs to be used by non-tech savvy people and built the first version in eight weeks.&lt;/p&gt;

&lt;h2 id="handling-resistance"&gt;Handling Resistance&lt;/h2&gt;

&lt;p&gt;The first version was basic - support for only one type of loan - just enough to get early feedback. The customer was embarrassed to release it to his loan officers. We were very persistent because we value Continuous learning and experimenting, so told him "let's try this once, and later if you think release early is not working let's not do that anymore".&lt;/p&gt;

&lt;p&gt;Once it went to production, he and his colleagues saw the value of the same and got the power of "Done means Released" and "Iterative Development".&lt;/p&gt;

&lt;p&gt;Our customer was a programmer too, and the build pipeline gave him the confidence to change the code and deploy. Feature Toggles gave him the power of turning features on/off according to his discretion with no dependency on us.&lt;/p&gt;

&lt;p&gt;All these were possible because of the investment we'd put in for a build pipeline to make the codebase ready to deploy anytime.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/12/Continuous-Delivery-Case-Studies-Part-1.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/12/Continuous-Delivery-Case-Studies-Part-1.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="iterative-and-incremental"&gt;Iterative and Incremental&lt;/h1&gt;

&lt;p&gt;The above case studies show how Continuous Delivery can result in positive business outcomes. The focus is on the discipline of delivery, to become predictable and sustainable through iterative and incremental development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/12/iterative-development.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/12/iterative-development.png" alt="iterative-development" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I can write a set of tools we used for Test Driven Development, Continuous Integration, Configuration Management etc. Those are important, but the easier bit too. The tools will help you be efficient, the process of iterations is what helps in being predictable.&lt;/p&gt;

&lt;p&gt;So what is the iteration? It is a four steps process:&lt;/p&gt;

&lt;h2 id="understand"&gt;Understand&lt;/h2&gt;

&lt;p&gt;The key here is understanding the end users, understanding the business. The important questions to ask are: What are the problems? What are the constraints? This improves Empathy - the empathy for end users, empathy for the team - the key for any product's success.&lt;/p&gt;

&lt;p&gt;During the onsite trip, we visited and spoke to the end users , watched their challenges and their constraints. This helped us to understand "why are we building what we are building".&lt;/p&gt;

&lt;h2 id="define"&gt;Define&lt;/h2&gt;

&lt;p&gt;In this step, we defined what are the milestones to be achieved. The team has a good understanding of the goals and the constraints, this step is solving those in a way that the business gets the value as quickly as possible.&lt;/p&gt;

&lt;p&gt;We did quick prototypes and ran it through the end users. This helped us to build the right things which users will potentially use. These prototypes become the basis for what needs to be built and the focus is to have the first usable version within 4-6 weeks or earlier.&lt;/p&gt;

&lt;p&gt;We use &lt;a href="http://www.gv.com/sprint/"&gt;Design Sprints&lt;/a&gt; and &lt;a href="http://impactmapping.org/"&gt;Impact Mapping&lt;/a&gt; to define the milestones which rely heavily on &lt;a href="https://en.wikipedia.org/wiki/Design_thinking"&gt;Design Thinking Principles&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="deliver"&gt;Deliver&lt;/h2&gt;

&lt;p&gt;This is the step to convert the ideas into working software in small steps in a sustainable and repeatable way. The focus in this step is to make the software demoable throughout so that the deployment can be done anytime.&lt;/p&gt;

&lt;p&gt;The standard Extreme Programming and Continuous Delivery Practices are followed here such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/multunus/engineering-handbook/blob/master/tdd.md"&gt;Test Driven Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/multunus/engineering-handbook/blob/master/pair-programming.md"&gt;Pair Programming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://continuousdelivery.com/foundations/continuous-integration/"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"&gt;Feature Toggles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://continuousdelivery.com/foundations/configuration-management/"&gt;Automated Deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://martinfowler.com/bliki/DeploymentPipeline.html"&gt;Build Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="improve"&gt;Improve&lt;/h2&gt;

&lt;p&gt;Nothing is perfect, that is why Continuous Improvement is important. In this step you look back and ahead and see what needs to be changed to improve the value stream. Here look at the business metrics to see what has changed and what needs to be improved. &lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.jamesshore.com/Agile-Book/retrospectives.html"&gt;Retrospectives&lt;/a&gt; and &lt;a href="http://blog.crisp.se/2009/09/29/henrikkniberg/1254176460000"&gt;Cause-Effect Analysis&lt;/a&gt; help the team to reflect and improve continuously.  &lt;/p&gt;

&lt;p&gt;And finally, &lt;strong&gt;&lt;em&gt;rinse and repeat&lt;/em&gt;&lt;/strong&gt; the process continuously throughout the software delivery.&lt;/p&gt;

&lt;h2 id="keen-togive-a-try"&gt;Keen to give a try?&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/11/continuous-delivery-consulting-framework/"&gt;Checkout our detailed write-up&lt;/a&gt; to know more about a step by stepprocess of implementing Continuous Delivery.&lt;/p&gt;

&lt;p&gt;Let's know your thoughts/questions/comments/suggestions. We will be glad to talk more.&lt;/p&gt;

&lt;h1 id="more-stories"&gt;More Stories&lt;/h1&gt;

&lt;p&gt;The above are the highlights of our experiences with Continuous Delivery.&lt;/p&gt;

&lt;p&gt;If you want to hear more stories about Continuous Delivery check out the following links. It talks in detail about implementing Continuous Delivery across different domains, the challenges faced and how the teams overcame the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bbWFCKGhxOs"&gt;Banking on Innovation &amp;amp; DevOps - Capital One&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.infoq.com/presentations/financial-services-devops"&gt;Fighting the #fintech Wave with DevOps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=bAPyI0Js5pE"&gt;DevOps for Telegraph Companies - Western Union&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.infoq.com/presentations/CIM-continuous-delivery"&gt;Continuous Delivery @ Comcast Interactive Media&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Building an SQL like DSL in Clojure – Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/building-sql-like-dsl-clojure-part-1/"/>
    <id>http://www.multunus.com/blog/2016/11/building-sql-like-dsl-clojure-part-1/</id>
    <published>2016-11-29T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Clojure is a modern dialect of Lisp. Being a Lisp is what gives Clojure a lot of its power. Clojure, Lisps in general, lend itself to a bottom-up style of programming. The basic idea is to gradually build up on the abstractions provided by the language and libraries until we have abstractions that can be directly applied to problems in the domain. We can take this approach to an extent where these abstractions act as a custom programming language specific to the domain or a DSL.&lt;/p&gt;

&lt;p&gt;A DSL which uses a subset of the syntax of the host language is known an internal or embedded DSL. This is particularly effective in Clojure because of the syntax of Clojure or rather the lack of it :)&lt;/p&gt;

&lt;p&gt;The trigger behind this post is the book called &lt;a href="http://www.gigamonkeys.com/book/"&gt;Practical common lisp &lt;/a&gt;. This example mostly extends upon the example from the third chapter in this book.&lt;/p&gt;

&lt;h3 id="an-sql-query-dsl"&gt;An SQL query DSL&lt;/h3&gt;

&lt;p&gt;The complete source code for this post is available on &lt;a href="https://github.com/kp2222/sql-dsl-clj"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Goal of this exercise to create a toy database and a query DSL. We will piggyback on the Clojure's immutable data structures for the database.&lt;/p&gt;

&lt;p&gt;We will use a Global Map to store the records (which are again just plain Clojure maps). The database will not have a schema or support for persistence.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(def db (atom {}))

;; An example database
toy-database.core&amp;amp;gt; @db

{:songs
({:title "Home", :artist "Dixie Chicks", :rating 9}
{:title "Home", :artist "Dixie Chicks", :rating 9}
{:title "Fly", :artist "Dixie Chicks", :rating 8}
{:title "Roses", :artist "Kathy Mattea", :rating 7})}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will need an API to insert data into the database. Since we are using Clojure's immutable data structures we can just use the sequence functions to insert data. But let's introduce some basic abstraction to keep things easier to change later.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn insert-into
[table-name record]
(swap! db update-in [table-name] conj record))

;; insert sample data

(insert-into :songs {:title "Roses" :artist "Kathy Mattea" :rating 7})
(insert-into :songs {:title "Fly" :artist "Dixie Chicks" :rating 8})
(insert-into :songs {:title "Home" :artist "Dixie Chicks" :rating 9})
(insert-into :songs {:title "Home" :artist "Dixie Chicks" :rating 9})

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have now a database and an API to insert data into it. We can finally start on the querying API.&lt;/p&gt;

&lt;p&gt;Let's start with the simplest solution that will work. Let's create a function "select" that will return all the records from a table.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn select
[table-name]
(table-name @db))

toy-database.core&amp;amp;gt; (select :songs)

({:title "Roses", :artist "Kathy Mattea", :rating 7}
{:title "Fly", :artist "Dixie Chicks", :rating 8}
{:title "Home", :artist "Dixie Chicks", :rating 9}
{:title "Home", :artist "Dixie Chicks", :rating 9})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That works and it has a very vague similarity to SQL but not very useful yet because the bare minimum a query language should support is the ability to filter the records based on search criteria.&lt;/p&gt;

&lt;p&gt;Modifying the select method to add support for filtering records based on a predicate function.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn select
[table-name where-pred]
(filter where-pred
(table-name @db)))

toy-database.core&amp;amp;gt; (select :songs (fn[record] (= (:title record) "Roses")))
({:title "Roses", :artist "Kathy Mattea", :rating 7})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This does what we wanted but&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;This hardly looks like SQL&lt;/li&gt;
  &lt;li&gt;This API leaks the implementation of the db to the consumers of the API.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's see what are some quick improvements we can make. Let's take a look at the use case from the last example.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(select :songs (fn[record] (= (:title record) "Roses")))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only things that will change in the above query are the attribute name (:title) and the value ("Roses"). Everything else is just an artifact of our implementation. Let's see if we can change our API so that the consumer only has to supply the attribute name and the value.&lt;/p&gt;

&lt;p&gt;Let's create a new function &lt;code&gt;where&lt;/code&gt;, which takes the attribute name and value , then returns the same selector function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functions which take other functions as arguments and/or return other function are known as Higher order functions.&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn where
[attr-name attr-val]
(fn[record]
(= (attr-name record) attr-val)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Select query with these changes.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(select :songs (where :title "Roses"))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This looks much better and it is starting to look more like an SQL query.&lt;/p&gt;

&lt;p&gt;At this point, we only support one kind of filtering of records that is based on the equality of a single attribute&lt;/p&gt;

&lt;p&gt;Let's add support for more filtering methods and to do so we need to make it as easy as it is possible to create new filtering methods.&lt;/p&gt;

&lt;p&gt;As a first step, we will extract the equality predicate from inside &lt;code&gt;where&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;;; eq is a higher order function which accepts the attribute name
;; and attribute value and returns the actual predicate function
;; which will run against a record in the database

(defn eq
[attr-name attr-val]
(fn[r]
(= (attr-name r) attr-val)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that &lt;code&gt;eq&lt;/code&gt; implements the same functionality that &lt;code&gt;where&lt;/code&gt; used to. should we just get rid of &lt;code&gt;where&lt;/code&gt;?&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;select :songs (eq :title "Roses")
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Although this works just fine, I feel we have some lost some clarity in our API. The where method made it more explicit that a filter operation is underway. Let's add the where clause back&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(select :songs (where (eq :name "Roses")))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This looks better but now that &lt;code&gt;where&lt;/code&gt;is just going to be there for aesthetic reasons what would it actually do? Ideally, it should delegate the actual work to the predicate function passed to it. Let's re-define &lt;code&gt;where&lt;/code&gt; to do that&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn where
[pred]
(fn [r]
(pred r)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at this closely it is easier to see that we can simplify this further&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn where
[pred]
pred)

toy-database.core&amp;amp;gt; (select :songs (where (eq :title "Roses")))
({:title "Roses", :artist "Kathy Mattea", :rating 7})

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let's add support for one more filter predicate. We will next add a &lt;code&gt;greater than&lt;/code&gt; filter. This would enable us to write queries like fetch all the songs with a rating greater than 8.&lt;/p&gt;

&lt;p&gt;Let's name this new filter &lt;code&gt;gt&lt;/code&gt;. We will use the compare method from Clojure core.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(compare x y) - Returns a negative number, zero, or a positive number
when x is logically 'less than', 'equal to', or 'greater than'
y&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn gt
[attr-name v]
(fn[r]
(pos? (compare (attr-name r) v))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Trying out our new filtering method in a select query&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;toy-database.core&amp;amp;gt; (select :songs (where (gt :rating 8)))
({:title "Home", :artist "Dixie Chicks", :rating 9} {:title "Home", :artist "Dixie Chicks", :rating 9})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This looks nice and looks like we are on the right track here. Given a method to combine these filters we have a reasonably powerful querying language.&lt;/p&gt;

&lt;p&gt;Before we get to implementing methods to combine predicates let's take a relook at how the current predicates are implemented.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defn eq
[attr-name attr-val]
(fn[r]
(= (attr-name r) attr-val)))

(defn gt
[attr-name v]
(fn[r]
(pos? (compare (attr-name r) v))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, there is no explicit API for creating new filtering functions. Let's try to bring in a bit more structure so that it is is more explicit and hopefully a bit more concise.&lt;/p&gt;

&lt;p&gt;For creating a new filter all we should have to do is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Specify the arguments that the filter takes&lt;/li&gt;
  &lt;li&gt;The logic for rejecting or selecting a given record.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given the above, our code should generate the predicate method in a form similar to our current &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;gt&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;Before we go ahead try to implement it let's see how we want this API to look like. The actual predicate logic that consumers of this API will write will need access to the record. Let's assume that this is somehow made available as &lt;code&gt;%&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(def-filter gt
[attr val]
(pos? (compare (attr %) val)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we will see what it take to actually implement something like this. The simplest solution is to take the above form and generate code similar to the previous version of &lt;code&gt;eq&lt;/code&gt; and &lt;code&gt;gt&lt;/code&gt;. This where Clojure's macro system comes in handy. Let's create a macro which does this.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(defmacro def-filter
[name args-vec pred-body]
`(defn ~name
~args-vec
(fn [~'%]
~pred-body)))

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Clojure goes to great extent to avoid the problem of variable capture in macros. Macros which deliberately tries to do variable capture are called &lt;a href="https://en.wikipedia.org/wiki/Anaphoric_macro"&gt;anaphoric macros&lt;/a&gt;. &lt;strong&gt;In a production codebase, this is probably a very bad idea&lt;/strong&gt; but we will go ahead and use it anyways ( &lt;code&gt;~'%&lt;/code&gt;) in this example because it makes the consumer API slightly simpler&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Let's take a look at how to use this macro&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(def-filter eq
[attr val]
(= (attr %) val))

;; This macro usage expands to a form very similar to our original
;; definition of eq

toy-database.core&amp;amp;gt; (pprint (macroexpand '(def-filter eq
[attr val]
(= (attr-name record) attr-val))))
(def
eq
(clojure.core/fn
([attr val] (clojure.core/fn [%] (= (attr-name record) attr-val)))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have a better way to create new filters. Let's add some constructs that will allow us to combine these filter predicates. We usually combine the predicates using a logical &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;or&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If we look closely at what these new constructs need to do you can see that they are not very different from the filters we have already created. These are just filters that will take other filters as arguments, Higher order filters if you want to call it that way :)&lt;/p&gt;

&lt;p&gt;One way to combine filters is using logical and. The record gets selected into the result if all the filters select them. It turns out there is already a Clojure core function called every-pred which does what we want.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;every-pred Takes a set of predicates and returns a function f that returns true if all of its
composing predicates return a logical true value against all of its arguments, else it returns
false. Note that f is short-circuiting in that it will stop execution on the first
argument that triggers a logical false result against the original predicates.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(def-filter and
[&amp;amp;amp; preds]
((apply every-pred preds) %))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we are at this anyway let's implement &lt;code&gt;or&lt;/code&gt; as well. Turns we can again count on clojure core functions. There is function called some-fn&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(def-filter or
[&amp;amp;amp; preds]
((apply every-pred preds) %))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let' see a sample query&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(select :songs (where (or (eq :artist "Dixie Chicks")
(gt :rating 6))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point, we have quite a powerful querying language that can be used to create queries that are arbitrarily complex. All this is made with just ~ 40 lines of code.&lt;/p&gt;

&lt;p&gt;This is a listing of the complete source code up to this point&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(ns toy-database.core
(:refer-clojure :exclude [or and]))

(def db (atom {}))

(defn insert-into
"adds a new record"
[table-name record]
(swap! db update-in [table-name] conj record))

(defmacro def-filter
[name args-vec pred-body]
`(defn ~name
~args-vec
(fn [~'%]
~pred-body)))

(def-filter eq
[attr val]
(= (attr %) val))

(def-filter gt
[attr val]
(pos? (compare (attr %) val)))

(def-filter and
[&amp;amp;amp; preds]
((apply every-pred preds) %))

(def-filter or
[&amp;amp;amp; preds]
((apply some-fn preds) %))

(defn where
[pred]
pred)

(defn select
[table filter-pred]
(filter filter-pred
(table @db)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What next in part 2&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;update statements&lt;/li&gt;
  &lt;li&gt;support for joining multiple collections in queries&lt;/li&gt;
  &lt;li&gt;support for aggregation grouping etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The goal of this exercise was to showcase the clarity and brevity of such a programming style. Of course, this is a superficial example that does not take care of a lot of concerns you should handle in the production scenario. There are quite a number of Clojure libraries that follow this approach in the wild. The below is a starter list of such libraries&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://riemann.io/"&gt;Riemann&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/weavejester/compojure"&gt;Compojure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/flosell/lambdacd"&gt;LambdaCD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should also take a look at the following books/articles&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.gigamonkeys.com/book/"&gt;Practical common lisp &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.paulgraham.com/onlisp.html"&gt;On Lisp - Paul Graham&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://martinfowler.com/books/dsl.html"&gt;Domain specific languages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery - An overview of our consulting framework</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/continuous-delivery-consulting-framework/"/>
    <id>http://www.multunus.com/blog/2016/11/continuous-delivery-consulting-framework/</id>
    <published>2016-11-22T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Change is painful! However you try, the effects of change only make it tougher before it gets easier/simpler. &lt;/p&gt;

&lt;p&gt;Implementing Continuous Delivery in any organisation is no different.&lt;/p&gt;

&lt;p&gt;Continuous Delivery is building a pipeline for software delivery in a way that the production deployments are prioritised according to business needs. It changes the way the team works. The goal is to move IT deployments from being a voodoo thing to a reliable and fast way to solve customers' problems.&lt;/p&gt;

&lt;p&gt;Because of the obvious business benefits it brings, CXOs want to move to this way of working.&lt;/p&gt;

&lt;p&gt;But - yes, &lt;strong&gt;&lt;em&gt;but&lt;/em&gt;&lt;/strong&gt; here as well. The typical question follows, "I understand, but how do I get started?".&lt;/p&gt;

&lt;p&gt;Automation is the right and common step for most organisations. The problem with automation without analysing the actual constraint(s) makes it longer to see impacts that most companies have the patience.&lt;/p&gt;

&lt;h1 id="our-framework"&gt;Our Framework&lt;/h1&gt;

&lt;p&gt;Here is our framework you could apply to implement Continuous Delivery in your team.&lt;/p&gt;

&lt;p&gt;The framework, extracted from the book &lt;a href="https://www.amazon.com/Toyota-Kata-Managing-Improvement-Adaptiveness/dp/0071635238"&gt;Toyota Kata&lt;/a&gt;, focusses on problems, solutions and feedback.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/CD-Implementation-Process-1.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/CD-Implementation-Process-1.png" alt="CD Implementation Process" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id="phase-1-plan"&gt;Phase 1: Plan&lt;/h1&gt;

&lt;h2 id="stage-1understand"&gt;Stage 1: Understand&lt;/h2&gt;

&lt;p&gt;The first step for any improvement is to understand the current situation.&lt;/p&gt;

&lt;p&gt;Observing software delivery, analysing business rationale and asking questions help to understand the current state of IT delivery better.&lt;/p&gt;

&lt;p&gt;Asking questions to understand the initiatives the team had tried in the past, understanding what worked and what didn't will help build a good picture of software delivery process and business needs/constraints.&lt;/p&gt;

&lt;p&gt;It is &lt;em&gt;recommended&lt;/em&gt; &lt;strong&gt;&lt;em&gt;not to&lt;/em&gt;&lt;/strong&gt; jump to a solution at this stage.  &lt;/p&gt;

&lt;h3 id="risks"&gt;Risks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Trust -  difficult to get the trust of people to share their challenges and opinions&lt;/li&gt;
  &lt;li&gt;Interruptions - doing it without disrupting the day-to-day operations of the team&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="stage-2define"&gt;Stage 2: Define&lt;/h2&gt;

&lt;p&gt;This stage involves defining the current state, the ideal state and identifying the next step for improvement. &lt;/p&gt;

&lt;p&gt;An effective way is to draw the entire value stream, highlight the constraints and prioritise the most immediate constraint to be tackled.&lt;/p&gt;

&lt;h3 id="risks-1"&gt;Risks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Local maxima -  possible to get stuck with the immediate problem you see without getting a 360° overview. Drawing the entire value stream should help to avoid this problem.&lt;/li&gt;
  &lt;li&gt;Trust - This continues to be a risk for people to bring up their concerns and opinions&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="phase-2-do"&gt;Phase 2: Do&lt;/h1&gt;

&lt;h2 id="stage1-deliver"&gt;Stage 1: Deliver&lt;/h2&gt;

&lt;p&gt;Define potential solutions for the problem that is previously identified. This is where it gets complicated.&lt;/p&gt;

&lt;p&gt;As tackling each constraint is a big hairy project, you will need an Understand, Define, Do and Improve stage for every constraint you have identified.  &lt;/p&gt;

&lt;p&gt;You can think of it as one &lt;a href="https://www.isixsigma.com/dictionary/deming-cycle-pdca/"&gt;Deming Cycle&lt;/a&gt; inside another Deming Cycle.&lt;/p&gt;

&lt;h3 id="risks-2"&gt;Risks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Local maxima -  still a risk at this stage&lt;/li&gt;
  &lt;li&gt;Interruptions - Bringing in the improvements without disrupting the day-to-day operations of the team&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id="phase-3check-act"&gt;PHASE 3: CHECK + ACT&lt;/h1&gt;

&lt;h2 id="stage-4improve"&gt;Stage 4: Improve&lt;/h2&gt;

&lt;p&gt;This stage is to analyse results from the experiments, measuring what improved and what needs to be changed.&lt;/p&gt;

&lt;p&gt;Apply the changes to improve the next Understand-&amp;gt;Define-&amp;gt;Do-&amp;gt;Improve cycle.&lt;/p&gt;

&lt;h3 id="risks-3"&gt;Risks&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Wrong Analysis or Measurements - The right analysis of the results is the key over here. Defining early what needs to be measured should solve this problem.&lt;/li&gt;
  &lt;li&gt;Safety - People may not speak up: An environment that fosters safety to share feedback should improve&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you've read this far, only makes sense for you to try this out in your organisation.&lt;/p&gt;

&lt;p&gt;We'd love to hear your experiences. Please add them as comments.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TDD, Some Untold Secrets</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/tdd-untold-secrets/"/>
    <id>http://www.multunus.com/blog/2016/11/tdd-untold-secrets/</id>
    <published>2016-11-17T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Other than the usual procedure and perks of following TDD, there are a few things that you come to realize about TDD once you really get down to practising it for a while. Some of these aspects might be rather subtle while others are theoretically obvious but practically a little harder to observe when starting out with TDD. Let's go through some of them. The ideas mentioned below are most applicable for unit/functional tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/tdd-quote-bill-hetzel.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/tdd-quote-bill-hetzel.png" alt="tdd-quote-bill-hetzel" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="executing-tdd-the-right-way"&gt;Executing TDD The Right Way&lt;/h2&gt;

&lt;p&gt;Uncle Bob defined the &lt;a href="http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd"&gt;three laws of TDD&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You are not allowed to write any production code unless it is to make a failing unit test pass.&lt;/li&gt;
  &lt;li&gt;You are not allowed to write any more of a unit test than is sufficient to fail; and compilation failures are failures.&lt;/li&gt;
  &lt;li&gt;You are not allowed to write any more production code than is sufficient to pass the one failing unit test.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pretty easy, right? You later come to realize that these are more than just simple instructions. They are a set of guidelines that help you not only follow the practice of TDD, but also reap the benefits of it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;All&lt;/strong&gt; the code you write will be testable, further implying that it will be quite decoupled since that is a requirement to test a module in isolation.&lt;/li&gt;
  &lt;li&gt;You can clean up messy code without any fear that you'll unknowingly break something. The tests can catch any such changes immediately.&lt;/li&gt;
  &lt;li&gt;Tests serve as documentation in themselves! Every line of code you write is backed up by one or more tests, which if well phrased can explain exactly what the code does without any extra effort.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are additional benefits that are explained below.&lt;/p&gt;

&lt;h2 id="immediate-feedback"&gt;Immediate Feedback&lt;/h2&gt;

&lt;p&gt;When following TDD, the tendency is to run the tests more frequently. Maybe not the entire test suite all the time, but at least the tests pertaining a particular method or class will get run very often. This is a natural outcome of TDD. The resulting advantage is that you get instantaneous feedback on several areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If the test you wrote passes without any additional code, then you know that the test is &lt;em&gt;probably&lt;/em&gt; flawed and needs to be improved.&lt;/li&gt;
  &lt;li&gt;Each test is run as it is created, and hence ensures that there is a check for each scenario that is going to be introduced into the code. Once the code is written, the test also verifies that it is working as expected.&lt;/li&gt;
  &lt;li&gt;The code grows more organically and every point after a test passes is a potential point for refactoring. The only thing to check after refactoring is whether the tests still pass! This already results in better quality code.&lt;/li&gt;
  &lt;li&gt;Regression testing happens on the fly! This is one of the more subtle advantages that you do not see until you are dealing with a big-enough codebase. As you add more code and run the tests on the fly, you're checking not only the functionality of new code, but also that whatever functionality was previously there is still preserved (unless of course the new code intentionally modifies it!).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="impact-on-productivity"&gt;Impact on Productivity&lt;/h2&gt;

&lt;p&gt;This is probably going to be counter-intuitive, but following TDD is actually going to increase productivity! This is something that has been both experienced by our folks and &lt;a href="http://nparc.cisti-icist.nrc-cnrc.gc.ca/eng/view/accepted/?id=0420df64-f474-4072-8df6-c7b87c0de643"&gt;scientifically proven&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a nutshell, here's what happens. TDD forces you to write functionality, one logical increment (does that even make sense?!) at a time. So you are indirectly spiraled into a continuous cycle of creating small tests and writing just enough code to make them pass. Since these activities are sufficiently small, they can be accomplished fast and result in both higher satisfaction and better focus. In geek terminology, this is a recursive loop!&lt;/p&gt;

&lt;h3 id="the-ping-pong-pattern"&gt;The Ping Pong Pattern&lt;/h3&gt;

&lt;p&gt;In addition to following TDD, if you're practising pair programming, there's an interesting pattern that the pair can follow. It's called the &lt;a href="http://c2.com/cgi/wiki?PairProgrammingPingPongPattern"&gt;Ping Pong pattern&lt;/a&gt;. The idea is simple - the pair comprises two programmers, Frank and Lois. Frank writes a new failing test. Lois implements the code to get the test passing then writes the next failing test. Now Frank writes code to make the test pass. And the cycle repeats. This greatly improves focus, flow and hence productivity.&lt;/p&gt;

&lt;h2 id="help-slow-tests"&gt;Help! Slow Tests!&lt;/h2&gt;

&lt;p&gt;If your test suite is running really slowly, that's probably feedback that something is not right. There are a couple of common reasons why your tests run slowly, and these are described below.&lt;/p&gt;

&lt;h3 id="network-requests"&gt;Network requests&lt;/h3&gt;

&lt;p&gt;In order to have really independent tests, your tests should not make any network requests. Instead, these requests should be stubbed or mocked to mimic the behaviour of the service to which the requests are sent. There are usually a couple of ways to accomplish this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simply stub the network request method calls to return the apt value&lt;/li&gt;
  &lt;li&gt;Use a mocking library that automatically returns the response when the request is raised&lt;/li&gt;
  &lt;li&gt;Fire up a mock server that behaves just like the service the test contacts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course the option that you choose ultimately depends on how important it is to test the network request itself. If you're dealing with a less critical task such as fetching a simple number, you could go with a simple stub. However, for more complicated ones such as testing more complicated requests to other microservices, you'd probably want to have a more accurate response mechanism and could go for one of the last 2 options.&lt;/p&gt;

&lt;h3 id="too-much-test-setup"&gt;Too much test setup&lt;/h3&gt;

&lt;p&gt;This is probably a smell rather than the problem itself. The most likely culprit if you find yourself writing so much setup is the lack of sufficient modularisation. The methods are handling too much responsibility than is necessary. If the implementation comprises several computationally intensive procedures, then your test is bound to run slowly. Rely on TDD itself to come up with better methods. Plan out how to write better and smaller methods that you can easily stub if required. This also results in more maintainable code.&lt;/p&gt;

&lt;h3 id="over-reliance-on-persistence-of-records"&gt;Over-reliance on persistence of records&lt;/h3&gt;

&lt;p&gt;As fast as database queries are, relying too much on having all the necessary records persisted will slow down your tests. At a granular level, the difference may not be significant. However, considering the test suite as a whole, half a second more for each test can make a huge difference! Try and use more stubbed objects. These are bound to be quite fast and will reduce the test suite run time considerably.&lt;/p&gt;

&lt;h3 id="a-quick-fix-for-slow-tests"&gt;A Quick Fix for Slow Tests&lt;/h3&gt;

&lt;p&gt;Since tests are usually (and ideally) not dependent on each other, they can be run in parallel without messing up anything. Of course this can only be stretched as far as the available resources in the system. For a single-core machine, parallel tests may not yield significant gains. Pushing the machine too hard can even increase run time since there's the overhead of maintaining the parallel system. The ideal case is to probably have as many parallel lines as there are cores in the system.&lt;/p&gt;

&lt;p&gt;There's also an added disadvantage, though very minor, that you'll need multiple databases for each parallel line of tests.&lt;/p&gt;

&lt;h2 id="so-what-can-i-do-now"&gt;So what can I do now?&lt;/h2&gt;

&lt;p&gt;It's never easy to start on TDD since it requires a different kind of thinking to write 'code' that will test the actual code you'll be writing. But with practice, it can easily become second nature. I'd recommend starting with a well-supported platform such as Ruby + RSpec to ensure setting the sails goes as smoothly as possible, although this may vary depending on experience you may already have with other languages and testing frameworks.&lt;/p&gt;

&lt;p&gt;Also, please feel free to reach out in the comment section below if you have any questions or thoughts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Polymorphism - Ruby vs Clojure</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/polymorphism-functional-vs-object-oriented/"/>
    <id>http://www.multunus.com/blog/2016/11/polymorphism-functional-vs-object-oriented/</id>
    <published>2016-11-16T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One advantage of learning Clojure is that it gives you a different perspective for looking at well-known programming idioms. Polymorphism is one such example.&lt;/p&gt;

&lt;p&gt;Roughly speaking Polymorphism is a pattern where a common interface exists for different implementations of the same functionality. The decision as to which one of these implementations is selected usually decided (automatically without any plumbing code) based on the type of the object.&lt;/p&gt;

&lt;p&gt;Let's take a look at a more concrete example.&lt;/p&gt;

&lt;h2 id="ruby"&gt;Ruby&lt;/h2&gt;

&lt;p&gt;Let's consider a superficially simple program which exports resumes into different formats like CSV, PDF etc.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;Class Resume
 attr_accessor :name, :highest_qualification, :dob
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A simple solution without using polymorphism would be the below&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;Class ResumeExporter
  def initialize(format)
    @format = format
  end
  def export(resume)
    case format
    when :csv
       export_to_csv(resume)
    when :pdf
       export_to_csv(resume)
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The downsides to this approach are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It does not follow &lt;a href="https://en.wikipedia.org/wiki/Open/closed_principle"&gt;open/closed principle&lt;/a&gt; - You need to modify an existing method for adding support for new formats.&lt;/li&gt;
  &lt;li&gt;Duplication -  if there is some another functionality similar to export that is different for different formats we will have to repeat the same switch statement there.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A better solution&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-Ruby"&gt;class ResumeExporter
  def initialize(format)
    @exporter = Exporters.for(format)
  end
  def export(resume)
    @exporter.export(resume)
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class="language-Ruby"&gt;module Exporters
   def self.for(format)
      lookup_exporter(format)
   end

   class CsvExporter
     def export(resume)
       # create csv
     end
   end

   class PdfExporter
     def export(resume)
       # create PDF
     end
   end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is nothing novel about this, this is a very common pattern in object-oriented languages.&lt;/p&gt;

&lt;p&gt;The interesting bit is the export method.
~~~ruby
 @exporter.export(resume)
~~~&lt;/p&gt;

&lt;p&gt;We are using a common interface "export" and depending on the type the right implementation gets called. The idea of polymorphism and Object orientation seems very intermixed.&lt;/p&gt;

&lt;p&gt;How would you achieve the same in a programming language without objects and classes? Let's look at an example in Clojure&lt;/p&gt;

&lt;h2 id="clojure"&gt;Clojure&lt;/h2&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(ns resume-exporter.core)


(defn export
  [resume format]
  (case format
    :csv (export-csv resume)
    :pdf (export-pdf resume)))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This solution is very similar to the first Ruby solution and this has all the similar downsides as well. The second solution is where the approaches start to diverge a lot.&lt;/p&gt;

&lt;p&gt;In Ruby polymorphism was entirely based around creating separate classes for different exporters. That approach does not translate very well to Clojure because there are no classes in Clojure in the first place.&lt;/p&gt;

&lt;p&gt;Let's take a relook at what the Ruby polymorphic approach is doing a little more closely.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We call the export method on an instance of the exporter without really caring about what the actual concrete type of the exporter.&lt;/li&gt;
  &lt;li&gt;There are different implementation of the export method for each different type of format&lt;/li&gt;
  &lt;li&gt;Ruby's object oriented system correctly picks the right implementation based on the objects. In other words, Ruby's object system act as a dispatcher which dispatches a method call to the right implementation based on the type.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If we look at our first Clojure solution actually all these traits already exist. The only thing that missing is the method dispatch based on the type. Clojure multi-methods provide the same functionality. Let's try rewriting our solution using multi-methods&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-clojure"&gt;(ns resume-exporter.core)


(defmulti export-resume (fn [_ format] format))


(defmethod export-resume :csv [resume _]
  (csv-impl))
(defmethod export-resume :pdf [resume _]
  (pdf-impl))




(defn export
  [resume format]
  (export-resume resume format))

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;what does "defmulti" do here?&lt;/p&gt;

&lt;p&gt;It takes two arguments. The first one is the function name "export-resume". The second one is a function which just returns the value of the second argument.&lt;/p&gt;

&lt;p&gt;It essentially creates a dispatching function (The common interface similar to the export function in the ruby implementation) which will dispatch a function call to a matching implementation.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-ruby"&gt;(defmulti export-resume (fn [_ format] format))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;How do you decide what is matching? This is where the second argument to "defmulti" comes into the picture.&lt;/p&gt;

&lt;p&gt;The second argument is a function which will be called by the dispatching function with the arguments and return value of this function is matched against values mentioned as the second argument to "defmethod".&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Functional and objectOriented languages tackle the &lt;a href="http://wiki.c2.com/?ExpressionProblem"&gt;expression problem&lt;/a&gt; differently.&lt;/p&gt;

&lt;p&gt;The approach that ruby takes is a common pattern among the object-oriented languages.&lt;/p&gt;

&lt;p&gt;The advantage of the Clojure solution is that it enables run-time polymorphism without having to create object hierarchies.&lt;/p&gt;

&lt;p&gt;Another advantage of the Clojure solution is that here the dispatch is not limited to the type of the object, it can be based any arbitrary attributes of the input argument.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tryst With Continuous Delivery</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/tryst-continuous-delivery/"/>
    <id>http://www.multunus.com/blog/2016/11/tryst-continuous-delivery/</id>
    <published>2016-11-14T17:22:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;The first time I heard about Continuous Delivery was @ &lt;a href="http://rubyconfindia.org/rci2011/"&gt;Ruby Conf India '11,&lt;/a&gt; during the talk by &lt;a href="https://vimeo.com/25410072"&gt;Srushti Ambekallu and Brian Guthrie&lt;/a&gt;. I've been using &lt;a href="https://jenkins.io/"&gt;Jenkins&lt;/a&gt; as a Continuous Integration tool, but the talk exposed me to &lt;strong&gt;Deployment Pipeline&lt;/strong&gt;, a pipeline to push the code to next stage either automatically or manually.&lt;/p&gt;

&lt;p&gt;My research led me to the &lt;a href="https://www.amazon.com/Continuous-Delivery-Deployment-Automation-Addison-Wesley/dp/0321601912/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478767846&amp;amp;sr=8-1&amp;amp;keywords=continuous+delivery"&gt;Continuous Delivery&lt;/a&gt; book. I also found Jenkin's &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Build+Pipeline+Plugin"&gt;Build Pipeline Plugin&lt;/a&gt;, implemented as prescribed in the book.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/cd-pipeline.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/cd-pipeline.png" alt="cd-pipeline" /&gt;&lt;/a&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/cd-pipeline.jpg"&gt;\
&lt;/a&gt;Further research on this topic showed me that the concept is not new and many companies are doing it already.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LdOe18KhtT4"&gt;10+ Deploys Per Day: Dev and Ops Cooperation at Flickr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://air.mozilla.org/continuous-delivery-at-google/"&gt;Commit to Production in 8 minutes - Continuous Delivery @ Google,&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://timothyfitz.com/2009/02/10/continuous-deployment-at-imvu-doing-the-impossible-fifty-times-a-day/"&gt;Continuous Deployment at IMVU: Doing the impossible fifty times a day&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://timothyfitz.com/2009/03/09/cd-for-client-software/"&gt;Continuous Deployment for Downloadable Client Software&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that was the start of our Continuous Delivery Journey. I implemented Continuous Delivery @ Multunus and spoke about the same @ &lt;a href="http://www.slideshare.net/leenasn/push-button-deployment-using-jenkins"&gt;DevOpsDays '11&lt;/a&gt;, &lt;a href="https://prezi.com/56ueprf0mkql/continuous-delivery-on-android/"&gt;DroidCon India '11&lt;/a&gt;, and &lt;a href="https://docs.google.com/presentation/d/1C4Q4anw5E45TvIu397Vl3xCOmhrDSdP9yVQDhDbJ5So/present?slide=id.i0"&gt;Agile India '12&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I listened to a lot of talks in this space and spoke to people like &lt;a href="https://continuousdelivery.com/about/talks/"&gt;Jez Humble&lt;/a&gt; and &lt;a href="http://www.slideshare.net/fredgeorge"&gt;Fred George&lt;/a&gt; during a few occasions. These conversations were inspirational and informative and helped me to get new perspectives.&lt;/p&gt;

&lt;h2 id="the-first-big-show"&gt;The First Big Show&lt;/h2&gt;

&lt;p&gt;The real power of Continuous Delivery was visible to me when we worked with a Media Company. They deployed Android Tablets and Linux Media Players as Kiosk Devices in clinics across the US to air informative content relevant to the patients visiting the clinics.&lt;/p&gt;

&lt;p&gt;We built both the kiosk-mode application and also the application that the support team can use for controlling these devices remotely.&lt;/p&gt;

&lt;p&gt;This client leveraged Continuous Delivery to their business growth. The following graph shows the growth of devices during the engagement.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.multunus.com/portfolio/end-end-mobile-device-management-solution-health-media-enterprise/"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/if-stats.jpg" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.slideshare.net/leenasn/continuous-delivery-from-the-trenches-67506790"&gt;The journey through the Continuous Delivery&lt;/a&gt; helped me to understand &lt;a href="https://en.wikipedia.org/wiki/Lean_thinking"&gt;lean thinking&lt;/a&gt; better, got more clarity by reading more books in this area, especially:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/Lean-Mindset-Ask-Right-Questions/dp/0321896904/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478768773&amp;amp;sr=8-1&amp;amp;keywords=lean+mindset"&gt;Lean Mindset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/Lean-Enterprise-Performance-Organizations-Innovate/dp/1449368425/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478768790&amp;amp;sr=8-1&amp;amp;keywords=lean+enterprise"&gt;Lean Enterprise&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/Lean-Startup-Entrepreneurs-Continuous-Innovation/dp/0307887898/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478768805&amp;amp;sr=8-1&amp;amp;keywords=lean+start"&gt;Lean Startup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="spreading-the-bug"&gt;Spreading The Bug&lt;/h2&gt;

&lt;p&gt;Continuous Delivery is both good and simple. It's a perfect tool to achieve business success. The question, in that case, is why isn't everyone doing it?&lt;/p&gt;

&lt;p&gt;When something is simple, it doesn't equate to being easy. Quite the opposite. Simple things are harder to implement.&lt;/p&gt;

&lt;p&gt;We noticed this pattern more when collaborating with other teams during our consulting engagements or during meetups or conferences. These are teams who are maintaining  products in production for many years.&lt;/p&gt;

&lt;p&gt;Most of these teams have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Automated tests&lt;/li&gt;
  &lt;li&gt;Automated Deployments&lt;/li&gt;
  &lt;li&gt;Continuous Integration setup&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But the  comments from these teams are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Not sure when my code gets merged to master because it is awaiting review&lt;/li&gt;
  &lt;li&gt;When will my commit go to production, I don't know&lt;/li&gt;
  &lt;li&gt;If the business wants to deploy now, it is not as simple as running a single command. It involves:
    &lt;ul&gt;
      &lt;li&gt;Merging branches together&lt;/li&gt;
      &lt;li&gt;Do manual testing because of lack of confidence in the test suite&lt;/li&gt;
      &lt;li&gt;Dependency on the OPs team for infra setup even though the script exists&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problems are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lack of flow from commit to production&lt;/li&gt;
  &lt;li&gt;Manual testing, because of lack of confidence in the test suite&lt;/li&gt;
  &lt;li&gt;Deployments being Coupled with releases&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="a-nameget-startedhow-do-i-get-starteda"&gt;&lt;a name="get-started"&gt;How do I get started?&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The usual question that comes up during the conversation about Continuous Delivery, &lt;em&gt;All these makes sense, but how do I get started?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Most of the times, the changes required to be implemented are across the organisation and needs to be planned in such a way that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No, or  little negative Impact on the BAU&lt;/li&gt;
  &lt;li&gt;Have small, but visible wins at the early stage itself&lt;/li&gt;
  &lt;li&gt;The team that is involved are the early adopters of the change&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is  based on the below mentioned books and concepts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/DevOps-Handbook-World-Class-Reliability-Organizations/dp/1942788002/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478769340&amp;amp;sr=8-1&amp;amp;keywords=devops+handbook"&gt;DevOps Handbook&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.amazon.com/Toyota-Kata-Managing-Improvement-Adaptiveness/dp/0071635238/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478769361&amp;amp;sr=8-1&amp;amp;keywords=Toyota+Kata"&gt;Toyota Kata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://designthinking.ideo.com/"&gt;Design Thinking&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Theory_of_constraints"&gt;Theory of Constraints&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/PDCA"&gt;Deming Cycle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="diy"&gt;DIY&lt;/h2&gt;

&lt;p&gt;So you are convinced to improve your software delivery process.  Do a test drive of the framework with the following steps. &lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Draw the entire set of actions that happens from the point of identifying what needs to be delivered to the point of deploying it to production. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-8.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-8.png" alt="value_stream_1" /&gt;&lt;/a&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value-stream-1.png"&gt;\
&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Below each step, note  the time it stays at each stage, including the waiting time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-1-1.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-1-1-1024x143.png" alt="Value Stream " /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Identify 2-3 burning problems which slow down the delivery flow. Prioritise them. Identify the root cause using &lt;a href="https://en.wikipedia.org/wiki/5_Whys"&gt;5 &lt;/a&gt;&lt;a href="https://en.wikipedia.org/wiki/5_Whys"&gt;Whys&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-2-1.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-2-1-1024x233.png" alt="Value Stream " /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Brainstorm and write 3-4 action items, prioritise and pick up one. Apply the &lt;a href="https://en.wikipedia.org/wiki/Design_thinking#Divergent_thinking_versus_convergent_thinking"&gt;Diverge-Converge approach of Design Thinking&lt;/a&gt;, to arrive at creative ways to solve the problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-7.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/11/value_stream_1-7.png" alt="Action Items" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Implement it, do frequent reviews and repeat the process&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repeating the above, persistently for few iterations should help you to improve things little by little. Try and let us know your experiences.&lt;/p&gt;

&lt;p&gt;Want to know more about the framework? Read our &lt;a href="http://www.multunus.com/blog/2016/11/continuous-delivery-consulting-framework/"&gt;next post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you've read this far, only makes sense for you to try this out in your organisation.&lt;/p&gt;

&lt;p&gt;Please share your feedback. We'd love to hear your experiences.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Why Clojure?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/11/clojure-matters/"/>
    <id>http://www.multunus.com/blog/2016/11/clojure-matters/</id>
    <published>2016-11-11T17:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This post dives into the benefits of Clojure from the perspective of the tools that our team currently uses. Some of these benefits are not unique to Clojure. In fact, a lot of other functional programming languages share a few or more of these advantages.&lt;/p&gt;

&lt;p&gt;At the moment, the following programming languages are our go-to options. We use Ruby mostly on the server side. We use Javascript with React for web/mobile frontend. We sometimes use Java and Objective-C either for raw performance or when the particular platform needs it.&lt;/p&gt;

&lt;h3 id="what-is-clojure"&gt;What is Clojure&lt;/h3&gt;
&lt;p&gt;Clojure is a modern version of Lisp. This is where Clojure gets most of its power from. Clojure is a hosted language that targets the JVM and Javascript. A lot has already been written about what makes Lisp so powerful. If you are completely new to Lisp, this essay &lt;a href="http://www.paulgraham.com/avg.html"&gt;Beating the Averages&lt;/a&gt; from Paul Graham might convince you to look more into it.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://imgs.xkcd.com/comics/lisp_cycles.png" alt="Lisp XKCD" /&gt;&lt;/p&gt;

&lt;h2 id="why-clojure"&gt;Why Clojure?&lt;/h2&gt;

&lt;h3 id="an-obsession-for-simplicity"&gt;An obsession for simplicity&lt;/h3&gt;

&lt;p&gt;Clojure both as a language and as a community seems to be obsessed with making stuff simple. Although I don’t think any language would try to make things complicated by intention, the key aspect with Clojure is the clear definition of the difference between stuff that is &lt;a href="https://www.infoq.com/presentations/Simple-Made-Easy"&gt;simple vs easy&lt;/a&gt;. The community is obsessed about not making things easy at the cost of simplicity. Such a fundamental obsession of a technology community is likely to get reflected in the software built using such technology.&lt;/p&gt;

&lt;h3 id="working-with-values"&gt;Working with Values&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;It is better to have 100 functions operate on one data structure than to have 10 functions operate on 10 data structures."
 — Alan J. Perlis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In an object-oriented language, you will usually encapsulate data away in custom objects. Data in Clojure programs is represented in a way that is very close to how you would represent it on a piece of paper - just plain data without ornaments of behavior around it. We can create entire information models using the few immutable data structures provided by Clojure.&lt;/p&gt;

&lt;p&gt;The advantage is in increased level of composability. An interesting analogy is UNIX command line tools. All of them can work with streams of text and this makes them composable in ways in which the original authors did not think of. We already do this at a macro level in our systems. We transfer data between our system boundaries in something like JSON, and not as a custom object that only we understand. It is much easier to fabricate and validate data and that makes approaches like generative testing easier in Clojure.&lt;/p&gt;

&lt;h3 id="reach-of-the-language"&gt;Reach of the language&lt;/h3&gt;
&lt;p&gt;Clojure reaches multiple platforms. It is possible to build entire systems that consist of the server and web and mobile components entirely in Clojure. There is a significant decrease in cognitive load when you can work across your stack in a single programming language.&lt;/p&gt;

&lt;h3 id="performance"&gt;Performance&lt;/h3&gt;
&lt;p&gt;We usually prefer to code in a language like Ruby compared to Java because of the resultant productivity and expressiveness. But there are times when we need to use something like Java because Ruby is just too slow for certain tasks. With Clojure, you get performance that is very close to Java (which is significantly better than Ruby) without paying a price in productivity or expressiveness.&lt;/p&gt;

&lt;h3 id="clojurescript"&gt;ClojureScript&lt;/h3&gt;
&lt;p&gt;I would like to specifically emphasize ClojureScript. Even if you can’t use Clojure, it is totally worth using Clojurescript alone for the frontend. The experience of developing single page applications using ClojureScript with tools such as React, Figwheel and Reagent/OM in my opinion is superior to what the popular alternatives are with Javascript. Developer tooling is a general weakness of Clojure compared to more mature languages like Java and Ruby. But in the case of front-end development, this seems to be not true anymore. Starting to learn ClojureScript feels significantly easier compared to the madness in Javascript (npm, webpack, Bower, etc.). There is significantly less churn in the libraries available in ClojureScript compared to Javascript.&lt;/p&gt;

&lt;h3 id="macros"&gt;Macros&lt;/h3&gt;

&lt;p&gt;This is a very powerful feature of Lisp which allows you to write programs that generate programs. Although to be used sparingly, this enables any programmers to create extensions to the language without having to wait for the language designers to implement it. An example of where this has made a difference is the core.async macro in Clojure. core.async brings the power of CSP-style concurrency to Clojure. Because of the power of macros, this was created as a library and no changes to Clojure was required.&lt;/p&gt;

&lt;h3 id="whats-the-catch"&gt;What's the catch?&lt;/h3&gt;

&lt;p&gt;Having said all this, Clojure is still a relatively new language. There are issue and kinks that need to be fixed. These are a few issues that might annoy a first-time Clojure user. Although these are not show-stoppers, you will have to live with them until the community (of which you can be a good part of :) ) fixes them.&lt;/p&gt;

&lt;h3 id="lisp-syntax"&gt;Lisp syntax&lt;/h3&gt;
&lt;p&gt;People complain about parenthesis a lot, but you will just need to look beyond this. With the right development environment, you will stop noticing this fairly soon. What you will soon realize is that this is what makes the Lisp syntax simple. You can learn the entire syntax in under 10 mins. This simplicity also makes it possible for tools like Paredit to exist (&lt;a href="http://danmidwood.com/content/2014/11/21/animated-paredit.html"&gt;Paredit is an emacs minor mode&lt;/a&gt; which enables structural editing of Lisp-like languages).&lt;/p&gt;

&lt;p&gt;![alt text](http://imgs.xkcd.com/comics/(.png)&lt;/p&gt;

&lt;h3 id="steep-learning-curve"&gt;Steep learning curve&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;A language that doesn't affect the way you think about programming, is not worth knowing.
 — Alan J. Perlis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Clojure will really take you outside your comfort zone if you are not used to a functional style of programming. This is not necessarily a bad thing, but what is important is to set the right expectations. So unless you have prior experience in functional programming languages, don’t expect to pick it up over a weekend.&lt;/p&gt;

&lt;h3 id="error-messages-can-be-cryptic"&gt;Error messages can be cryptic&lt;/h3&gt;
&lt;p&gt;Although you get used to this after a while, this is one of the most annoying things I felt as a beginner. Some of this difficulty is because Clojure is a hosted language. Hopefully, this will improve in the near future itself.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;If reading this has made you curious, here are some materials that you might want to check out:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.braveclojure.come/"&gt;Clojure tutorial for beginners &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.joyofclojure.com/"&gt;The Joy of Clojure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;You should probably watch these irrespective of whether you intend to use Clojure or not&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://changelog.com/posts/rich-hickeys-greatest-hits"&gt;Rich Hickeys greatest hits&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A meta talk about the joy of working with &lt;a href="https://www.youtube.com/watch?v=ShEez0JkOFw"&gt;simple tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Autonomous RC car using Raspberry Pi and Neural Networks</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/07/autonomous-rc-car-using-raspberry-pi-and-neural-networks/"/>
    <id>http://www.multunus.com/blog/2016/07/autonomous-rc-car-using-raspberry-pi-and-neural-networks/</id>
    <published>2016-07-30T00:54:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In this project, we will be building an autonomous rc car using &lt;a href="https://en.wikipedia.org/wiki/Supervised_learning"&gt;supervised learning&lt;/a&gt; of a &lt;a href="https://en.wikipedia.org/wiki/Artificial_neural_network"&gt;neural network&lt;/a&gt; with a single hidden layer. We will use a remote-controlled car with a &lt;a href="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/"&gt;Raspberry Pi&lt;/a&gt; and a &lt;a href="https://www.raspberrypi.org/products/camera-module/"&gt;Raspberry Pi camera module&lt;/a&gt; mounted on top. In the training mode, the camera module would provide images needed to train the neural network and in the autonomous mode; would provide the images to the trained model to predict the movements and direction of the car. You can find the Github repository for this project &lt;a href="https://github.com/multunus/autonomous-rc-car"&gt;here&lt;/a&gt;. Here's a video of the car in action.&lt;/p&gt;

&lt;iframe class="frame-container" width="100%" height="315" src="https://www.youtube.com/embed/dCyBvLjW6X0" frameborder="0" allowfullscreen=""&gt;&lt;/iframe&gt;

&lt;h2 id="setup"&gt;Setup&lt;/h2&gt;
&lt;p&gt;We will need a remote controlled car, a Raspberry Pi, a power bank, an L293D Motor Driver IC and some jumper wires to connect the circuits. We glued a cardboard to the top of the RC car and fixed the Raspberry Pi and the power bank to it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/IMG_0618.jpg"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/IMG_0618-300x225.jpg" alt="Autonomous car" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="take-one"&gt;Take One&lt;/h2&gt;
&lt;p&gt;Our initial approach was to use the Raspberry Pi as a radio transmitter by figuring out the frequencies for the RC car using &lt;a href="https://github.com/bskari/pi-rc"&gt;pi-rc&lt;/a&gt; and replace the remote control. We adopted this approach, and things were progressing well until we developed slightly more complicated circuits. The car would be too fast around the turns, and the natural approach to take would be to reduce the speed around the corners. We would have had to make modifications to control the DC motors of the car or get a geared remote controlled car. We went ahead with the first approach!&lt;/p&gt;

&lt;h2 id="say-no-to-remote-controllers"&gt;Say no to remote controllers&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/IMG_0522.jpg"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/IMG_0522-300x225.jpg" alt="Autonomous car without the remote" /&gt;&lt;/a&gt; The remote controller on the left is disappearing slowly!!&lt;/p&gt;

&lt;p&gt;We will be referring the DC motor controlling the left/right direction as the front motor and the motor controlling the forward/reverse direction as the back motor. An L293D Motor Driver IC will be used to control the motors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/RC-car-driver-IC-3.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/RC-car-driver-IC-3-300x282.png" alt="Circuit Diagram for the RC car controller" /&gt;&lt;/a&gt; Circuit Diagram for the RC car controller&lt;/p&gt;

&lt;p&gt;We'll connect two &lt;code&gt;GPIO&lt;/code&gt; pins( &lt;code&gt;GPIO17&lt;/code&gt; and &lt;code&gt;GPIO27&lt;/code&gt;) from the Raspberry Pi to the two Input pins for Motor 1(Input 1, Input 2) of the IC and another &lt;code&gt;GPIO&lt;/code&gt; pin(&lt;code&gt;GPIO22&lt;/code&gt;) to the Enable pin for Motor 1(Enable 1,2) of the IC. We'll connect the Output pins for Motor 1(Output 1, Output 2) of the IC to the back motor. With this approach, we can control not only the forward/reverse direction of the motor but also the speed of the motor by setting the frequency and duty cycle of the PWM output to the Enable pin. Similarly, two &lt;code&gt;GPIO&lt;/code&gt; pins(&lt;code&gt;GPIO19&lt;/code&gt; and &lt;code&gt;GPIO26&lt;/code&gt;) from the Raspberry Pi are connected to the two Input pins for Motor 2(Input 3, Input 4) of the IC and the Output pins for Motor 2(Output 3, Output 4) of the IC is connected to the front motor. We have now eliminated the need for any radio transmitter to control the movement of the car.&lt;/p&gt;

&lt;h2 id="lets-mount-that-camera"&gt;Let's mount that camera&lt;/h2&gt;
&lt;p&gt;The Raspberry Pi camera module mounted on top of the car captures the images required for the training and the autonomous navigation of the car. The camera module was attached to a piece of cardboard which was not sturdy and would change the angle of inclination of the camera. A slight shift in the angle of inclination would cause the model trained on the previous set of images to perform very poorly due to the mismatch between the current viewport and the earlier viewport. We fixed this issue by mounting the camera on a sturdy stand and also ensured that the camera would be centred thus, providing a very broad view.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/146979113190599.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/146979113190599-225x300.png" alt="Camera mounted on a sturdy stand atop the autonomous car" /&gt;&lt;/a&gt; Camera mounted on a sturdy stand&lt;/p&gt;

&lt;h2 id="with-great-images-come-great-responsibility"&gt;With great images come great responsibility&lt;/h2&gt;
&lt;p&gt;After stabilising the camera, the trained models would give excellent results on the earlier circuit configurations, but it would perform poorly when the circuit configuration changed slightly. The new camera position provided a stabilised set of images, but a large area of the new image set would contain information irrelevant for the navigation of the car. Since portions of the road necessary for the next navigation action would be almost entirely in the lower half of the image, we used this as inputs to the neural network for training and prediction.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image01.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image01-300x225.png" alt="Image captured by the camera module of the autonomous car" /&gt;&lt;/a&gt; The lower half of the image will be input to the neural network&lt;/p&gt;

&lt;h2 id="training-with-neural-networks"&gt;Training with Neural Networks&lt;/h2&gt;
&lt;p&gt;The images required for training the neural network can be captured using
interactive_control_train.py. At the command prompt, run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python interactive_control_train.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command opens a &lt;a href="http://www.pygame.org/"&gt;Pygame&lt;/a&gt; screen where the movements of the car can be controlled using the direction arrows. The images are captured along with the corresponding key press to assist us in their segregation later. We initially used &lt;a href="http://picamera.readthedocs.io/en/release-1.10/api_camera.html#picamera.camera.PiCamera.capture"&gt;PiCamera's capture()&lt;/a&gt; method with the filename parameter to capture the images, and could capture only a few but high-quality images. When the use_video_port parameter is not specified, the camera utilises the still mode; the images are obtained using the full area of the sensor and a&lt;a href="http://picamera.readthedocs.io/en/release-1.10/fov.html#under-the-hood"&gt;slow, powerful denoise algorithm&lt;/a&gt;processes these images. When set, the use_video_port parameter uses the video port with which we can capture images rapidly but typically appear grainier when compared to those obtained with the still port. We drove the car on various circuit configurations and generated around 2000 images for the training data set. We should clean the data before segregating the images into their respective class folders based on the key press indicated in their filenames.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image02.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image02-300x300.png" alt="Image captured with the still port (top) and video port (bottom)" /&gt;&lt;/a&gt; Image captured with the still port (top) and video port (bottom)&lt;/p&gt;

&lt;p&gt;With the images in their respective class folder, we can start training the neural network. We split the image horizontally and convert the lower half into a &lt;a href="http://www.numpy.org/"&gt;numpy&lt;/a&gt; &lt;a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html"&gt;ndarray&lt;/a&gt; where the colour layers flatten into a single gray-scale layer. The colour information does not provide additional information to identify features and hence the images are gray-scaled. We resize the ndarray according to the dimensions specified in the configuration file and flatten it. The flattened ndarray for each image serves as input to the neural network, and its corresponding class label value is the expected output. We can provide the regularisation parameter(
&lt;code&gt;lambda&lt;/code&gt;) and the number of hidden layer nodes(hidden layer size) while training the neural network; default values would be those specified in the configuration file. At the command prompt, run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python train.py 0.1 60
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The values of &lt;code&gt;lambda&lt;/code&gt; and the &lt;code&gt;hidden layer size&lt;/code&gt; should be chosen carefully to prevent the network from overfitting/underfitting the data. The network will underfit for large values of &lt;code&gt;lambda&lt;/code&gt; and small values of the
hidden layer size. Similarly, lower values of &lt;code&gt;lambda&lt;/code&gt; and large values of the hidden layer size cause the network to overfit the data and will start incorporating noise into the model. We have experimented with various values of &lt;code&gt;lambda&lt;/code&gt; and found that values between 0 and 0.1 are adequate in most cases. The rule of the thumb for the number of nodes in the hidden layer is that they are usually between the size of the input layer and the size of the output layer. We collected around 2000 images and used a &lt;code&gt;lambda&lt;/code&gt; value of 0.1 and a hidden layer size of 110. The cost function is minimised using the L-BFGS-B algorithm. We'll store the trained model as a pickle file in the &lt;code&gt;optimized-thetas&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2 id="give-that-car-some-autonomy"&gt;Give that car some autonomy&lt;/h2&gt;
&lt;p&gt;Once we have the trained model, we can run the RC car autonomously using
autonomous.py. It accepts an optional argument for the trained model; default will use the latest model in the
optimized_thetas folder. At the command prompt, run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python autonomous.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The lower half of the images captured by the camera module is input to the trained model which predicts the next navigation action. The front and the back motors are set based on the predicted action. We'll save the images with their predicted output for training models in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image05.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/image05-300x169.png" alt="That's all Folks" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We started this project with the intention of making Machine Learning fun and exciting for all ML enthusiasts. We built this during our &lt;a href="http://www.multunus.com/blog/2016/01/20-investment-time-background-story/"&gt;20% investment time&lt;/a&gt; and wanted to share our learnings and experiences with you. Special thanks to &lt;a href="http://www.andrewng.org/"&gt;Andrew Ng&lt;/a&gt; for his fantastic &lt;a href="http://www.coursera.org/learn/machine-learning"&gt;Coursera course&lt;/a&gt; on Machine Learning. Please let us know if you have any queries or suggestions on improving this project. Thank You for going through this post, we hope you find it useful. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Consulting with startups. The “right” way.</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/07/Consulting-with-startups-The-right-way/"/>
    <id>http://www.multunus.com/blog/2016/07/Consulting-with-startups-The-right-way/</id>
    <published>2016-07-20T13:43:54+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;h2 id="deep-inside"&gt;Deep Inside…&lt;/h2&gt;

&lt;p&gt;This is about something that’s been bothering me and the team here for years. You might have heard this phrase before:
Don’t build something nobody wants.&lt;/p&gt;

&lt;p&gt;I first came across this idea, I think about 6 or 7 years ago - when I first heard about
&lt;a href="https://en.wikipedia.org/wiki/Eric_Ries"&gt;Eric Ries and the Lean Startup&lt;/a&gt;. Almost all of our revenue at that time came from startups - so this advice was particularly relevant.&lt;/p&gt;

&lt;p&gt;As the years rolled by, two sets of things happened:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Eric Ries and team did their thing. They
&lt;a href="http://theleanstartup.com/book"&gt;published&lt;/a&gt;
&lt;a href="http://theleanstartup.com/the-lean-series"&gt;a bunch of books&lt;/a&gt;. They spoke at conferences. They consulted with startups - large and small - and shared their stories - of how much waste they’d avoided creating - using Lean Methods.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;My team and I did our thing. We kept up with everything that was happening in the Lean Startup world. We read their books, listened to the podcasts and attended conferences. And then…We’d come back to our desks at work, and continue working with our startup customers exactly the same way we’d always done. Write code for them whenever they asked us to - and billed them by the hour.
All the while, knowing deep inside, that we were probably building something that nobody would ever want.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I doubt anyone can
blame us for doing that. We were consulted by our clients to build software and we did.&lt;/p&gt;

&lt;p&gt;But, when I ask myself the question, should we have done something different, anything different…I can see multiple situations where we could have or should have guided our customers better.&lt;/p&gt;

&lt;h2 id="zooming-out"&gt;Zooming Out&lt;/h2&gt;

&lt;p&gt;There’s 3 phases while building a startup:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Phase 1: Problem Solution Fit [“
Do I have a problem worth solving?”]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Phase 2: Product Market Fit [“
Have I built something people want?"]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Phase 3: Scale [“
How do I accelerate growth?”]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s go through each of these in succession:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 1:Problem Solution Fit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(PS Fit)&lt;/strong&gt;
 is when the entrepreneur has gotten enough feedback from speaking to enough potential customers - that there is indeed a problem worth solving and that his product idea is a good fit for that problem.&lt;/p&gt;

&lt;p&gt;Further, these potential customers have also promised to pay a certain price for his product when he ships it. The entrepreneur can now give himself “permission” to build the product and test how strongly his customers hold up their promise.&lt;/p&gt;

&lt;p&gt;**Phase 2: Product Market Fit (PM Fit) **
is when there is clear unambiguous feedback from the market that the
business model has been validated - that, not only is there very good market demand for the product, but also that a
viable business can be built around the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phase 3: The Scale stage&lt;/strong&gt;
 is where there is significant business expansion happening.&lt;/p&gt;

&lt;h2 id="a-depressing-stat"&gt;A Depressing Stat&lt;/h2&gt;

&lt;p&gt;Now..here’s the question: What % of startups are yet to cross PS Fit phase? 50%? 70%? 90%?&lt;/p&gt;

&lt;p&gt;You may be surprised to know that it’s a large majority. Probably more than 80%.&lt;/p&gt;

&lt;p&gt;[NOTE: This is based on my own research and experience - but has not been tested/measured/validated by me.]&lt;/p&gt;

&lt;p&gt;So, what are they supposed to be doing? The most suggested approach before hitting PS Fit is to
&lt;a href="https://www.youtube.com/watch?v=a-J_SwmMJyo"&gt;get out of the building&lt;/a&gt; and talk to customers. Instead, what most entrepreneurs do is to assume that they have already crossed this stage - and start doing the things that are meant to be done only to achieve PM fit - or Stage 2.&lt;/p&gt;

&lt;p&gt;They then set out to build an untested solution for a problem that is also untested. Needless to say, this ends up in a lot of code being written (as indicated earlier, we @ Multunus are guilty of this too), that just lies by the wayside - with hardly a soul to try out.&lt;/p&gt;

&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;

&lt;p&gt;We asked ourselves the following questions to help us rewind and get a better perspective:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Why do we want to work with startups?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What “phase” startups do we want to work with? Do they need to have crossed PS Fit or PM Fit, for us to work with them?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If they were yet to cross PS Fit, what would be our recommendations to them?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If they’d crossed PS Fit but were yet to cross PM Fit, what would we recommend then?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If we could rewind back a few years, what should we have done differently in terms of the startups that we worked with?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll look at each of the following questions below.&lt;/p&gt;

&lt;h2 id="why-do-we-want-to-work-with-startups"&gt;Why do we want to work with startups?&lt;/h2&gt;

&lt;p&gt;First, some history&lt;/p&gt;

&lt;p&gt;We’re now into our 8th year of business. From Year 1 to Year 7, more than 80% of our revenues came from startups (and every single one of them were in the Pre-PS Fit phase). We thoroughly enjoyed building products for these startups. We learned almost everything we know about world class engineering (technology &amp;amp; agile processes) while working with these customers.&lt;/p&gt;

&lt;p&gt;In fact, it is because we worked with startups so much, that we had the opportunity to iterate and learn so much over the years. The startups founders that we worked with were mostly non-technical and they relied on us heavily to make almost every single engineering decision. Perhaps none of our differentiation and focus in areas such as
&lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;Test Driven Development&lt;/a&gt; and
&lt;a href="https://en.wikipedia.org/wiki/Continuous_delivery"&gt;Continuous Delivery&lt;/a&gt; would have existed if we didn’t have the space to experiment and learn. Our startup customers gave us that space.&lt;/p&gt;

&lt;p&gt;While I’d like to say it was a strategic decision to work with startups, it wasn’t. Our only “plan” was to ensure that we kept creating more value for our customers by learning, experimenting and tweaking our process everyday.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/i79KLD7bT7dgCzFoUBvCS1MaHUuVzkfMjtobqRD-TBtSQe8jDCULCU07NgV3DQCrYo2KmF756Rud5GNLawiU9W-Rfz8dnyIhcRkSghVHRMWbSfAzmbO8YSXgWvArRlUhkw" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Having said all of the above, the driving factor was always to see these entrepreneurs succeed. For us to help them get to PM fit before they’d run out of time and/or money.&lt;/p&gt;

&lt;p&gt;Our Report Card&lt;/p&gt;

&lt;p&gt;So, how does our report card look?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Did we end up shipping working software at a good pace?Yes.&lt;/em&gt;
&lt;em&gt;Was the software that we shipped of high enough quality?Yes.&lt;/em&gt;
&lt;em&gt;Were the startups able to reach PM fit?No.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Did we do anything significant to help them achieve PM fit?
Yes and No.&lt;/p&gt;

&lt;p&gt;Before I move on, let me dive a bit more into that last answer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What did we do to help these startups achieve PM fit?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What did we
not do to help these startups achieve PM fit?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To answer both of the above, take a look at the following image:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://lh6.googleusercontent.com/i5-J_-xmPxTnVKCCJWfvk62TKX8tA0VpA6Zws02mIi3Kmd4Kl_eHaofhSDAWYJaI0L2blch_8w0cMDMUqk3CbNSjJjeadiE4-DuLykmywIzAntQ-8wCevdfZRu1YrnvsJg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;We focused on the “The Build” and “Code Faster” bit. And we’ve
&lt;a href="http://www.multunus.com/blog/tag/continuous-delivery/"&gt;written&lt;/a&gt; and
&lt;a href="https://www.youtube.com/watch?v%3DcuRyW0FfBiM"&gt;spoken&lt;/a&gt; about this as well.&lt;/p&gt;

&lt;p&gt;The “Measure” and “Learn” bits? We hardly did anything about them, other than gently encouraging our startup customers to take care of those aspects.&lt;/p&gt;

&lt;p&gt;Looking forward..&lt;/p&gt;

&lt;p&gt;Now let’s rephrase that original question a bit:
Why do we want tocontinue working with startups?&lt;/p&gt;

&lt;p&gt;Here’s why:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We know that the value we’re currently providing in terms of “Coding Faster” is valuable for startups. And we enjoy delivering that value.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We know that the
&lt;a href="http://www.hult.edu/news/the-lean-mindset-and-what-it-takes-to-measure-innovation/"&gt;Lean Startup is a “mindset shift&lt;/a&gt;” - that does not come easily. But it can be accelerated when you have a coach who can both:
&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/07/http-www.pixteller.com-pdata-t-l-462187.jpg" alt="http---www.pixteller.com-pdata-t-l-462187" /&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Empathize with customers struggling with the shift in mindset, and also&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Provide guidance while they navigate through the steps needed to cross “PS Fit” and “PM Fit” phases.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We've been building our skills in the Measure and Learn parts of the above cycle. And are now in a position to provide a more holistic service to early stage startups.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good news is that we've started seeing some early successes with existing customers - where we've been working through all parts of the above cycle.&lt;/p&gt;

&lt;p&gt;So..we are making progress. But it’s the early days. The real magic is when we help startups hit PM fit.&lt;/p&gt;

&lt;h2 id="what-phase-startups-do-we-want-to-work-with"&gt;What “phase” startups do we want to work with?&lt;/h2&gt;

&lt;p&gt;Do they need to have crossed PS Fit or PM Fit, for us to work with them?&lt;/p&gt;

&lt;p&gt;Let’s zoom out for a bit here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;At Scale:&lt;/strong&gt;
 At this stage, the customer’s business model is already proven in the marketplace. And their primary constraint is in being able to meet the increasing demand for their technology products.&lt;/p&gt;

&lt;p&gt;We’re already working with customers at this stage. For “Scale” customers, the most amount of value we can provide is our deep technology expertise. This is because at this stage, their technological problems are not trivial - and they need deep expertise to come up with creative technical solutions to those problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beyond PM Fit, Before Scale:&lt;/strong&gt;
Startups that reach this stage are in need of rocket boosters to fuel their growth, to ensure that they capitalize on the traction and resonance they’ve gotten from the market place. At this stage, the startup will need to invest heavily on marketing and/or sales, hiring and product.&lt;/p&gt;

&lt;p&gt;As of today,
we arenot focused on this segment.&lt;/p&gt;

&lt;p&gt;Why? Because our team would need to effectively complement the rapidly growing Marketing/Sales teams and we’re currently not equipped/skilled to handle this need.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Beyond PS Fit, Before PM Fit:&lt;/strong&gt;
At this phase, the entrepreneur knows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;That there are real must-have problems out there that need to be solved by a specific customer segment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They have a pretty good idea of what solution will solve the customer’s problem much better than existing alternatives. And they have confirmed that this solution will be received well by the customer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, they have also confirmed the price that the customer will be willing to pay for the solution (once it’s built).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What they might not know are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;How to ship the solution in small iterations - to allow for frequent feedback from customers [This is where the “Code Faster” skills come in handy]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How to effectively get qualitative (for example, with usability tests) and quantitative (using analytics) feedback on the product&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As of today, our services have expanded to include both of the above. So, yes we do work with startups in this segment. I’m glad to say that we’ve successfully helped our first startup customer in this segment to grow his product from an idea to something that is gaining traction among enterprise customers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before PS Fit:&lt;/strong&gt;
At this stage, the entrepreneur:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Has an idea for a product that he’s excited about and thinks would be great business opportunity as well&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Has done some due diligence on the idea&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What the entrepreneur may not know are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Who his target customer segment might be and what pressing/must-have problems are and how they’re solving the problem today&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What his unique value proposition might be&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What his solution is going to look like and what price his target customer segment might pay for his solution&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What process he should follow to answer all of the above questions&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As of today, we work with startups to help them answer all of the above questions as well. Once again, I’m glad to say that we’re actively working with a startup at this phase. And we’ve already helped him pivot significantly from his original idea, without writing a single line of code, yet.&lt;/p&gt;

&lt;p&gt;In summary, we work with startups in all phases
except the ‘
Beyond PM Fit, Before Scale’ segment.&lt;/p&gt;

&lt;h2 id="if-our-customers-were-yet-to-cross-ps-fit-what-would-be-our-recommendations-to-them"&gt;If our customers were yet to cross PS fit, what would be our recommendations to them?&lt;/h2&gt;

&lt;p&gt;The most important activity at this stage is what is called
Getting Out of the Building - that is actually having real face to face conversations with potential customers. More technically, this is called Customer Development.&lt;/p&gt;

&lt;p&gt;There are two key parts to this process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The “Understand Problem” stage, and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The “Define Solution” stage&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s a summary of what those stages mean:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Stage&lt;/th&gt;
      &lt;th style="text-align: center"&gt;Stage 1: Understand Problem&lt;/th&gt;
      &lt;th&gt;Stage 2: Define Solution&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;What our startup clients need to Learn&lt;/td&gt;
      &lt;td style="text-align: center"&gt;- What are client's customer’s most significant problems? - How are those customers solving their problems today? - Which specific customer segment has the problems?&lt;/td&gt;
      &lt;td&gt;- How will our clients identify their early adopters? - What is the minimum feature set needed to launch? - Will the end customers pay for a solution? What price will they bear?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key Tasks&lt;/td&gt;
      &lt;td style="text-align: center"&gt;- Informal Customer Observation - Problem Interviews&lt;/td&gt;
      &lt;td&gt;- Prototype [pdf] - Solution Interview - Testing Pricing&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You could say, that the goal of this stage is to exit with a great deal of
empathyfor the target customer segment.&lt;/p&gt;

&lt;h2 id="if-theyd-crossed-ps-fit-but-were-yet-to-cross-pm-fit-what-would-we-recommend"&gt;If they’d crossed PS Fit but were yet to cross PM Fit, what would we recommend?&lt;/h2&gt;

&lt;p&gt;At this phase, the customer has the empathy with the target customer segment that they need and can now give themselves
permission to actually build the product to test the assumptions
using the product itself.&lt;/p&gt;

&lt;p&gt;Once again, this phase is also split into two parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Validate Qualitatively&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify Quantitatively&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's a summary of what those stages mean:&lt;/p&gt;

&lt;p&gt;Stage&lt;/p&gt;

&lt;p&gt;Stage 3: Validate Qualitatively&lt;/p&gt;

&lt;p&gt;Stage 4: Verify Quantitatively&lt;/p&gt;

&lt;p&gt;What our clients  need to Learn&lt;/p&gt;

&lt;p&gt;*Does our landing page get noticed?&lt;/p&gt;

&lt;p&gt;*Do end users make it all the way through our
activation flow?&lt;/p&gt;

&lt;p&gt;*What are the usability hot spots in our product?&lt;/p&gt;

&lt;p&gt;*Does our MVP demonstrate and deliver on our Unique Value Proposition (promise)?&lt;/p&gt;

&lt;p&gt;*Can we bring on more paying customers (end users) using our existing channels?&lt;/p&gt;

&lt;p&gt;*Are these customers paying for our solution?&lt;/p&gt;

&lt;p&gt;*Have we built something people want?&lt;/p&gt;

&lt;p&gt;Key Tasks&lt;/p&gt;

&lt;p&gt;*&lt;a href="http://startitup.co/guides/942/the-mvp-interview-script"&gt;MVP Interviews&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;a href="https://www.safaribooksonline.com/library/view/running-lean-2nd/9781449321529/ch12.html"&gt;Validate Customer Lifecycle&lt;/a&gt; [Pay to read full chapter]&lt;/p&gt;

&lt;p&gt;*&lt;a href="http://startitup.co/guides/735/ready-to-launch"&gt;Launch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;a href="https://leanstack.com/how-we-build-features/"&gt;Building Features&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;a href="http://www.startup-marketing.com/the-startup-pyramid/"&gt;Sean Ellis Test&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="if-we-could-rewind-back-a-few-years"&gt;If we could rewind back a few years….&lt;/h2&gt;

&lt;p&gt;What should we have done differently in terms of the startups that we worked with?&lt;/p&gt;

&lt;p&gt;The only thing I think we should have or could have done differently is to have had this level of clarity earlier. How could we have done that?&lt;/p&gt;

&lt;p&gt;Well, we could have asked ourselves when we were approached by some of our earlier startup customers “Wait..But
Why do we want to work with this startup? What additional value can we create for them, beyond the technological services that they approached us for?”.&lt;/p&gt;

&lt;p&gt;We
couldhave put our revenue interests second and forced both ourselves and our startup customers to pause and reflect. To be honest though, I’m not sure if we’d be in business today if we’d done that.&lt;/p&gt;

&lt;h2 id="important-questions-to-answer-before-consulting-with-startups"&gt;Important questions to answer before consulting with startups&lt;/h2&gt;

&lt;p&gt;The startups that we worked with so far were all in the “
Before PS Fit” category.&lt;/p&gt;

&lt;p&gt;As I’d mentioned earlier, our key recommendation at this stage would be to get out of the building and answer the question: “
Do I have a problem worth solving?”&lt;/p&gt;

&lt;p&gt;But here’s some other questions that are worth asking:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Are there successful startups who don’t necessarily follow the above framework?
Yes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is it possible that a startup founder who chooses to work with us, listens to us patiently on the whole Lean Startup recommendation and then
still chooses to take a different route - knows what he’s doing?
Yes, of course.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do we think we can create significant value for startups with
just our technology skills, that is by being involved
onlyin the “Build” phase?
Yes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If a startup chooses to engage
only on the “build” front, is that something that we’re still open to?
Yes&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;
 The above answers are equally (perhaps more?) applicable for startups in the next stage - that is those who’ve crossed PS Fit, but are yet to hit PM fit.&lt;/p&gt;

&lt;h2 id="a-new-consulting-engagement-model-for-startups"&gt;A new consulting engagement model for startups&lt;/h2&gt;

&lt;p&gt;Considering that we’re strong believers in the Lean Startup approach (and are keen to avoid building something no one wants), how do we reconcile that desire when our clients engage us solely on the build phase?&lt;/p&gt;

&lt;p&gt;Here’s our new engagement model for startups:&lt;/p&gt;

&lt;p&gt;As of today, our startup consulting offerings include 3 types of services:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Market Analysis &amp;amp; Research (including Business Model iteration and Customer Interviews)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Solution Analysis &amp;amp; Research (using our Design Sprint approach - which includes Prototype creation &amp;amp; Customer Interviews)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MVP build &amp;amp; iteration (using our Continuous Deployment approach)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our sales team will work with the startup customer to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;Determine the current stage of their business (At Scale&lt;/td&gt;
          &lt;td&gt;Beyond PM Fit, Before Scale&lt;/td&gt;
          &lt;td&gt;Beyond PS Fit, Before PM Fit&lt;/td&gt;
          &lt;td&gt;Before PS Fit)&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Determine whether we can create significant value for the startup or not based on our range of both startup business skills and technology skills and the customer’s budget&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Strongly recommend one or more of the above services - based on the above factors&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Then help the customer make the final decision - which could range from completely going with our recommendation (at one end of the spectrum) to suggesting an alternate partner that they should work with (to the other end).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We think this adds a lot more clarity in terms of our engagement model with startup customers.&lt;/p&gt;

&lt;h2 id="a-clearer-conscience"&gt;A clearer conscience&lt;/h2&gt;

&lt;p&gt;As they say: Better late, than never.&lt;/p&gt;

&lt;p&gt;With our earlier model, the following two aspects were less aligned:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Our startup customers’ need to discover a repeatable business model before their runway ends, and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our revenue model (consulting based mostly on hourly billing)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With our new model, we can now walk together with our customers, looking in the same direction: Forward.&lt;/p&gt;

&lt;p&gt;And that makes us happy :).&lt;/p&gt;

&lt;h2 id="credits"&gt;Credits&lt;/h2&gt;

&lt;p&gt;Many of the key ideas in this post are based on
&lt;a href="https://www.amazon.com/Running-Lean-Iterate-Works-OReilly/dp/1449305172"&gt;Running Lean&lt;/a&gt; by Ash Maurya. Ash’s framework is perhaps the most prescriptive and practical “How-To” system that exists for entrepreneurs today. Do yourself a favor and get the book today!.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Test driving React Native applications</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/07/test-driving-react-native-applications/"/>
    <id>http://www.multunus.com/blog/2016/07/test-driving-react-native-applications/</id>
    <published>2016-07-16T17:43:48+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;React Native is a game changing mobile app development framework that concentrates on fast development. Based on the philosophy “Learn once, write anywhere”, it makes it possible to build iOS, Android and Windows mobile apps just using Javascript. So React Native helps you to build awesome applications across multiple platforms.&lt;/p&gt;

&lt;p&gt;Now you have one question lingering in your head and that is the reason you are reading this post. How am I going to test these? We also had the same question while working on React Native and couldn’t find a hands-on tutorial that helps a beginner get started on writing tests for React Native applications.&lt;/p&gt;

&lt;p&gt;Read on this post and once you finish it, you will feel much more confident in testing React Native applications. This tutorial assumes you are comfortable working with React Native, basic concepts of React, and testing of Javascript code. If not, feel free to checkout the following links.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://facebook.github.io/react/"&gt;https://facebook.github.io/react/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://facebook.github.io/react-native/"&gt;https://facebook.github.io/react-native/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.sitepoint.com/unit-test-javascript-mocha-chai/"&gt;https://www.sitepoint.com/unit-test-javascript-mocha-chai/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After completing this tutorial you will be able to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write unit tests for your component logic.&lt;/li&gt;
  &lt;li&gt;Test behaviour of components on various user interactions like press and scroll.&lt;/li&gt;
  &lt;li&gt;Easily test defaultProps, propTypes, state transitions and similar aspects of React components.  &lt;/li&gt;
  &lt;li&gt;Appreciate how TDD encourages you to follow idioms in react.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before we actually jump into the code, let us take a brief walkthrough over our test setup. We will be using the following libraries for testing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://babeljs.io/"&gt;Babel&lt;/a&gt;: A Javascript compiler to transpile our Javascript code so that it is compatible everywhere.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt;: A Javascript testing framework running on&lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt; to run our tests.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://chaijs.com/"&gt;Chai&lt;/a&gt;: A library that provides us with interfaces to write assertions in our test.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://sinonjs.org/"&gt;Sinon&lt;/a&gt;: A library that provides us with spies, stubs and mocks which are used extensively while testing.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/lelandrichardson/react-native-mock"&gt;React Native Mock&lt;/a&gt;: Library that provides a completely mocked version of react-native that is easily testable.&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://airbnb.io/enzyme/"&gt;Enzyme&lt;/a&gt;: A React test utility that helps us to write painless tests for react components. Javascript Testing utility for React that makes it easier to assert, manipulate, and traverse your React Components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setting all these up is a pain, but we have done that for you. Checkout our &lt;a href="https://github.com/multunus/react-native-boilerplate"&gt;react native boiler plate&lt;/a&gt; that helps you kickstart your application development with all the setup done for state model, testing, continuous integration etc. Go to your console and type the following commands.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/multunus/react-native-boilerplate ReactNativeBoilerplate
cd ReactNativeBoilerplate
npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Rename &lt;code&gt;config.example.json&lt;/code&gt; to &lt;code&gt;config.json&lt;/code&gt; and modify it as required. The app is setup to use the &lt;a href="https://github.com/auth0/nodejs-jwt-authentication-sample"&gt;NodeJS JWT Authentication sample server&lt;/a&gt;, follow the instructions and update the baseURL in &lt;code&gt;config.json&lt;/code&gt; to a valid url say &lt;code&gt;http://localhost&lt;/code&gt;. That’s it.&lt;/p&gt;

&lt;h2 id="time-for-coding"&gt;Time for coding!&lt;/h2&gt;

&lt;p&gt;It’s time to rewind back a little bit and refresh the first tutorial you ever did on &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt;. The simple Comment Box. If you haven’t gone through it, you can take a look at it &lt;a href="https://facebook.github.io/react/docs/tutorial.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We will build the same application in React Native using &lt;a href="https://en.wikipedia.org/wiki/Test-driven_development"&gt;TDD&lt;/a&gt;. We will be replacing the react components used in the tutorial by native components for android and using &lt;a href="https://facebook.github.io/react-native/docs/asyncstorage.html"&gt;Async Storage&lt;/a&gt; provided by react native to store our data instead of a server with a database.&lt;/p&gt;

&lt;p&gt;If you are not comfortable with Test Driven Development, you may choose to write your code and then write tests for it. But we feel TDD improves the quality of your code and especially while working on React, this is more evident as the components you build will be simple, testable and you will refrain yourselves from writing too much of logic into your components.&lt;/p&gt;

&lt;p&gt;We are going to build the app in Android platform. But don’t worry if you are using react native for iOS or Windows mobile app development. The testing techniques you learn here is independent of the platform and can be applied across platforms. We shall use the same component structure as in the react tutorial for our app.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A view of all of the comments&lt;/li&gt;
  &lt;li&gt;A form to submit a comment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will have the following component hierarchy&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;CommentBox&lt;/code&gt;: The root component    
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;CommentList&lt;/code&gt; : To display a list of all components     
        &lt;ul&gt;
          &lt;li&gt;&lt;code&gt;Comment&lt;/code&gt; : To display a single comment    &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code&gt;CommentForm&lt;/code&gt; : A form for user to write a comment&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="our-first-test"&gt;Our first test&lt;/h2&gt;

&lt;p&gt;Okay, now it’s time for coding. Let us write our first test. The components for the app are written in &lt;code&gt;src/components&lt;/code&gt; directory and the corresponding  tests for components are written in &lt;code&gt;src/components/__specs__&lt;/code&gt; directory. Open a new file &lt;code&gt;src/components/__specs__/Comment.spec.js&lt;/code&gt; and write the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View } from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';

import Comment from '../Comment.js';

describe('&amp;lt;Comment /&amp;gt;', () =&amp;gt; {
  it('should be a view component', () =&amp;gt; {
    const wrapper = shallow(&amp;lt;Comment&amp;gt;&amp;lt;/Comment&amp;gt;);

    expect(wrapper.type()).to.equal(View);
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That is a simple test to begin with. Let’s checkout what is going on here. We are using &lt;a href="http://airbnb.io/enzyme/docs/api/shallow.html"&gt;shallow rendering API&lt;/a&gt; of enzyme here. It is useful to constrain yourself to testing a component as a unit, and to ensure that your tests aren't indirectly asserting on behaviour of child components. &lt;code&gt;shallow()&lt;/code&gt; method returns a shallow wrapper object around the component that is to be tested. Enzyme provides a rich set of methods that can be called on the wrapper instance, for testing various aspects of a component. Check out the &lt;a href="http://airbnb.io/enzyme/docs/api/shallow.html"&gt;docs&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;In this spec we are just checking the type of the component. We must appreciate the work of Leland Richardson for building&lt;a href="https://github.com/airbnb/enzyme"&gt;Enzyme&lt;/a&gt; ( JS testing utility which helps us write tests for react “web” components) and &lt;a href="https://github.com/lelandrichardson/react-native-mock"&gt;React Native Mock&lt;/a&gt; ( fully mocked and test-friendly version of react native, which makes enzyme compatible with react native). The result of this effort is painless testing of react native components. Now save the file and run &lt;code&gt;npm test&lt;/code&gt; from console and watch your tests fail. Now we build the &lt;code&gt;Comment&lt;/code&gt; component. Open &lt;code&gt;src/components/Comment.js&lt;/code&gt; and write the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, {Component, View } from 'react-native';

    export default class Comment extends React.Component {
      render() {
        return(
          &amp;lt;View&amp;gt;
          &amp;lt;/View&amp;gt;
        );
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run &lt;code&gt;npm test&lt;/code&gt; from console and see your tests pass. Bingo! Now we will be progressively writing tests and code to build the complete app. We’ll be following the same procedure for the rest of our tutorial. Write tests, watch it fail, write code, see it passing, refactor if necessary. You can read more about &lt;a href="http://www.jamesshore.com/Blog/Red-Green-Refactor.html"&gt;Red Green Refactor here&lt;/a&gt;. Now that we're all good to go, let's start with the topmost component in the component structure.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentBox.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, { View, Text } from 'react-native';
    import { shallow } from 'enzyme';
    import { expect } from 'chai';

    import CommentBox from '../CommentBox.js';

    describe('&amp;lt;CommentBox /&amp;gt;', () =&amp;gt; {
      beforeEach(function() {
        wrapper = shallow(&amp;lt;CommentBox/&amp;gt;);
      });

      it('should be a view component', () =&amp;gt; {
        expect(wrapper.type()).to.equal(View);
      });

      it('should have a title Comment It', () =&amp;gt; {
        expect(wrapper.contains(&amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;)).to.equal(true);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These tests describe CommentBox to be a View component and have a Text component inside it. We’ll write minimal amount of code to make this test pass and a Text component with the text “Comment It” in it. Now the actual code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentBox.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, {Component, Text, View } from 'react-native';

    export default class CommentBox extends React.Component {
      render() {
        return(
            &amp;lt;View&amp;gt;
              &amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;
            &amp;lt;/View&amp;gt;
        );
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We need a CommentList and CommentForm component inside our CommentBox.We’ll just define these components without working logic just for now, and come back to these components and complete them later.
&lt;code&gt;src/components/__specs__/CommentForm.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, { View } from 'react-native';
    import { shallow } from 'enzyme';
    import { expect } from 'chai';

    import CommentForm from '../CommentForm.js';

    describe('&amp;lt;CommentForm /&amp;gt;', () =&amp;gt; {  
      it('should be a view component', () =&amp;gt; {
        wrapper = shallow(&amp;lt;CommentForm /&amp;gt;);

        expect(wrapper.type()).to.equal(View);
      });  
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentForm.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, {Component, View } from 'react-native';

    export default class CommentForm extends React.Component {
      render() {
        return(
            &amp;lt;View&amp;gt;
            &amp;lt;/View&amp;gt;
        );
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentList.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, { ListView } from 'react-native';

    import { shallow } from 'enzyme';
    import { expect } from 'chai';

    import CommentList from '../CommentList.js';

    describe('&amp;lt;CommentList /&amp;gt;', () =&amp;gt; {
      it('should be a ListView component', () =&amp;gt; {
        const wrapper = shallow(&amp;lt;CommentList /&amp;gt;);

        expect(wrapper.type()).to.equal(ListView);
      });
    });
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;src/components/CommentList.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, {Component, ListView} from 'react-native';

    export default class CommentList extends React.Component {
      render() {
        return(
            &amp;lt;ListView /&amp;gt;
        );
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let s add them to CommentBox component. Add a couple of specs to &lt;code&gt;CommentBox.spec.js&lt;/code&gt; as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentBox.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;
    import React, { View, Text } from 'react-native';
    import { shallow } from 'enzyme';
    import { expect } from 'chai';

    import CommentBox from '../CommentBox.js';
    import CommentList from '../CommentList.js';
    import CommentForm from '../CommentForm.js';

    describe('&amp;lt;CommentBox /&amp;gt;', () =&amp;gt; {
      beforeEach(function() {
        wrapper = shallow(&amp;lt;CommentBox /&amp;gt;);
      });

      it('should be a view component', () =&amp;gt; {
        expect(wrapper.type()).to.equal(View);
      });

      it('should have a title Comment It', () =&amp;gt; {
        expect(wrapper.contains(&amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;)).to.equal(true);
      });

      it('should render CommentList component', () =&amp;gt; {
        expect(wrapper.find(CommentList)).to.have.length(1);
      });

      it('should render CommentForm component', () =&amp;gt; {
        expect(wrapper.find(CommentForm)).to.have.length(1);
      });
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentBox.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;    import React, {Component,Text, View} from 'react-native';

    import CommentList from './CommentList.js';
    import CommentForm from './CommentForm.js';

    export default class CommentBox extends React.Component {
      render() {
        return(
            &amp;lt;View&amp;gt;
            &amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;
            &amp;lt;CommentList /&amp;gt;
            &amp;lt;CommentForm /&amp;gt;
            &amp;lt;/View&amp;gt;
        );
      }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have the whole structure in place, we’ll implement with the functionality starting with Comment component.For each comment we’ll pass author name of the comment and the actual comment as props. Comment component should take these props and render both the author name and actual comment.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/Comment.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-javascript"&gt;
    import React, { View, Text } from 'react-native';
    import { shallow } from 'enzyme';
    import { expect } from 'chai';

    import Comment from '../Comment.js';

    describe('&amp;lt;Comment /&amp;gt;', () =&amp;gt; {
      it('should be a view component', () =&amp;gt; {
        const wrapper = shallow(&amp;lt;Comment&amp;gt;&amp;lt;/Comment&amp;gt;);

        expect(wrapper.type()).to.equal(View);
      });

      it('should render 2 text components', () =&amp;gt; {
        const wrapper = shallow(&amp;lt;Comment /&amp;gt;);

        expect(wrapper.find(Text)).to.have.length(2);
      });

      it('should render the given comment', () =&amp;gt; {
        const wrapper = shallow(&amp;lt;Comment&amp;gt; This is a comment &amp;lt;/Comment&amp;gt;);

        expect(wrapper.contains(&amp;lt;Text&amp;gt; This is a comment &amp;lt;/Text&amp;gt;)).to.equal(true);
      });

      it('should render the given author name', () =&amp;gt; {
        const wrapper = shallow(&amp;lt;Comment author="Author"&amp;gt;&amp;lt;/Comment&amp;gt;);

        expect(wrapper.contains(&amp;lt;Text&amp;gt;Author&amp;lt;/Text&amp;gt;)).to.equal(true);
      });
    });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/Comment.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component, View, Text} from 'react-native';

export default class Comment extends React.Component {
  render() {
    return(
        &amp;lt;View&amp;gt;
         &amp;lt;Text&amp;gt;
           {this.props.author}
          &amp;lt;/Text&amp;gt;
          &amp;lt;Text&amp;gt;
           {this.props.children}
          &amp;lt;/Text&amp;gt;
        &amp;lt;/View&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Aha! We have successfully test-driven our first React Native component.  Since we have comments now, let’s list them out in our CommentList component. The CommentList component takes all the comment data as an array of JSONs and render each comment. Feel free to refer docs if you have any questions on usage of &lt;a href="https://facebook.github.io/react-native/docs/listview.html"&gt;ListView&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentList.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, ListView } from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';

import CommentList from '../CommentList.js';
import Comment from '../Comment.js';

describe('&amp;lt;CommentList /&amp;gt;', () =&amp;gt; {
  beforeEach(function() {
    data = [
      { author: "Pete Hunt", text: "This is one comment"},
      { author: "Jordan Walke", text: "This is a super comment"},
      { author: "Jordan Walkerr", text: "This is an ordinary comment"}
    ];
  });

  it('should define its propTypes', () =&amp;gt; {
    expect(CommentList.propTypes.data).to.be.an('function');
  });

  it('should be a ListView component', () =&amp;gt; {
    const wrapper = shallow(&amp;lt;CommentList data={data} /&amp;gt;);

    expect(wrapper.type()).to.equal(ListView);
  });

  it('should have correct datasource in state', () =&amp;gt; {
    const wrapper = shallow(&amp;lt;CommentList data={data} /&amp;gt;);

    expect(wrapper.state('dataSource')._dataBlob).to.equal(data);
  });
});

`src/components/CommentList.js`

import React, {Component, View, ListView} from 'react-native';
import Comment from './Comment.js';

export default class CommentList extends React.Component {
  static propTypes =  {
    data: React.PropTypes.array
  };

  constructor(props) {
    super(props);
    this.state =  {
      dataSource: new ListView.DataSource({rowHasChanged:
(r1, r2) =&amp;gt; r1 !== r2}).cloneWithRows(this.props.data)
    };
  }

  componentWillReceiveProps(){
    this.setState({
      dataSource: this.state.dataSource.cloneWithRows(this.props.data)
    });
  }

  render() {
    return (
        &amp;lt;ListView
          dataSource={this.state.dataSource}
          renderRow={this.renderComment.bind(this)}
        /&amp;gt;
    );
  }
  renderComment(row) {
    return (
        &amp;lt;Comment author={row.author} &amp;gt;{row.text}&amp;lt;/Comment&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Every time the CommentList component gets re-rendered, we need to update the dataSource state of the component to display newly added comment to the CommentList. We are just doing that in &lt;code&gt;componentWillReceiveProps&lt;/code&gt; method. Note that we wrote a spec to ensure that the propTypes of the component is defined. Read more about propTypes &lt;a href="https://facebook.github.io/react/docs/reusable-components.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can list comments but cannot add a new one. For that let us build the CommentForm component. It has two text input fields to input author name and actual comment and a submit button to submit the comment. Let’s build the basic UI of this component and then build the functionality.
&lt;code&gt;src/components/__specs__/CommentForm.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, TouchableNativeFeedback, TextInput, Text } from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';

import CommentForm from '../CommentForm.js';

describe('&amp;lt;CommentForm /&amp;gt;', () =&amp;gt; {
  beforeEach(function() {
     wrapper = shallow(&amp;lt;CommentForm /&amp;gt;);
  });

  it('should be a view component', () =&amp;gt; {
    expect(wrapper.type()).to.equal(View);
  });

  it('should have 2 TextInput components', () =&amp;gt; {
    expect(wrapper.find(TextInput)).to.have.length(2);
  });

  it('should have a submit button', () =&amp;gt; {
    expect(wrapper.find(TouchableNativeFeedback)).to.have.length(1);
    expect(wrapper.find(TouchableNativeFeedback).containsMatchingElement(&amp;lt;Text&amp;gt;Submit&amp;lt;/Text&amp;gt;)).to.equal(true);
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentForm.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component, View, TouchableNativeFeedback, Text, TextInput} from 'react-native';

export default class CommentForm extends React.Component {  
  render() {
    return(
        &amp;lt;View&amp;gt;
          &amp;lt;TextInput
           placeholder="name"
           style={{height: 40, borderColor: 'gray', borderWidth: 1}}
          /&amp;gt;
          &amp;lt;TextInput
           placeholder="comment"
           style={{height: 40, borderColor: 'gray', borderWidth: 1}}
          /&amp;gt;
        &amp;lt;TouchableNativeFeedback&amp;gt;
           &amp;lt;View style={{width: 150, height: 100, backgroundColor: 'red'}}&amp;gt;
             &amp;lt;Text style={{margin: 30}}&amp;gt;Submit&amp;lt;/Text&amp;gt;
           &amp;lt;/View&amp;gt;
        &amp;lt;/TouchableNativeFeedback&amp;gt;
        &amp;lt;/View&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The functionality of the CommentForm component is as follows.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The input value of two TextInput components for entering author and comment should depend on state of the CommentForm component.&lt;/li&gt;
  &lt;li&gt;When user enters text and the text in the input field changes, update the state to corresponding value&lt;/li&gt;
  &lt;li&gt;On clicking the submit button, it should invoke &lt;code&gt;handleCommentSubmit&lt;/code&gt; method of CommentBox component, which is passed as props to the CommentForm component and it should also set the author and comment state to initial blank string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For time-being let us define an empty method in CommentBox component.
&lt;code&gt;src/components/CommentBox.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component,Text, View} from 'react-native';

import CommentList from './CommentList.js';
import CommentForm from './CommentForm.js';

export default class CommentBox extends React.Component {  

  handleCommentSubmit(comment_data) {    
  }

  render() {
    return(
        &amp;lt;View&amp;gt;
          &amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;
          &amp;lt;CommentList /&amp;gt;
          &amp;lt;CommentForm /&amp;gt;
        &amp;lt;/View&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets make sure that state of the CommentForm component changes with data in the input fields and the value of the input components are dependent on state.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentForm.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, TouchableNativeFeedback, TextInput, Text} from 'react-native';

import { shallow } from 'enzyme';
import { expect } from 'chai';

import CommentForm from '../CommentForm.js';

describe('&amp;lt;CommentForm /&amp;gt;', () =&amp;gt; {
  beforeEach(function() {
    wrapper = shallow(&amp;lt;CommentForm /&amp;gt;);
  });

  it('should be a view component', () =&amp;gt; {
    expect(wrapper.type()).to.equal(View);
  });

  it('should have an initial state', () =&amp;gt; {
    expect(wrapper.state('name')).to.equal("");
    expect(wrapper.state('comment')).to.equal("");
  });

  it('should have 2 TextInput components', () =&amp;gt; {
    expect(wrapper.find(TextInput)).to.have.length(2);
  });

  it('should have a submit button', () =&amp;gt; {
    expect(wrapper.find(TouchableNativeFeedback)).to.have.length(1);
    expect(wrapper.find(TouchableNativeFeedback).containsMatchingElement(&amp;lt;Text&amp;gt;Submit&amp;lt;/Text&amp;gt;)).to.equal(true);
  });

  it('should have author input component with value dependent on state', () =&amp;gt; {
    wrapper.setState({name: 'JK'});

    expect(wrapper.find(TextInput).first().props().value).to.equal('JK');
  });

  it('should have the comment input component with value dependent on state', () =&amp;gt; {
    wrapper.setState({comment: 'An awesome comment'});

    expect(wrapper.find(TextInput).at(1).props().value).to.equal('An awesome comment');
  });

  it('should change state when the text of author input component changes', () =&amp;gt; {
    const authorInputComponent = wrapper.find('TextInput').first();

    authorInputComponent.simulate('ChangeText','wenger');
    expect(wrapper.state('name')).to.equal('wenger');
  });

  it('should change state when the text of comment input component changes', () =&amp;gt; {
    const commentInputComponent = wrapper.find('TextInput').at(1);

    commentInputComponent.simulate('ChangeText','arsenal');

    expect(wrapper.state('comment')).to.equal('arsenal');
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentForm.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component, View, TouchableNativeFeedback, Text, TextInput} from 'react-native';

export default class CommentForm extends React.Component {

  constructor(props) {
    super(props);
    this.state = {name: '', comment: ''};
  }

  render() {
    return(
        &amp;lt;View&amp;gt;
          &amp;lt;TextInput
            placeholder="name"
            style={{height: 40, borderColor: 'gray', borderWidth: 1}}
            onChangeText={(text) =&amp;gt; this.setState({name: text})}
            value={this.state.name}
          /&amp;gt;
          &amp;lt;TextInput
            placeholder="comment"
            style={{height: 40, borderColor: 'gray', borderWidth: 1}}
            onChangeText={(content) =&amp;gt; this.setState({comment: content})}
            value={this.state.comment}
          /&amp;gt;
          &amp;lt;TouchableNativeFeedback&amp;gt;
            &amp;lt;View style={{width: 150, height: 100, backgroundColor: 'red'}}&amp;gt;
              &amp;lt;Text style={{margin: 30}}&amp;gt;Submit&amp;lt;/Text&amp;gt;
            &amp;lt;/View&amp;gt;
          &amp;lt;/TouchableNativeFeedback&amp;gt;
        &amp;lt;/View&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that that's done we'll wire up submission of form on clicking submit button. We must ensure that the submit button click should restore the state of two input components to initial state.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentForm.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, TouchableNativeFeedback, TextInput, Text} from 'react-native';

import { shallow } from 'enzyme';
import { expect } from 'chai';
import sinon from 'sinon';

import CommentForm from '../CommentForm.js';
import CommentBox from '../CommentBox.js';

describe('&amp;lt;CommentForm /&amp;gt;', () =&amp;gt; {
  beforeEach(function() {
    wrapper = shallow(&amp;lt;CommentForm /&amp;gt;);
  });

  it('should be a view component', () =&amp;gt; {
    expect(wrapper.type()).to.equal(View);
  });

  it('should have an initial state', () =&amp;gt; {
    expect(wrapper.state('name')).to.equal("");
    expect(wrapper.state('comment')).to.equal("");
  });

  it('should have 2 TextInput components', () =&amp;gt; {
    expect(wrapper.find(TextInput)).to.have.length(2);
  });

  it('should have a submit button', () =&amp;gt; {
    expect(wrapper.find(TouchableNativeFeedback)).to.have.length(1);
    expect(wrapper.find(TouchableNativeFeedback).containsMatchingElement(&amp;lt;Text&amp;gt;Submit&amp;lt;/Text&amp;gt;)).to.equal(true);
  });

  it('should have author input component with value dependent on state', () =&amp;gt; {
    wrapper.setState({name: 'JK'});
    expect(wrapper.find(TextInput).first().props().value).to.equal('JK');
  });

  it('should have the comment input component with value dependent on state', () =&amp;gt; {
    wrapper.setState({comment: 'An awesome comment'});
    expect(wrapper.find(TextInput).at(1).props().value).to.equal('An awesome comment');
  });

  it('should change state when the text of author input component changes', () =&amp;gt; {
    const authorInputComponent = wrapper.find('TextInput').first();

    authorInputComponent.simulate('ChangeText','wenger');

    expect(wrapper.state('name')).to.equal('wenger');
  });

  it('should change state when the text of comment input component changes', () =&amp;gt; {
    const commentInputComponent = wrapper.find('TextInput').at(1);

    commentInputComponent.simulate('ChangeText','arsenal');

    expect(wrapper.state('comment')).to.equal('arsenal');
  });

  it('invokes handleCommitSubmit method of CommentBox with author and comment', () =&amp;gt; {
    sinon.stub(CommentBox.prototype, "handleCommentSubmit");

    const wrapper = shallow(&amp;lt;CommentForm onCommentSubmit={CommentBox.prototype.handleCommentSubmit}/&amp;gt;);
    const submitButton = wrapper.find('TouchableNativeFeedback').first();
    wrapper.setState({name: 'JK '});
    wrapper.setState({comment: ' Arsenal is the best'});

    submitButton.simulate('press');

    expect(CommentBox.prototype.handleCommentSubmit.calledWith({author: 'JK', text: 'Arsenal is the best'})).to.be.true;
    CommentBox.prototype.handleCommentSubmit.restore();
  });

  it('sets the state of two input fields to the initial state on press', () =&amp;gt; {
    sinon.stub(CommentBox.prototype, "handleCommentSubmit");

    const wrapper = shallow(&amp;lt;CommentForm onCommentSubmit={CommentBox.prototype.handleCommentSubmit}/&amp;gt;);
    const submitButton = wrapper.find('TouchableNativeFeedback').first();
    wrapper.setState({name: 'JK'});
    wrapper.setState({comment: 'Arsenal is the best'});

    submitButton.simulate('press');

    expect(wrapper.state('name')).to.equal("");
    expect(wrapper.state('comment')).to.equal("");

    CommentBox.prototype.handleCommentSubmit.restore();
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentForm.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component, View, TouchableNativeFeedback, Text, TextInput} from 'react-native';

export default class CommentForm extends React.Component {

 constructor(props) {
  super(props);
  this.state = {name: '', comment: ''};
 }
 static propTypes = {
  onCommentSubmit: React.PropTypes.func
 };

 render() {
  return(
  &amp;lt;View&amp;gt;
   &amp;lt;TextInput
    placeholder="name"
    style={{height: 40, borderColor: 'gray', borderWidth: 1}}
    onChangeText={(text) =&amp;gt; this.setState({name: text})}
    value={this.state.name}
   /&amp;gt;
  &amp;lt;TextInput
   placeholder="comment"
   style={{height: 40, borderColor: 'gray', borderWidth: 1}}
   onChangeText={(content) =&amp;gt; this.setState({comment: content})}
   value={this.state.comment}
  /&amp;gt;
  &amp;lt;TouchableNativeFeedback
   onPress={() =&amp;gt; this.onPressButton()}&amp;gt;
   &amp;lt;View style={{width: 150, height: 100, backgroundColor: 'red'}}&amp;gt;
    &amp;lt;Text style={{margin: 30}}&amp;gt;Submit&amp;lt;/Text&amp;gt;
   &amp;lt;/View&amp;gt;
  &amp;lt;/TouchableNativeFeedback&amp;gt;
 &amp;lt;/View&amp;gt;
 );
 }

 onPressButton() {
  var author = this.state.name.trim();
  var comment = this.state.comment.trim();
  this.state = {name: '', comment: ''};
  this.props.onCommentSubmit({author: author, text: comment});
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Observe how we test the behaviour of components on user interaction. We use &lt;a href="http://airbnb.io/enzyme/docs/api/ShallowWrapper/simulate.html"&gt;simulate()&lt;/a&gt; method provided by shallow rendering API of enzyme to simulate the &lt;code&gt;press&lt;/code&gt; event here. This method can be used to test other types of user interactions as well.CommentBox component  is where everything is wired up together. It should pass a list of comment data to CommentList as props and also handle storing the comments when submitted from CommentForm.&lt;/p&gt;

&lt;p&gt;We’ll use  &lt;a href="https://facebook.github.io/react-native/docs/asyncstorage.html"&gt;Asyncstorage&lt;/a&gt; of React-Native to store and retrieve comments. We’ll start with getting the comments and passing them to CommentList. The key for AsyncStorage data collection will be passed as props to CommentBox from app’s root component. Let us take care of submitting of a comment first.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentBox.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, Text, AsyncStorage } from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';
import sinon from 'sinon';

import CommentBox from '../CommentBox.js';
import CommentList from '../CommentList.js';
import CommentForm from '../CommentForm.js';

describe('&amp;lt;CommentBox /&amp;gt;', () =&amp;gt; {

 beforeEach(function() {
   wrapper = shallow(&amp;lt;CommentBox asyncStorageKey={'comments'} /&amp;gt;);
 });

 it('should be a view component', () =&amp;gt; {
   expect(wrapper.type()).to.equal(View);
 });

 it('should have a title Comment It', () =&amp;gt; {
   expect(wrapper.contains(&amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;)).to.equal(true);
 });

 it('should render comment list component', () =&amp;gt; {
   expect(wrapper.find(CommentList)).to.have.length(1);
 });

 it('should render comment form component', () =&amp;gt; {
   expect(wrapper.find(CommentForm)).to.have.length(1);
 });

 it('should have an initial state', () =&amp;gt; {
   expect(wrapper.state('data').length).to.equal(0);
 });

 it('should pass its state data as props to commentlist component', () =&amp;gt; {
   expect(wrapper.find(CommentList).props().data).to.eql(wrapper.state('data'));
 });

 it('should pass its handleCommentSubmit method as props to CommentForm component', () =&amp;gt; {
   commentBox = new CommentBox();

   var definedMethod = commentBox.handleCommentSubmit;

   var passedMethod = wrapper.find(CommentForm).props().onCommentSubmit;
   expect(definedMethod.toString()).to.equal(passedMethod.toString());
 });

 describe('handleCommentSubmit', () =&amp;gt; {
  it('stores comment data using asyncstorage on comment submit', () =&amp;gt; {
   var data = [
     { author: "Pete Hunt", text: "This is one comment"},
     { author: "Jordan Walke", text: "This is a super comment"},
     { author: "Jordan Walkerr", text: "This is an ordinary comment"}
   ];

   commentBox = new CommentBox({asyncStorageKey: 'comments'});
   commentBox.state.data = data;
   var commentData = {author: 'JK', text: 'Arsenal is the best'};
   data.push(commentData);
   var spy = sinon.spy(AsyncStorage, "setItem");

   commentBox.handleCommentSubmit(commentData);

   expect(spy.calledOnce).to.be.true;
   expect(spy.calledWith('comments', JSON.stringify(data))).to.be.true;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentBox.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component, Text, View, AsyncStorage } from 'react-native';
import CommentList from './CommentList.js';
import CommentForm from './CommentForm.js';

export default class CommentBox extends React.Component {
  constructor(props) {
    super(props);
    this.state = {data: []};
    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);
  }

  static propTypes =  {
    asyncStorageKey: React.PropTypes.string
  };

  handleCommentSubmit(comment_data) {
    var comments = this.state.data;
    comments.push(comment_data);
    AsyncStorage.setItem(this.props.asyncStorageKey, JSON.stringify(comments));
  }

  render() {
    return(
        &amp;lt;View&amp;gt;
          &amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;
          &amp;lt;CommentList data={this.state.data}/&amp;gt;
          &amp;lt;CommentForm onCommentSubmit={this.handleCommentSubmit}/&amp;gt;
        &amp;lt;/View&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That takes care of submitting comment part. Now lets do the comment loading part.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/components/__specs__/CommentBox.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { View, Text, AsyncStorage } from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';
import sinon from 'sinon';

import CommentBox from '../CommentBox.js';
import CommentList from '../CommentList.js';
import CommentForm from '../CommentForm.js';

describe('&amp;lt;CommentBox /&amp;gt;', () =&amp;gt; {
 describe('handleCommentSubmit', () =&amp;gt; {
   it('stores comment data using asyncstorage on comment submit', () =&amp;gt; {
     var data = [
      { author: "Pete Hunt", text: "This is one comment"},
      { author: "Jordan Walke", text: "This is a super comment"},
      { author: "Jordan Walkerr", text: "This is an ordinary comment"}
    ];

    commentBox = new CommentBox({asyncStorageKey: 'comments'});
    commentBox.state.data = data;
    var commentData = {author: 'JK', text: 'Arsenal is the best'};
    data.push(commentData);
    var spy = sinon.spy(AsyncStorage, "setItem");

    commentBox.handleCommentSubmit(commentData);

    expect(spy.calledOnce).to.be.true;
    expect(spy.calledWith('comments', JSON.stringify(data))).to.be.true;
 });

 it('invokes the getComments method', () =&amp;gt; {
   var data = [
     { author: "Pete Hunt", text: "This is one comment"},
     { author: "Jordan Walke", text: "This is a super comment"},
     { author: "Jordan Walkerr", text: "This is an ordinary comment"}
   ];

   commentBox = new CommentBox({asyncStorageKey: 'comments'});
   sinon.stub(commentBox, "getComments");
   var commentData = {author: 'JK', text: 'Arsenal is the best'};

   commentBox.handleCommentSubmit(commentData);

   expect(commentBox.getComments.calledOnce).to.be.true;
   });
  });
 });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/CommentBox.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, {Component,Text, View, AsyncStorage } from 'react-native';
import CommentList from './CommentList.js';
import CommentForm from './CommentForm.js';

export default class CommentBox extends React.Component {
 constructor(props) {
   super(props);
   this.state = {data: []};
   this.handleCommentSubmit = this.handleCommentSubmit.bind(this);
   this.getComments = this.getComments.bind(this);
 }

 static propTypes = {
   asyncStorageKey: React.PropTypes.string
 };

 getComments() {
   AsyncStorage.getItem(this.props.asyncStorageKey)
     .then((comments) =&amp;gt; {
       comments = JSON.parse(comments);
       this.setState({ data: comments });
     })
    .catch(() =&amp;gt; {
    });
 }

 handleCommentSubmit(comment_data) {
   var comments = this.state.data;
   comments.push(comment_data);
   AsyncStorage.setItem(this.props.asyncStorageKey, JSON.stringify(comments));
   this.getComments();
 }

 render() {
   return(
     &amp;lt;View&amp;gt;
       &amp;lt;Text&amp;gt;Comment It&amp;lt;/Text&amp;gt;
       &amp;lt;CommentList data={this.state.data}/&amp;gt;
       &amp;lt;CommentForm onCommentSubmit={this.handleCommentSubmit}/&amp;gt;
     &amp;lt;/View&amp;gt;
  );
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get the app up and running we need to have a root component and register it in the App registryLet us create a component called App and render CommentBox component inside it. While rendering the CommentBox component, we pass in the AsyncStorage key as props.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/__specs__/app.spec.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React from 'react-native';
import { shallow } from 'enzyme';
import { expect } from 'chai';

import CommentBox from '../components/CommentBox.js';
import App from '../app.js';
describe('&amp;lt;App /&amp;gt;', () =&amp;gt; {
  it('should render a commentBox component', () =&amp;gt; {
    const wrapper = shallow(&amp;lt;App /&amp;gt;);

    expect(wrapper.find(CommentBox)).to.have.length(1);
  });

  it('should pass data as props on rendering CommentBox component', () =&amp;gt; {
    const wrapper = shallow(&amp;lt;App/&amp;gt;);

    expect(wrapper.find(CommentBox).props().asyncStorageKey).to.eql('comments');
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;src/components/app.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import React, { Component } from 'react-native';
import CommentBox from './components/CommentBox.js';

export default class App extends Component {
  render() {

    return (
        &amp;lt;CommentBox asyncStorageKey={'comments'}/&amp;gt;
    );
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now register the component in the app registry and that’s it. &lt;code&gt;index.android.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import { AppRegistry } from 'react-native';
import App from './src/app';
AppRegistry.registerComponent('ReactNativeBoilerplate', () =&amp;gt; App);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can view the entire codebase &lt;a href="https://github.com/multunus/React-Native-TDD-Tutorial"&gt;here&lt;/a&gt; .&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt; Phew!  That was a long exercise. We’re proud that you completed it and happy for your learnings. That was mostly about UI testing. We also have sample tests for asynchronous JS code, redux, authentication etc. in our boilerplate. Do check them out.&lt;/p&gt;

&lt;p&gt;TDD provides a tight feedback loop that cranks up our development workflow and improves quality and maintainability of code. TDD is one among many engineering practises that we follow here at Multunus. There are other practises that we follow, like &lt;a href="https://www.thoughtworks.com/continuous-integration"&gt;Continous Integration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We’ve started integrating these concepts into our boilerplate too. Do checkout our blogpost about &lt;a href="http://www.multunus.com/blog/2016/06/automated-environment-management-react-native-ios/"&gt;Automated environment management in React Native – iOS&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Automated environment management in React Native - iOS</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/06/automated-environment-management-react-native-ios/"/>
    <id>http://www.multunus.com/blog/2016/06/automated-environment-management-react-native-ios/</id>
    <published>2016-06-21T04:24:07+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the mundane error prone tasks while developing mobile apps, is switching between different versions (say dev and production) of the app for testing. If not automated, this often involves manually changing environment specific configurations back and forth. You know what we programmers do - comment out certain parts of the code and uncomment them back again later. And of course, sometimes we forget to do the latter :)&lt;/p&gt;

&lt;p&gt;At Multunus, we started researching and using React Native about 6 months ago. One of the problems we faced early on was switching between development, staging and production environments for our RN app. This included server URLs, keys to third party services like
&lt;a href="https://microsoft.github.io/code-push/"&gt;CodePush&lt;/a&gt; and feature toggles! And we had to use these environment specific config in our JS code. Ideally, we wanted to be able to build different versions (i.e., dev, staging, production) of the app instead of switching the environment configuration each time you build.&lt;/p&gt;

&lt;p&gt;This post is going to walk you through a solution to this problem on iOS and probably also introduce some idioms of iOS development (assuming you are new to iOS development).&lt;/p&gt;

&lt;p&gt;To start with, let us try and break this problem down a little further. What we need is&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Be able to build different versions of the app for each environment.&lt;/li&gt;
  &lt;li&gt;Identify which version the app is built and use the appropriate config (on the JS side)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;One strategy for this would be&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Store the config of all environments in a JSON file&lt;/li&gt;
  &lt;li&gt;On the native side, use different XCode configurations to build different versions of the app&lt;/li&gt;
  &lt;li&gt;Expose a configuration specific environment name (Eg., staging) to the JS side using native modules&lt;/li&gt;
  &lt;li&gt;On the JS side, import the native module to get the environment name. Then using the JSON file mentioned above get the appropriate config&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s look at step one.&lt;/p&gt;

&lt;h2 id="the-json-config-file"&gt;The JSON config file&lt;/h2&gt;

&lt;p&gt;Let’s start by creating a &lt;code&gt;config.json&lt;/code&gt; in the root directory of the project. This will store our config for all the environments.&lt;/p&gt;

&lt;pre&gt;&lt;code class="language-json"&gt;// config.json
{
  "development": {
    "codePushKey": "",
    "appServerRootURL": "http://localhost:3000"
  },
  "staging": {
    "codePushKey": "STAGING CODE PUSH KEY",
    "appServerRootURL": "STAGING ROOT URL"
   },
  "production": {
    "codePushKey": "PRODUCTION CODE PUSH KEY",
    "appServerRootURL": "PRODUCTION ROOT URL"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the top level keys contain the different environment names and all we need is to figure out which of these keys to access the config from.&lt;/p&gt;

&lt;h2 id="build-different-versions-of-the-app"&gt;Build different versions of the app&lt;/h2&gt;

&lt;p&gt;Let us say, we need development, staging and production versions of the app. Now if you have used the
react-native-cli to generate the app for the first time, you would have two configurations set up in your XCode project -
&lt;strong&gt;Debug&lt;/strong&gt; and &lt;strong&gt;Release&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_configurations_1.png?w=1024" alt="xcode_configurations_1" /&gt;&lt;/p&gt;

&lt;p&gt;Going forward we shall use
&lt;strong&gt;Debug&lt;/strong&gt; for our development app and &lt;strong&gt;Release&lt;/strong&gt;
 for our production app. That means we’ll need one more for our staging app. So, let’s create a duplicate of the &lt;strong&gt;Release&lt;/strong&gt;
 configuration and name it  &lt;strong&gt;Staging&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_configurations_2.png" alt="xcode_configurations_2" /&gt;&lt;/p&gt;

&lt;p&gt;Why not rename those configurations to
&lt;strong&gt;Development&lt;/strong&gt; and &lt;strong&gt;Production&lt;/strong&gt;
 and be more consistent in our naming? The React Native code is heavily dependent on those configuration names to make certain optimisations to &lt;strong&gt;Release&lt;/strong&gt; builds.&lt;/p&gt;

&lt;p&gt;XCode schemes are a convenient way to use different configurations while building an app both from the command line and the XCode GUI. Quoting Apple’s developer docs, &lt;em&gt;An Xcode scheme defines a collection of targets to build, a configuration to use when building, and a collection of tests to execute.&lt;/em&gt; So in our case, we need to have three schemes to build using each of those three configurations. So let’s create them! XCode projects usually start with one scheme per target.&lt;/p&gt;

&lt;p&gt;To start with, let us create a scheme for development builds. Duplicate the existing scheme (the name is usually the same as that of the project) and give it an appropriate name.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_schemes_1.png" alt="xcode_schemes_1" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_schemes_2.png?w=1024" alt="xcode_schemes_2" /&gt;&lt;/p&gt;

&lt;p&gt;Choose
&lt;strong&gt;Debug&lt;/strong&gt;as the build configuration for the &lt;strong&gt;Run&lt;/strong&gt; and &lt;strong&gt;Archive&lt;/strong&gt;
 actions. Similarly, create a scheme for the staging app and choose &lt;strong&gt;Staging&lt;/strong&gt; as the build configuration for the &lt;strong&gt;Run&lt;/strong&gt; and &lt;strong&gt;Archive&lt;/strong&gt;
 actions. Now you can choose the new schemes from the top left corner while running / archiving the app from the XCode GUI or while archiving it from the command line.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_schemes_3.png?w=1024" alt="xcode_schemes_3" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/xcode_schemes_4.png" alt="xcode_schemes_4" /&gt;&lt;/p&gt;

&lt;h2 id="the-native-module"&gt;The native module&lt;/h2&gt;

&lt;p&gt;We are now able to build different versions of the app. What we need next is a way to identify which version was built. We will use a User-Defined setting on XCode to accomplish this. Let’s create a User-Defined setting called &lt;code&gt;BUILD_ENV&lt;/code&gt; . Now user defined settings can have different values for each configuration. So let’s set the values as
&lt;strong&gt;Development&lt;/strong&gt;, &lt;strong&gt;Staging&lt;/strong&gt; and &lt;strong&gt;Production&lt;/strong&gt; for &lt;strong&gt;Debug&lt;/strong&gt;,&lt;strong&gt;Staging&lt;/strong&gt; and &lt;strong&gt;Release&lt;/strong&gt; respectively.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/user_defined_setting_1.png?w=1024" alt="user_defined_setting_1" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/Screen-Shot-2016-11-03-at-7.54.03-AM.png?w=1024" alt="user_defined_setting_2" /&gt;&lt;/p&gt;

&lt;p&gt;User-Defined settings are not accessible from the code directly. Instead they have to be stored in the &lt;code&gt;Info.plist&lt;/code&gt; to be accessed from the application code. So we now add a new property key-value to the &lt;code&gt;Info.plist&lt;/code&gt; file. Let’s call the key &lt;code&gt;BuildEnvironment&lt;/code&gt; and set the value to &lt;code&gt;$(BUILD_ENV)&lt;/code&gt;. This will set the value from the user defined setting.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/Screen-Shot-2016-11-03-at-7.54.03-AM.png?w=1024" alt="user_defined_setting_3" /&gt;&lt;/p&gt;

&lt;p&gt;Now that &lt;code&gt;buildEnvironment&lt;/code&gt; is accessible, let’s create our native module! We’ll call this &lt;code&gt;RNConfig.&lt;/code&gt; Let’s create a header file &lt;code&gt;RNConfig.h&lt;/code&gt; and an Objective-C class file &lt;code&gt;RNConfig.m&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/06/native_module_1.png?w=1454" alt="native_module_1" /&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the docs for native modules, our class should implement the
RCTBridgeModule protocol.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// RNConfig.h
#import "RCTBridgeModule.h"

@interface RNConfig : NSObject
@end

// RNConfig.m
#import "RNConfig.h"

@implementation RNConfig

RCT_EXPORT_MODULE();

- (NSDictionary *)constantsToExport
{
  NSString* buildEnvironment = [[[NSBundle mainBundle] infoDictionary] valueForKey:@"BuildEnvironment"];
  return @{ @"buildEnvironment": buildEnvironment };
}

@end%
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the line&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;NSString* buildEnvironment = [[[NSBundle mainBundle] infoDictionary] valueForKey:@"BuildEnvironment"];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the bit that reads the
buildEnvironment from &lt;code&gt;Info.plist.&lt;/code&gt; The next line returns a dictionary with the&lt;code&gt;buildEnvironment&lt;/code&gt; value. So here we are! The native side of the app can now expose to the JS side the environment’s name the app was built for.&lt;/p&gt;

&lt;h2 id="get-the-appropriate-config-in-js"&gt;Get the appropriate config in JS&lt;/h2&gt;

&lt;p&gt;Now that the native module is created, we just need to import it in our JS code and we will have the environment name. A convenient way of accessing the configuration data in our application code is to create an abstraction on top of the &lt;code&gt;envConfig.json&lt;/code&gt; and the &lt;code&gt;RNConfig&lt;/code&gt; native module. This will be a JS module which will get the environment name from the native module and use that to get the appropriate config from the JSON file.&lt;/p&gt;

&lt;p&gt;So, let’s create a file &lt;code&gt;appConfig.js&lt;/code&gt; in the root directory (the main project directory, not the ios/YOUR_PROJECT_NAME directory)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// appConfig.js
import { RNConfig } from 'NativeModules';
import EnvConfig from './envConfig.json';

let environment = RNConfig.buildEnvironment;

let getAppServerRootURL = function() {
  return EnvConfig[environment].appServerRootURL;
}

export default {
  appServerRootURL: getAppServerRootURL()
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s now quite straightforward to access the server root URL in our application code. We just import the
appConfig module and use it like so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import AppConfig from './appConfig';

let appServerRootURL = AppConfig.appServerRootURL;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As simple as that! Clearly any environment specific configuration like CodePush keys, GA tracking code and feature toggles depending on your necessity.&lt;/p&gt;

&lt;h2 id="final-thoughts"&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;We have built a boilerplate app with React Native -
&lt;a href="https://github.com/multunus/react-native-boilerplate"&gt;https://github.com/multunus/react-native-boilerplate&lt;/a&gt;. It’s still quite young but it includes some sensible choices already made for things like environment management, state management in JS, etc. So the stuff that is explained in this post has already been taken care of in the boilerplate. All that needs to be done is to change the app name and the scheme names.&lt;/p&gt;

&lt;p&gt;Also, another blog post for tackling the same problem in Android is coming up. So stay tuned!&lt;/p&gt;

&lt;p&gt;Before ending, I would like to point out one little shortcoming of the approach explained in this post. We are yet to figure out a good way to access the environment specific config on the native side. While I haven’t really found a need for that yet, it is not hard to imagine situations where it will be needed. So, if you’ve figured that out, let us know!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Merge Hells? Feature Toggles to the rescue!</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/"/>
    <id>http://www.multunus.com/blog/2016/03/merge-hells-feature-toggles-rescue/</id>
    <published>2016-03-29T21:18:08+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="http://images.memes.com/meme/369621" alt="Merge Conflicts" /&gt;&lt;/p&gt;

&lt;p&gt;“Team X  is nearing  major release. A major one after they got their funding. There is a huge backlog of features the investors are asking for and another set of features their loving customers are eagerly waiting for.&lt;/p&gt;

&lt;p&gt;With the funding, they were able to get some really smart people onto the team, so a few features are being developed in parallel. Everyone is very excited about their feature going live, and they’ve been very careful about making sure that they have high test coverage to avoid regression issues and also setup Continuous Integration in place for faster feedback.&lt;/p&gt;

&lt;p&gt;And the day for the integration comes and it goes on and on and on and on…&lt;/p&gt;

&lt;p&gt;It takes them almost a week to integrate, i.e. just to merge different branches together, and a few more days after that to test and then release. They introduced another manual test phase because they were threatened by the merge conflicts and lost confidence in their automated tests.&lt;/p&gt;

&lt;p&gt;The release is delayed, something they never expected. The entire team is disappointed. Better not to ask how the business people felt.&lt;/p&gt;

&lt;p&gt;‘What went wrong despite having high test coverage and a Continuous Integration setup?’ everyone wondered.”&lt;/p&gt;

&lt;p&gt;Familiar with the above story? Has it ever happened to you? Then read on, these are simple techniques which can help you to prevent your team working on such non-value added tasks such as fixing merge conflicts.&lt;/p&gt;

&lt;p&gt;Before jumping on to the solution, let’s first correct some misunderstandings/misconceptions about Continuous Integration.&lt;/p&gt;

&lt;h2 id="continuous-integration"&gt;Continuous Integration&lt;/h2&gt;
&lt;p&gt;"&lt;a href="https://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration(CI)&lt;/a&gt; is the practice, in software engineering, of &lt;strong&gt;merging all developer working copies to a shared mainline several times a day.”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's go back to the practices the Team X were following. They had CI setup for each feature branch, which is against the above definition of CI.&lt;/p&gt;

&lt;p&gt;Both &lt;strong&gt;Continuous&lt;/strong&gt; and &lt;strong&gt;Integration&lt;/strong&gt; are important in CI and it means continuously integrating the code in one branch, not in multiple branches. Let us see why this is important.&lt;/p&gt;

&lt;h2 id="mainline-development"&gt;Mainline Development&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://paulhammant.com/2013/04/05/what-is-trunk-based-development/"&gt;Mainline Development&lt;/a&gt;, also known as Trunk based development, is where everyone in the team commits to a single branch. Continuous Integration on the mainline branch guarantees that the branch is ready for deployment at any given point of time.&lt;/p&gt;

&lt;p&gt;If Team X was following the same, the time they spend on merging and fixing conflicts could have been used for creative tasks.&lt;/p&gt;

&lt;p&gt;Wondering how will you handle the situations such as following?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Features under development&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Features waiting for Acceptance from business stakeholders&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pushing quick fixes or patches to production&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Read on.&lt;/p&gt;

&lt;h2 id="feature-toggles"&gt;Feature Toggles&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/button-161555_1280.png" alt="Feature Toggles" /&gt;&lt;/p&gt;

&lt;p&gt;This is where Feature Toggles come to the rescue.&lt;/p&gt;

&lt;p&gt;A Feature Toggle -  also known as a Feature Flag, Feature Flip or Feature Switch - is a simple technique where you can turn on or off a certain feature through configuration.&lt;/p&gt;

&lt;p&gt;Let’s go back to the Team X. By keeping toggles for the features, the entire team could have continued working on the same branch and the long-living branches could have been completely avoided. This along with&lt;a href="#ci"&gt;Continuous Integration as mentioned above&lt;/a&gt;, where the code gets merged and tested multiple times a day, merge issues should be very minimal or non-existent.&lt;/p&gt;

&lt;p&gt;By keeping the toggle off in the production environments, the worry of end users seeing the incomplete feature can be avoided.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def cart_items
  if ADD_ANOTHER_COLOR_OF_SAME_PRODUCT
    return products_with_same_color
  else
    return all_products
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above code snippet,* ADD_ANOTHER_COLOR_OF_SAME_PRODUCT*  is the feature which can be turned on and off depending upon the environment where it is running such as testing, staging, production etc.&lt;/p&gt;

&lt;p&gt;Yes, I know what you are thinking. So many “”. Yes, it’s true. It can get complicated. But it’s only for a short period of time. Once the feature is done, the toggle can and should be removed completely.&lt;/p&gt;

&lt;p&gt;In case there is a quick fix that needs to be pushed to production, there is no confusion about which branch to fix and rebased with as there is only one branch. The fix can be very confidently pushed to production, with the feature under development being turned off.&lt;/p&gt;

&lt;h2 id="experimental-toggles"&gt;Experimental Toggles&lt;/h2&gt;

&lt;p&gt;The release toggles, the toggles to hide partly built  features, are a very common use of feature toggle.&lt;/p&gt;

&lt;p&gt;Another type of toggle is &lt;strong&gt;Experimental Toggles&lt;/strong&gt;, where the feature is exposed to a set of users for quick experimentation and feedback. This is commonly done using one of the below techniques.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/A/B_testing"&gt;A/B testing&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Multivariate_testing"&gt;Multivariate testing&lt;/a&gt;- to test multiple parallel experiments&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://martinfowler.com/bliki/CanaryRelease.html"&gt;Canary Release&lt;/a&gt; or &lt;a href="http://martinfowler.com/bliki/BlueGreenDeployment.html"&gt;Blue Green Deployments&lt;/a&gt;-  - to incrementally launch the feature to batches of users&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/hammering-usernames/96390263919/"&gt;Dark Launching&lt;/a&gt;- Launch the feature to soak test even before releasing it to the users&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="ops-toggles"&gt;Ops Toggles&lt;/h2&gt;

&lt;p&gt;A good system should be designed for failures. A failure can due to anything that comes under the “unexpected” category, such as unexpected load on the system or unexpected hardware failure or unexpected network failure.&lt;/p&gt;

&lt;p&gt;When you see such surprising behaviors in production, the usual thing to do is to rollback the code. The rolling back of code can be as complicated as merging long-lived branches.&lt;/p&gt;

&lt;p&gt;Ops Toggles, another type of Feature Toggle, can be used for degrading a specific feature or for removing a specific feature completely until the situation is brought under control. Using Ops Toggles, you can turn off the feature without rolling back the code.  Ops Toggles can be considered as a way to manage&lt;a href="http://martinfowler.com/bliki/CircuitBreaker.html"&gt;Circuit Breakers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Users might have a degraded experience which is much better than keeping the buggy feature which will continue to embarrass many users.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://martinfowler.com/articles/feature-toggles/chart-3.png" alt="Types of Feature Toggles" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://martinfowler.com/articles/feature-toggles.html"&gt;Credit: http://martinfowler.com/articles/feature-toggles.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind toggles need to be short lived, except for Ops Toggles. And keep toggles as few as possible.&lt;/p&gt;

&lt;h2 id="cathedral-vs-bazaar-model"&gt;Cathedral vs Bazaar Model&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://guides.github.com/introduction/flow/"&gt;Github workflow&lt;/a&gt;is a model that is commonly used by many. It is a good model for Open Source Projects to bring in some amount of rigor to the &lt;a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar"&gt;bazaar&lt;/a&gt;. But in a more controlled environment, relying on interdependence within the team for code reviews or pair programming might be better. The value of the code will start coming in only when it reaches the users. Until then it is a Work In Progress or inventory. And our goal should be reduced Work In Progress.&lt;/p&gt;

&lt;p&gt;Please read &lt;a href="http://www.multunus.com/blog/2013/06/github-workflow-vs-mainline-development/"&gt;my earlier post&lt;/a&gt;, which talks about this in detail.&lt;/p&gt;

&lt;h2 id="the-dark-side"&gt;The Dark Side&lt;/h2&gt;

&lt;p&gt;As we discussed above, Feature Toggles introduces, which can add to the Code Complexity. Ideally, the toggles should exist for a short duration until the experiment is done or until the feature reaches to all the users. But ideal, at times, may be far from reality, which can create issues as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Screen-Shot-2016-03-29-at-3.33.29-PM-1024x589.png" alt="Dark side of Feature Toggles" /&gt;&lt;/p&gt;

&lt;p&gt;Case in point: Knight Capital Group’s &lt;a href="http://dougseven.com/2014/04/17/knightmare-a-devops-cautionary-tale/"&gt;$460 million dollar mistake&lt;/a&gt;, where a wrong use of the Feature Flag and Manual deployment caused the company many $$ in just 45 minutes.&lt;/p&gt;

&lt;h2 id="tips"&gt;Tips&lt;/h2&gt;

&lt;p&gt;Every approach has pros and cons.&lt;/p&gt;

&lt;p&gt;I would like to relate this to “how to pay off technical debt?”. Different teams might be following different tricks for &lt;a href="http://martinfowler.com/bliki/TechnicalDebtQuadrant.html"&gt;paying off the technical debt&lt;/a&gt;. But the goal for every team is to reduce it to the minimum so that it doesn’t affect the predictability or sustainability of software delivery. There is no “silver bullet” that really works for every team because the context is different for each team.&lt;/p&gt;

&lt;p&gt;The same applies to Feature Toggle too. There is no silver bullet to make sure that the Feature Toggles are short lived. There are quite a few tips and tricks followed by the teams, which can potentially work for many.&lt;/p&gt;

&lt;p&gt;At Multunus, what we have seen working is adding the card to the backlog to get rid of the Feature Toggle, along with reviewing the feature toggles once in every few weeks.&lt;/p&gt;

&lt;p&gt;Another technique is to define &lt;a href="http://martinfowler.com/articles/feature-toggles.html"&gt;“expiry date” for toggles&lt;/a&gt;and also logic to break the build or refusing to start the application if toggles exist beyond the. The same article talks about feature toggles in detail and a variety of different ways of reducing code complexity through better design of the code.&lt;/p&gt;

&lt;p&gt;Try out different approaches and see what works and what doesn’t. A common thing with any tool is that when people are new to the tool, there is a probability that they don’t use the tool in the way it was supposed to be used.&lt;/p&gt;

&lt;p&gt;The solution is not to blame the tool or person who used it wrong. Instead, fix the issue quickly and identify the gap and provide better training mechanisms to avoid similar issues happening again in the future.&lt;/p&gt;

&lt;p&gt;This requires a systematic way of conductingpostmortems. This is known as  &lt;a href="https://codeascraft.com/2012/05/22/blameless-postmortems/"&gt;Blameless Postmortems&lt;/a&gt;, as referred by &lt;a href="https://twitter.com/allspaw"&gt;John Allspaw&lt;/a&gt;, where the effort is to balance safety and accountability.&lt;/p&gt;

&lt;h2 id="further-readings"&gt;Further Readings&lt;/h2&gt;

&lt;p&gt;Both Mainline Development and Feature Toggles are practices followed by many high performing organizations since their very early days. You can go through the below posts which refer to some of those:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.slideshare.net/jallspaw/10-deploys-per-day-dev-and-ops-cooperation-at-flickr/47-1_RespectIf_there_is_only"&gt;10+ deployments a day @ Flickr&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.infoq.com/news/2014/03/etsy-deploy-50-times-a-day"&gt;50+ deployments a day @ Etsy&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://joshuaseiden.com/blog/2013/12/amazon-deploys-to-production-every-11-6-seconds/"&gt;Amazon does deployments every 11.6 seconds&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://air.mozilla.org/continuous-delivery-at-google/"&gt;Google - commit to production is 8 minutes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/hammering-usernames/96390263919/"&gt;Dark Launching @ Facebook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://techblog.netflix.com/2011/04/lessons-netflix-learned-from-aws-outage.html"&gt;Netflix - Lessons learned during AWS Outage&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Growing an early stage Consumer Startup with Experiments [Part 1] - Navigating the early stages</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/03/growing-early-stage-consumer-startup-experiments-part-1-navigating-early-stages/"/>
    <id>http://www.multunus.com/blog/2016/03/growing-early-stage-consumer-startup-experiments-part-1-navigating-early-stages/</id>
    <published>2016-03-23T22:47:02+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;You’ve got an idea for a consumer product. And you’re raring to go build it.&lt;/p&gt;

&lt;p&gt;But you’ve also heard about the
&lt;a href="http://theleanstartup.com/principles"&gt;Lean Startup&lt;/a&gt; and that it’s better to “
build what you can sell, rather than sell what you can build”. And you’re sold on that idea already. You definitely want to avoid building something that nobody wants.&lt;/p&gt;

&lt;p&gt;Where do you go from here? That’s what this series is about. It’s a 3 part post, that’ll take you from where you have an idea to giving you specific next steps to help you navigate your startup for the next 6 months or so.“Hold on..who said I was sold on the Lean Startup?”&lt;/p&gt;

&lt;p&gt;One of the things that most first-time entrepreneurs struggle with is thinking about their “
&lt;a href="https://leanstack.com/your-product-is-not-the-product/"&gt;business as their product&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;Here are 9 things you need to think about straight off the bat, if you’re serious about building a sustainable business with your product idea:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Lean-canvas-template-1.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Lean-canvas-template-1.png" alt="Lean canvas template" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Most of us have a tendency of focusing only on the “solution” block above and forgetting about the remaining 8 blocks. That is a recipe for failure and will almost certainly crater your business even before it gets off the ground.&lt;/p&gt;

&lt;p&gt;If you’re skeptical about those statements, please do yourself a favor and read the
&lt;a href="http://www.amazon.com/The-Lean-Startup-Entrepreneurs-Continuous/dp/0307887898"&gt;Lean Startup&lt;/a&gt;. If that still doesn’t change your mind, the rest of this post series will do you no good either.&lt;/p&gt;

&lt;p&gt;But if you’ve bought into the idea that your
&lt;a href="http://www.startuplessonslearned.com/2009/04/validated-learning-about-customers.html"&gt;primary measure of progress as an early stage startup is learning about your market&lt;/a&gt;, read on.&lt;/p&gt;

&lt;h2 id="the-steps-you-need-to-climb"&gt;The “steps” you need to climb&lt;/h2&gt;

&lt;p&gt;Navigating the whole process of systematically de-risking your business model is a big and hairy task. To tackle something like that head on, you want to be using the best tools and techniques that are currently available.&lt;/p&gt;

&lt;p&gt;The first thing to realize is that every startup has the following stages of growth:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Lean-analytics-stages.jpg" alt="Lean Startup stages" /&gt;&lt;/p&gt;

&lt;p&gt;Source :&lt;a href="http://www.slideshare.net/Leananalytics/understanding-lean-analytics-and-how-analytics-helps-businesses-win-17324564"&gt;Slideshare on Understanding lean Analytics by Ben Yoskovitz&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="which-stage-am-i-in"&gt;Which stage am I in?&lt;/h2&gt;

&lt;p&gt;If you’re asking this question, you’re probably at one of the earlier stages :). Which is either Empathy or Stickiness. Beyond that is product-market fit, at which time, your startup is growing by leaps and bounds. And you wouldn’t have time to read this post :).&lt;/p&gt;

&lt;p&gt;But how do you know if you’re yet to cross
empathy (
pre-empathy) or have crossed empathy but are yet to cross
stickiness (
pre-stickiness)?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-Empathy&lt;/strong&gt; Do you have a very good
connection with your customers or users? Are you able to predict with confidence as to what their biggest concerns here? What makes them feel great? Why do they do what they do? If the answer to those questions is no, you’re at Pre-Empathy. The idea is to be able to feel what they feel strongly,
before you start investing significantly in the product.&lt;/p&gt;

&lt;p&gt;The tricky thing with this stage is that we all have some level of empathy with our users. This is what allows us to have a nice conversation with them, perhaps give them a solution to their personal problem, say during a face to face conversation.&lt;/p&gt;

&lt;p&gt;But this is not usually sufficient when we’re trying to interact with them through our product. If the user has to engage with our product, we need to know beforehand what state of mind they might be in before using the product and how they would react after interacting with our product.&lt;/p&gt;

&lt;p&gt;And for us to be able to correctly predict that, we need to know a lot more about our users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pre-Stickiness&lt;/strong&gt; Do you have active users in your product? Are they using it at least twice a day (“
&lt;a href="http://versionone.vc/does-your-product-pass-the-toothbrush-test/"&gt;Toothbrush Test&lt;/a&gt;”)? Is your product changing the behaviour of your users? If the answer to those questions is “no”, you’re at Pre-Stickiness.&lt;/p&gt;

&lt;p&gt;The key goal at this stage, is to reduce “
&lt;a href="https://en.wikipedia.org/wiki/Churn_rate"&gt;churn&lt;/a&gt;”: That is to plug the “leaks” in your product, to ensure that once you get a new user to try out your product, they go from the intent of  “casually checking it out” to to becoming your “permanent” users (by passing the “Toothbrush Test”).&lt;/p&gt;

&lt;h2 id="taking-it-one-step-at-a-time"&gt;Taking it one step at a time&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1 - Idea&lt;/strong&gt; You start with having a great idea for a product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2 - Cross Pre-Empathy&lt;/strong&gt; Since you’ve just got the idea, chances are that you’re yet to figure out who your target users are and whether they have problems that can be solved by your product. So, your first key task is to get cross the Pre-Empathy stage.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3 - Cross Pre-Stickiness&lt;/strong&gt; This is the juicy bit, where you get wonderful feature ideas, build them and test how well those features resonate with your users. When you’re able to consistently and accurately “predict” how your users are going to respond to changes in your product, you’re ready to move on and increase the rate of adding users to your product.&lt;/p&gt;

&lt;h2 id="how-do-i-measure-my-growth"&gt;How do I measure my growth?&lt;/h2&gt;

&lt;p&gt;We need a consistent way to be able to measure how our users react to changes in our product. This is where metrics come in.&lt;/p&gt;

&lt;p&gt;The problem with metrics is that ‘
not all metrics are created equal’&lt;/p&gt;

&lt;p&gt;When we’re building a product, there’s usually multiple things we could measure. For example, let’s say you’re driving a car. You can measure everything from your speed, to the heat of the engine, to the oil and fuel levels.&lt;/p&gt;

&lt;p&gt;But here’s the thing: If what you’re doing is backing up your car, the only thing that matters at that time is the distance of the wall behind you.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/backingup.jpg" alt="Car backing up" /&gt;&lt;/p&gt;

&lt;p&gt;Source :&lt;a href="http://dailyremarks.com/tag/car-backing-up/"&gt;Daily Remarks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We call that the “One Metric That Matters” or OMTM for short. This is a concept from the
&lt;a href="http://leananalyticsbook.com/"&gt;Lean Analytics book&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="whats-my-omtm"&gt;What’s my OMTM?&lt;/h2&gt;

&lt;p&gt;The idea is that once we know the stage of your startup and the type of product you’re building, we can come up with that “one” metric that you should be measuring.&lt;/p&gt;

&lt;p&gt;The Lean Analytics book has a nice matrix of which metrics to measure in what situations. From what I know, this is based on significant research and experience. So, if I were you, I would go with what is suggested there - at least for starters. It’s better than any gut feels or guesses that you or I could make.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Lean-Analytics-Stages.png" alt="Lean Analytics Stages" /&gt;&lt;/p&gt;

&lt;p&gt;Source : &lt;a href="https://www.udemy.com/lean-analytics-workshop-alistair-croll-and-ben-yoskovitz/?siteID=TnL5HPStwNw-N1qdLwJbe7s9cC7sovBIeA&amp;amp;LSNPUBID=TnL5HPStwNw"&gt;Lean Analytics Workshop on Udemy - Alistair Croll and Ben Yoskovitz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After a couple of weeks of using the metric while also performing
experiments at the same time [described in the next section], you will be able to start seeing some patterns. If there’s a more important metric other than the one you’re measuring currently, it’ll start showing up in your radar and you can them switch focus to that metric. In essence, you will just “know”.&lt;/p&gt;

&lt;p&gt;But once again, your problem now is to find a good metric to “start” with. And the grid above is very useful for that.&lt;/p&gt;

&lt;h2 id="learn-using"&gt;“Learn” Using&lt;/h2&gt;
&lt;p&gt;Experiments&lt;/p&gt;

&lt;p&gt;The next question is how do you use the above concepts of OMTM and startup growth stages on a daily basis to move your startup forward.&lt;/p&gt;

&lt;p&gt;Your goal is to
learn about your market. In the first two stages of a startup, there’s a significant gap between what the market (or your users and customers) wants and what you may be intending to build.&lt;/p&gt;

&lt;p&gt;The goal is to lower that gap. And you achieve that by performing “experiments”. The “experiments” are best seen as a routine or process - that you keep repeating everyday.&lt;/p&gt;

&lt;p&gt;It takes some discipline to do these well, but after a month or two of practice, you should be well on your way to
learning (about your market) at a good pace.&lt;/p&gt;

&lt;h2 id="diving-into-the-world-of-experiments"&gt;Diving into the world of Experiments&lt;/h2&gt;

&lt;p&gt;The process is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Step 1: Setup the experiment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 2: Build&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 3: Review results&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 4: Iterate&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="step-1-setup-the-experiment"&gt;Step 1: Setup the experiment:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What is your OMTM?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the current value of the OMTM?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is your target value for your OMTM?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is your
experiment hypothesis (or “idea”) to help you move forward toward the OMTM goal?
[What’s a
hypothesis? They’re simply assumptions that you write down about the  market’s perspective of your idea. The only significant difference here is that you also have an explicit intention to test and confirm whether your assumption is true or false (validated or invalidated).]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How will the idea help you to learn more about your customer?
This question will help you stay grounded during the ideation process. A high level of excitement while coming up with product features is a common scenario. While the excitement is great in that you will feel more energized, it’s quite risky in that you may end up forgetting that these are your ideas and that your users would still need to buy into them, for your investment of time and money to make business sense.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How will you measure whether your idea is working?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the reporting structure for the above information?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="step-2-build"&gt;Step 2: Build:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Implement the “idea”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is your measuring process easy?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="step-3-review-results"&gt;Step 3: Review results:&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What is the OMTM value, after the experiment?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Update the Report with the new OMTM value&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How well did your “idea” work? Which hypotheses were validated and which were invalidated?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is the customer’s behavior more predictable to you after the experiment?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Was there something else (perhaps unexpected) that you discovered during the experiment? If you had an insight during the experiment, that’s fantastic. These are the gems you’re looking for.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are there any new hypotheses that you want to test? Any hypotheses that need updating?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="step-4-iterate"&gt;Step 4: Iterate:&lt;/h3&gt;

&lt;p&gt;Ready to start the whole thing again? :)”&lt;/p&gt;

&lt;h2 id="overwhelmed-heres-a-perspective-that-could-help"&gt;Overwhelmed? Here’s a perspective that could help&lt;/h2&gt;

&lt;p&gt;The above seems a bit overwhelming at first, but after the first couple of experiments, your focus will automatically shift from the process to the goal at hand - which is to learn more about your users. You’ll start to think more and more like them.&lt;/p&gt;

&lt;p&gt;You could think of the process and steps like your camera equipment - the camera body, your lens, tripod etc. Your goal is to focus on your subject and capture them (that is “learn about them) in your photo. You could think of each experiment as adjusting the lens to increase your understanding of your users. With each new experiment, the clarity of your “picture” will improve.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;And over a period of time, you will be able to think how your users think - in a predictable, consistent manner.&lt;/p&gt;

&lt;h2 id="experiments-for-consumer-startups"&gt;Experiments for “Consumer Startups”&lt;/h2&gt;

&lt;p&gt;The concept of
experiments is useful to grow any kind of startup - enterprise or consumer. But when you dive in deeper into the techniques for performing the experiments (especially at the Pre-Stickiness stage), you’ll observe significant differences.&lt;/p&gt;

&lt;p&gt;And this post series is focused specifically on “Consumer Startups”.&lt;/p&gt;

&lt;p&gt;Further, experiments also look quite different in the Empathy and Stickiness stages.&lt;/p&gt;

&lt;h3 id="get-going-already"&gt;Get Going Already!&lt;/h3&gt;

&lt;p&gt;It's now time to roll up your sleeves and get to work on the experiments. Check out the remaining parts of this series to get started:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-2-getting-empathy-using-experiments/"&gt;Consumer startups Part 2: Getting to Empathy Using Experiments&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-3-getting-stickiness-using-experiments/"&gt;Consumer startups Part 3: Getting to Stickiness Using Experiments&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Growing Consumer startups [Part 2]: Getting to Empathy Using Experiments</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-2-getting-empathy-using-experiments/"/>
    <id>http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-2-getting-empathy-using-experiments/</id>
    <published>2016-03-23T22:46:30+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In this post, we dive into the gory details of performing experiments to cross the Pre-Empathy stage in a Consumer Startup.&lt;/p&gt;

&lt;p&gt;[If that makes no sense to you, read
&lt;a href="http://www.multunus.com/blog/2016/03/growing-early-stage-consumer-startup-experiments-part-1-navigating-early-stages/"&gt;Part 1 of this series&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;As mentioned in the last post, the four stages of experiments are as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Step 1: Setup the experiment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 2: Build&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 3: Review results&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 4: Iterate&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s how you execute those steps for a Consumer Startup:&lt;/p&gt;

&lt;h2 id="step-1-set-up-the-experiment"&gt;Step 1: Set up the Experiment&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. What is your OMTM?&lt;/strong&gt;
 This is usually the number of
&lt;a href="http://www.startuplessonslearned.com/2008/11/what-is-customer-development.html"&gt;Customer Development&lt;/a&gt; interviews you’ve done. These are meetings that you schedule with your target users to increase your empathy for them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. What is the current value of the OMTM?&lt;/strong&gt;
 This is simply the total number of interviews you’ve conducted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. What is your target value for your OMTM?&lt;/strong&gt;
 For a consumer product, you should ideally start seeing some kind of early pattern among your target users
&lt;a href="http://customerdevlabs.com/2014/07/01/how-many-customer-discovery-problem-interviews-should-i-do/"&gt;when you speak with about 5 people&lt;/a&gt; (assuming you’ve chosen a narrow enough early adopter group). But to get to a very good understanding of your users, you should plan to at least do 20-30 interviews. Most ideally this should be between 50-100.
&lt;a href="http://mfishbein.com/how-many-customer-development-interviews/"&gt;The more, the better.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Considering that each interview will take about 90 minutes of your time (for the interview and sharing the notes), this is indeed a significant time investment. But nobody said that empathizing with your users is easy :). Of course, having a deep level of empathy with your users will pay off rich dividends as your startup grows into stickiness, virality and further stages. So, it’s worth the upfront investment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. What is your experiment hypothesis (or “idea”) to help you move forward toward the OMTM goal?&lt;/strong&gt;
 At the empathy stage, the “idea” is almost always the same: Customer Development Interviews. And your goal is to hit your target number of total interviews.&lt;/p&gt;

&lt;p&gt;Read on. The next question will help you have more faith :).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. How will the idea help you to learn more about your customer?&lt;/strong&gt;
 Not feeling
very good about Cust Devs so far? If it sounds like I’m asking you to do interviews solely for the purpose of hitting an arbitrary number, I wouldn’t blame you. You’d right in asking:
“How is this exercise going to help me move my startup forward? I realize that I need to get to know my users and customers better, but how do I ensure that I get the maximum value from these interviews?”&lt;/p&gt;

&lt;p&gt;It’s going to get a bit crazy here - so hang on. I’ve said so far that your hypothesis is this:
Hitting your OMTM goal of a total number of Cust Dev’s will enable to cross the empathy stage.&lt;/p&gt;

&lt;p&gt;But Cust Dev’s also have hypotheses
nested within them. And it’s best to see Cust Dev’s as
the lowest cost way to validate these hypotheses you have about your market.&lt;/p&gt;

&lt;p&gt;How do you come up with these hypotheses? Read the following two chapters from
&lt;a href="http://www.talkingtohumans.com/"&gt;Talking to Humans&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;"Who do you want to learn from?”&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;Who are the people who will find your product most useful? Who will eventually want to partner with you? And most importantly, who are those people who will pay to use your product? You need to have hypotheses on who these people might be and talk to
them.&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;dl&gt;
      &lt;dt&gt;&lt;strong&gt;“What do you want to learn”&lt;/strong&gt;&lt;/dt&gt;
      &lt;dd&gt;Most first time entrepreneurs have a hard time thinking about their “
&lt;a href="https://leanstack.com/your-product-is-not-the-product/"&gt;business as their product&lt;/a&gt;”. There’s usually a very strong tendency to focus on the product “idea”, its features, the technology and the user experience. But there’s a bunch of much more important questions that need answering. Here’s a quick starter:&lt;/dd&gt;
    &lt;/dl&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The problem my customer wants to solve is?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why can’t my customer solve this today?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will make money (revenue) by?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;My primary competition will be?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;I will beat my competitors primarily because of?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;My biggest risk to financial viability is?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What assumptions do we have that, if proven wrong, would cause this business to fail? (Tip: include market size in this list)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Make sure to read the chapter end to end. That will help you get into the habit of thinking about your “business model as your product” and then get into the habit of systematically de-risking your business model.&lt;/p&gt;

&lt;p&gt;[NOTE: If you’re familiar with the
&lt;a href="https://en.wikipedia.org/wiki/Business_Model_Canvas"&gt;Business Model Canvas&lt;/a&gt; or the
&lt;a href="http://www.furld.com/2011/the-lean-canvas/"&gt;Lean Canvas&lt;/a&gt;, then you’ll notice that the type of questions mentioned above are on the same lines.]&lt;/p&gt;

&lt;p&gt;“
&lt;a href="http://www.talkingtohumans.com/"&gt;Talking to Humans&lt;/a&gt;” is IMHO the only resource you might need to get a ton of value from your interviews. And its free!&lt;/p&gt;

&lt;p&gt;Here’s 2 key reasons why Cust Dev’s are much more efficient at testing hypotheses than, say testing with a real product:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You can test multiple hypotheses in a single interview&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can get much quicker feedback. It only takes a maximum of 90min.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;6. How will you measure whether your “idea” is working?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;“Cust Dev’s seems like a great way to learn about my market in a super cheap way. But I still want to able to quantify my learnings in some way.”&lt;/p&gt;

&lt;p&gt;If those were your thoughts, kudos to you. That’s the kind of exacting discipline and rigor that will help you on the path of constant learning.&lt;/p&gt;

&lt;p&gt;Use this
&lt;a href="https://docs.google.com/a/multunus.com/spreadsheets/d/1PvphjCbtq-VFgjoKmzw7rIXYlLI3KKDGUUeZmFO1czs/edit?usp=sharing"&gt;Scoring Sheet&lt;/a&gt;. It’ll keep you honest and focused on the goal of learning and empathizing with your target users.&lt;/p&gt;

&lt;p&gt;As you consistently and diligently follow this process, you will have significant insights into your users’ psychology, motivation and behavior patterns. Dare I say, you might be able to predict how they will behave better than they themselves might!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. What is the reporting structure for the above information?&lt;/strong&gt;
 Here’s why a good reporting structure is important:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Don’t have a team to share your learnings with?&lt;/strong&gt;
 You still need this to keep your sanity and ensure that you’re not drowning in a sea of information. You will collect a ton of learnings in a very short period of time - and you need an easy way to navigate through all that. Only then will you be able to discover insights and patterns between various interviews.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Have a team? Great.&lt;/strong&gt;
 Everyone on your team should be doing Cust Devs. And if that’s happening, you need a consistent way to share your learnings with each other. Every time that happens, you’re extracting multi-fold value (in terms increased empathy across the team) from each Cust Dev.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are two things that you need to report on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The notes from the interview: Here’s a
&lt;a href="https://docs.google.com/document/d/1Nh2iRttvUWoZAlEmgd8cVEj47EkwYSiD6aCjSzRUfrM/edit?usp=sharing"&gt;template&lt;/a&gt; that you could start with&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The score of the interview: Here’s the link once again to the
&lt;a href="https://docs.google.com/a/multunus.com/spreadsheets/d/1PvphjCbtq-VFgjoKmzw7rIXYlLI3KKDGUUeZmFO1czs/edit?usp=sharing"&gt;scoring sheet template&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="step-2-build"&gt;Step 2: Build&lt;/h2&gt;

&lt;p&gt;To reiterate, the two key parts of this phase are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Implement the idea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keeping your measuring process sustainable&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Details:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Doing Cust Dev’s well requires some key skills:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Recruiting&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Active listening&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Probing for “stories”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Avoiding selling your idea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Avoiding confirmation bias&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once again, I’d recommend reading
&lt;a href="http://www.talkingtohumans.com/"&gt;Talking To Humans&lt;/a&gt;. Specifically, the following chapters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“How do you find your interview subjects?”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“How to ensure an effective session”?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. Is your measuring process sustainable?&lt;/strong&gt;
 It’s important to ensure that the process doesn’t come in the way of your
learning goals. Otherwise, you may end up losing motivation to continue the interviews.&lt;/p&gt;

&lt;p&gt;Use the
&lt;a href="https://docs.google.com/a/multunus.com/spreadsheets/d/1PvphjCbtq-VFgjoKmzw7rIXYlLI3KKDGUUeZmFO1czs/edit?usp=sharing"&gt;Scoring Sheet&lt;/a&gt; and
&lt;a href="https://docs.google.com/document/d/1Nh2iRttvUWoZAlEmgd8cVEj47EkwYSiD6aCjSzRUfrM/edit?usp=sharing"&gt;Notes&lt;/a&gt; templates as resources to get you started. If you find them easy to use, that’s great. But if they’re becoming cumbersome, then feel free to tweak them so they work better for you.&lt;/p&gt;

&lt;h2 id="step-3-review-results"&gt;Step 3: Review results&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. What is the OMTM value, after the experiment?&lt;/strong&gt;
 Once again, this is the total number of Cust Dev’s you’ve finished.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Update the Report with the new OMTM value&lt;/strong&gt;
 Okay, you don’t need to do this. The number of records in the Scoring Sheet will of course suffice to know the OMTM value.How well did your “idea” work? Which hypotheses were validated and which were&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. How well did your “idea” work? Which hypotheses were validated and which were&lt;/strong&gt;
invalidated
&lt;strong&gt;?&lt;/strong&gt;
 This is also not very relevant in this case.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Is the customer’s behavior more predictable to you after the experiment?&lt;/strong&gt;
 This will be reflected in the scores you recorded after each Cust Dev. If you’re tweaking your hypotheses (the ones nested in your Cust Devs) and also getting better at defining your target user persona - after each Cust Dev, you should see your scores rising. And if your scores are rising, that’s an indicator that you’re able to predict your target customer’s behavior better as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Was there something else (perhaps unexpected, an “insight” perhaps) that you discovered during the experiment?&lt;/strong&gt;
 As mentioned earlier, Cust Dev’s are about “listening”. Not listening for what you “want to hear”, but for discovering
&lt;a href="https://en.wikipedia.org/wiki/There_are_known_knowns"&gt;“unknown unknowns”&lt;/a&gt;. Watch the following video, to get a better understanding of this concept.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=pTv4yD6BKlAE"&gt;&lt;img src="http://img.youtube.com/vi/pTv4yD6BKlA/0.jpg" alt="**Source:YouTube**" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is almost certain that once you get to 20+ Cust Devs, you’d have had a good number of insights - on both who are your target users are and also what they want.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Are there any new hypotheses that you want to test? Any hypotheses that need updating?&lt;/strong&gt;
 With the insights and learnings from each interview, you’ll have new ideas that you’ll want to validate in the upcoming interviews. Keep track of these meticulously and diligently.&lt;/p&gt;

&lt;p&gt;Record your thoughts in last 3 columns of the
&lt;a href="https://docs.google.com/spreadsheets/d/1PvphjCbtq-VFgjoKmzw7rIXYlLI3KKDGUUeZmFO1czs/edit?usp=sharing"&gt;Scoring Sheet&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="step-4-iterate"&gt;Step 4: Iterate&lt;/h2&gt;

&lt;p&gt;You’ll need to go through the experimentation process as many times as it takes to get to the target value of your OMTM.&lt;/p&gt;

&lt;p&gt;Feed the updated/new hypotheses that you’ve got as the output from your just finished experiment cycle - as the input for the new experiment cycle.&lt;/p&gt;

&lt;p&gt;This process will get you closer to the OMTM over a period of time.&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Perfecting the art of doing Customer Development interviews will take time. But it is a skill that is well worth picking up, if you want to make sure that you’ve crossed the empathy stage, before starting to invest more in your idea.&lt;/p&gt;

&lt;p&gt;The next and last part of this series dives into experiments at the Stickiness stage. Read on.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Growing Consumer startups [Part 3]: Getting to Stickiness Using Experiments</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-3-getting-stickiness-using-experiments/"/>
    <id>http://www.multunus.com/blog/2016/03/growing-consumer-startups-part-3-getting-stickiness-using-experiments/</id>
    <published>2016-03-23T22:45:44+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In this third and final part of the series, we dive into the details of performing experiments to cross the Stickiness stage in a Consumer Startup.&lt;/p&gt;

&lt;p&gt;[If you need more context, please start at
&lt;a href="http://www.multunus.com/blog/2016/03/growing-early-stage-consumer-startup-experiments-part-1-navigating-early-stages/"&gt;Part 1 of this series&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Here’s the four stages of experiments:
*  Step 1: Setup the experiment&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Step 2: Build&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 3: Review results&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Step 4: Iterate&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s how you execute those steps for a Consumer Startup:&lt;/p&gt;

&lt;h2 id="step-1-set-up-the-experiment"&gt;Step 1: Set up the Experiment&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. What is your OMTM?&lt;/strong&gt;
 Here’s some examples of metrics that you could track at this stage:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Lean-Analytics-Stages1.png" alt="Lean-Analytics-Stages highlighted" /&gt;&lt;/p&gt;

&lt;p&gt;I realize that the above image could be a bit overwhelming. Beyond the empathy stage, the metrics that you need to keep track of depends on two factors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The stage of your startup (Stickiness, Virality and so on)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The type of your business model: The image above has 6 business models (from
&lt;a href="http://leananalyticsbook.com/"&gt;Lean Analytics&lt;/a&gt;) - that pretty much cover most types of business models. Your startup idea is probably a combo of one or more of those business models. So you should be able to use the above image to get some good starter ideas to come up with an OMTM.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure to grab a copy of the
&lt;a href="http://leananalyticsbook.com/"&gt;Lean Analytics book&lt;/a&gt; - before you move forward. You’ll save a ton of time, money. And also keep your stress levels down :).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Want something quicker? Watch this
&lt;a href="https://www.udemy.com/lean-analytics-workshop-alistair-croll-and-ben-yoskovitz/"&gt;fantastic (and free!) course on Udemy&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, you could also
&lt;a href="https://vforvaidy.wordpress.com/2015/05/26/lean-analytics-part-1-notes-from-a-fantastic-udemy-course/"&gt;check out this post I wrote&lt;/a&gt; (which summarizes the Udemy course).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A key point to keep in mind is the concept of
&lt;a href="http://onstartups.com/tabid/3339/bid/96738/Measuring-What-Matters-How-To-Pick-A-Good-Metric.aspx"&gt;Good Metrics and Bad Metrics&lt;/a&gt;. This is another key concept from Lean Analytics. Once again, the book and the links above do a very good job of covering this topic as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. What is the current value of the OMTM?&lt;/strong&gt;
 Measuring your OMTM at this stage will probably need some tooling. Google Analytics should suffice for most situations.
&lt;a href="https://www.kissmetrics.com/"&gt;KISSMetrics&lt;/a&gt; and
&lt;a href="https://mixpanel.com/"&gt;Mixpanel&lt;/a&gt; are also good tools. Check out
&lt;a href="http://www.apptamin.com/blog/app-analytics-tools/"&gt;these&lt;/a&gt;
&lt;a href="http://www.sparringmind.com/best-web-analytics/"&gt;posts&lt;/a&gt; for a roundup of web and mobile app tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. What is your target value for your OMTM?&lt;/strong&gt;
 Using a good benchmark here will help you set a good starting point for the speed of growth of your OMTM that you should aim for. For example,
&lt;a href="http://www.paulgraham.com/growth.html"&gt;Y Combinator asks its startups to strive for a 7% week on week growth&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. What is your experiment hypothesis (or “idea”) to help you move forward toward the OMTM goal?&lt;/strong&gt;
 We finally come to the juicy stuff :). For a consumer product, your goal is to pass the “
&lt;a href="http://versionone.vc/does-your-product-pass-the-toothbrush-test/"&gt;Toothbrush Test&lt;/a&gt;”. And this is where the
&lt;a href="http://www.forbes.com/sites/anthonykosner/2014/02/17/hooked-how-to-make-habit-forming-products-and-when-to-stop-flapping/#18ec2e143c5a"&gt;Hooked model&lt;/a&gt; is very useful.&lt;/p&gt;

&lt;p&gt;It’s prudent to come up with hypotheses that are based on this kind of significant user behavior research, rather than to shoot in the dark and hope that your idea sticks.&lt;/p&gt;

&lt;p&gt;Here’s each phase of the hooked cycle:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Trigger&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Action&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Variable Reward&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Investment&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your goal is to ensure that your product has an increasing number of strong Hook cycles encoded in its “design”. Here’s a few next steps for you:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/02/hooked-users-to-moveit/"&gt;Refer to this post&lt;/a&gt; to learn more about the Hooked model.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fill up the
&lt;a href="http://www.nirandfar.com/download/hooked-workbook.pdf"&gt;Hooked Workbook&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://medium.com/startup-strategy/the-lean-roadmap-9f96f507dca8#.iy04j58io"&gt;This post&lt;/a&gt; has an example of how you could craft experiments using the Hooked model at the Stickiness stage.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;
We’re not talking about visual design here. This is “product design” - or the way that we intend for the user to interact and navigate through the product. And the kind of deliberate behavioural (“habitual”) changes we want to make in the user, through the design of the product.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. How will the idea help you to learn more about your customer?&lt;/strong&gt;
 Your goal at this stage is to find out how well you’re able to “encode” the empathy you already have with your users into your product. When they interact with your product, are they getting engaged in “predictable” ways? Are they coming back from more? Do they “respond” to your features in predictable ways?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. How will you measure whether your “idea” is working?&lt;/strong&gt;
 You will be measuring both of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Whether your users are interacting with the specific change that you made in the product, as predicted&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Whether you’re moving closer to the OMTM goal&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you can connect both a
&lt;a href="http://statistics.about.com/od/HelpandTutorials/a/Correlation-And-Causation.htm"&gt;correlation and causation&lt;/a&gt; between the above metrics, then you can say with confidence that your hypotheses has been validated.&lt;/p&gt;

&lt;p&gt;**7. What is the reporting structure for the above information? **&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/1JUjuH1wO3Nge9F6G-QlCy-5NDK_gBGZffotcxjF5HXI/edit?usp=sharing"&gt;Use this template&lt;/a&gt; to keep record the details of each experiment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1JTm9CBdFrwwVFq_BozwJ5GFpLocZu-6wAeQzvnI2nik/edit?usp=sharing"&gt;Use this template&lt;/a&gt; to keep track of how your OMTM is changing with each experiment&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="step-2-build"&gt;Step 2: Build&lt;/h2&gt;

&lt;p&gt;To reiterate, the two key parts of this phase are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Implement the idea&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keeping your measuring process sustainable&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Details:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Implementation&lt;/strong&gt;
As mentioned above, for consumer products, your goal is to implement the Hooked cycle in your product. For this purpose, you need to build a “working” prototype - that is something with enough moving parts to allow multiple users to interact with your product over time. Usually this means that you would have to build a full fledged web or mobile app, but that’s not necessarily true.&lt;/p&gt;

&lt;p&gt;Here’s 3 options that you can choose from to do that:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A. Proof-of-Concepts:&lt;/strong&gt;
 We’ve been able to build and test a bunch of ideas here at Multunus using a combination of just Google Spreadsheets, Google Forms and Trello. Read
&lt;a href="http://www.multunus.com/blog/2015/11/super-fast-mvps-using-just-google-docs-part-1/"&gt;this&lt;/a&gt;, &lt;a href="http://www.multunus.com/blog/2015/12/super-fast-mvps-just-google-docs-part-2/"&gt;this&lt;/a&gt; and &lt;a href="http://www.multunus.com/blog/2015/12/build-super-fast-mvps-without-programmers-part-3/"&gt;this&lt;/a&gt; to learn more..&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;While the first link above is a Consumer Product, the last two links above are enterprise products. But the posts will still help you realize that you can actually get a lot done with off the shelf free tools and some scripting.&lt;/li&gt;
  &lt;li&gt;While it is less straightforward to implement the Hooked cycle, it is still possible to do this. We’re currently working on a Proof-of-Concept that demonstrates that this is possible - using a combination of the following Slack and Google Spreadsheets. It’s still work-in-progress, but if you’re keen to learn more about this, let us know in the comments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;B. Low Fidelity Prototypes:&lt;/strong&gt;
 These are fully working web or mobile apps - but with much less UI polish than would be expected of a mature product. Since the goal here is to figure out how to implement the Hooked cycle better (with an early set of pre-Alpha users), UI polish is not necessary.&lt;/p&gt;

&lt;p&gt;So you don’t have to obsess over pixel level perfection or butter smooth animations. You can instead focus on faster iteration and “user behaviour” learning.&lt;/p&gt;

&lt;p&gt;If you’re building a mobile app, try out
&lt;a href="http://chariotsolutions.com/blog/post/rapid-mobile-application-prototyping-with-phonegap/"&gt;PhoneGap&lt;/a&gt; as an alternative to building a native app. It’s just HTML, CSS and Javascript - and is generally much easier to iterate on, than native code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;C. High Fidelity Products:&lt;/strong&gt;
 These are full-fledged apps. I would not recommend that you go for these at the Pre-Stickiness stage - unless your target users would expect a very high level of fidelity from a very early stage product. If you’re tempted to say “Yes! My users do fall in that category”, you’re probably wrong. Unless you’re NASA, start with either a Proof-of-Concept or a Low Fidelity prototype.&lt;/p&gt;

&lt;p&gt;**2. Is your measuring process easy? **&lt;/p&gt;

&lt;p&gt;Generally, the higher the fidelity of your prototype, the more work you’ll need to do to collect metrics. For example, if you’re going with a Proof-of-Concept with Google Spreadsheets as your “database”, then you have very little additional work to do to collect and analyse your data. Where if you were going with a high fidelity product, you’d need to integrate the API’s from products like MixPanel or KissMetrics to get deep insights about your user’s behaviour.&lt;/p&gt;

&lt;p&gt;As I’ve been suggesting all along, the more “work” you have to do as part of your experiment lifecycle, the longer it will take for you to get feedback from your experiments and the less motivated you will be to continue experimenting.&lt;/p&gt;

&lt;p&gt;Learning in the pre-stickiness stage is a long-winded, difficult process. So it’s in your best interest to do whatever you can, to allow you to persist over at least a 4-6 month period.&lt;/p&gt;

&lt;h2 id="step-3-review-results"&gt;Step 3: Review Results&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. What is the OMTM value, after the experiment?&lt;/strong&gt;
 Once you know what you want to measure, and you’ve also got the “instrumentation” taken care of (for gathering your data), then finding the new OMTM value is usually a simple case of doing some spreadsheet analysis.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Update the Report with the new OMTM value&lt;/strong&gt;
 This is simple enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. How well did your “idea” work? Which hypotheses were validated and which were invalidated?&lt;/strong&gt;
 If your results from the first set of experiments are not looking good, don’t worry. They almost never
look good, but that doesn’t mean that they were failures. It just means that some of your hypotheses got invalidated. Which is part of the
learning process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Is the customer’s behavior more predictable to you after the experiment?&lt;/strong&gt;
 This will depend on the answer to the above question. As your experimentation continues, you should be able to do an increasingly better job of implementing the Hooked cycle more successfully - and getting closer to passing the Toothbrush Test.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Was there something else (perhaps unexpected) that you discovered during the experiment?&lt;/strong&gt;
 These insights are not limited to just Cust Devs. You’ll always have opportunities to discover these. It could be said that the success of your product is highly correlated to the frequency of insights you gather from your experiments. This is a skill that is worth mastering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Are there any new hypotheses that you want to test? Any hypotheses that need updating?&lt;/strong&gt;
 This is pretty straightforward. The important thing to realize is that, you’ll need to do this diligently with each experiment. It can get somewhat difficult to do this properly, because you need to be alert to the fact that the value of each experiment is only going to be as good as the hypotheses you feed into it. There might be a tendency to just do the experiments without reviewing the hypotheses carefully. Beware of this and avoid it.&lt;/p&gt;

&lt;h2 id="step-4-iterate"&gt;Step 4: Iterate&lt;/h2&gt;

&lt;p&gt;You’ll need to go through the experimentation process as many times as it takes to get to the target value of your OMTM.&lt;/p&gt;

&lt;p&gt;Feed the updated/new hypotheses that you’ve got as the output from your just finished experiment cycle - as the input for the new experiment cycle.&lt;/p&gt;

&lt;p&gt;This process will get you closer to the OMTM over a period of time.&lt;/p&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Crossing the stickiness stage of your startup is a huge milestone. It is an indicator that you’ve designed your product very well and that you’re now ready to accelerate the growth of your business.&lt;/p&gt;

&lt;p&gt;Of course, anything that significant, requires persistence and a carefully crafted process of continuous improvement. This post is an introduction to the latter. All you need to bring in, is the former :).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Business Model Case Study: Skype</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/03/business-model-case-study-skype/"/>
    <id>http://www.multunus.com/blog/2016/03/business-model-case-study-skype/</id>
    <published>2016-03-16T00:14:24+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Have you ever used Skype? or do you use it daily or at least once every week?.&lt;/p&gt;

&lt;p&gt;Yes?&lt;/p&gt;

&lt;p&gt;How many times have you thought about what did it take for Skype to be where they are today as a business?&lt;/p&gt;

&lt;p&gt;Maybe never.&lt;/p&gt;

&lt;p&gt;What if I say that you can use few ideas from Skype’s business to your own startup? Yes, today I will walk you through Skype’s business model during their initial years of business and hopefully you will be able to get few ideas for your startup as well.&lt;/p&gt;

&lt;p&gt;Skype initially started as an instant messaging and a voice chat service. Later in 2011, video chat was introduced by partnering with 
&lt;a href="https://en.wikipedia.org/wiki/Comcast"&gt;Comcast&lt;/a&gt;. Skype user base grew significantly after the introduction of video calling. As on January 2016, there are 300 million active users.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Interesting-Facts-about-Skype.jpg" alt="Interesting Facts about Skype" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Skype-beta-version.jpg" alt=" Images from beta version of Skype (Apr 2004)" /&gt;&lt;/p&gt;

&lt;h2 id="lean-canvas-for-skype"&gt;Lean Canvas for Skype:&lt;/h2&gt;

&lt;p&gt;What is a Lean canvas? Lean canvas is a perfect tool for brainstorming possible business ideas, where to start and tracking ongoing learnings. This helps you to zoom out to look at the entire business plan at a high level and predict probable risk areas in the business. This can capture an entire business plan in a portable 1-page diagram.&lt;/p&gt;

&lt;p&gt;To Learn more, you can watch this 
&lt;a href="https://www.youtube.com/watch?v=7o8uYdUaFR4"&gt;video&lt;/a&gt; by Ash Maurya (~ 20 mins) explaining each block in Lean Canvas through an example.&lt;/p&gt;

&lt;p&gt;Below is a Lean Canvas that I have come up for Skype.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Skype-Lean-Canvas.jpg" alt="Skype - Lean Canvas" /&gt;&lt;/p&gt;

&lt;p&gt;The highlighted blocks in the Lean Canvas are the ones which in my opinion helped Skype to win over their competition and go ahead to revolutionize the communication industry. Though Skype didn’t have the first mover advantage, they did certain things differently.&lt;/p&gt;

&lt;p&gt;I have explained each block of Lean Canvas in detail below. If you are too eager to start on Lean Canvas for your business, log on to  
&lt;a href="https://leanstack.com/"&gt;https://leanstack.com/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I would suggest you to go through the entire post before jumping on to create your first Lean Canvas.&lt;/p&gt;

&lt;h2 id="problems-that-skype-solved"&gt;Problems that Skype solved:&lt;/h2&gt;

&lt;p&gt;Here're a few major problems that Skype tried to solve during its early days:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;International calls were very costly. There was a heavy dependency on the network providers for communication.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There wasn’t any application which provided instant file sharing system among online users. The users relied on emails for sending files.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to a survey done by Canada’s National Statistical Agency, a Canadian household spent over 1,000 CAD per year on regular and mobile phone calls, in 2004.  In UK, an average household spent more than the double - £960 per year.&lt;/p&gt;

&lt;p&gt;Credits: 
&lt;a href="https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=8&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwjCxc6I3rXLAhVCPo4KHdiUACkQFghJMAc&amp;amp;url=http%3A%2F%2Farc.hhs.se%2Fdownload.aspx%3FMediumId%3D496&amp;amp;usg=AFQjCNGGNWjJrWkNNFxg93573sf0SUdaUA"&gt;Master Thesis on, Skype: Reasons for growth by Nils Hammar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Skype promised to challenge the outdated business models and rip-off tactics of legacy telecom companies and to bring global unmetered communications to people all over the world.&lt;/p&gt;

&lt;h2 id="target-customer-segment"&gt;Target Customer Segment:&lt;/h2&gt;

&lt;p&gt;There were two set of users Skype targeted:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Users who want to chat instantly with other online users for free (with family, friends or colleagues)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Users who want to share files instantly and make free international voice calls for lesser cost than making phone calls&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The early adopters that Skype targeted were individuals who were making international phone calls and spending significant amount of money for communicating outside their respective countries.&lt;/p&gt;

&lt;h2 id="unique-value-proposition"&gt;Unique Value Proposition:&lt;/h2&gt;

&lt;p&gt;Skype’s Unique Value Proposition was to give away the core product for free, and up-sell additional services. That meant free calls to all Skype users. This attracted many users to use Skype and reduce their cost on making international phone calls.&lt;/p&gt;

&lt;p&gt;Skype’s high-level pitch was to provide the same call quality or even better for free between Skype users than normal phone calls with high call rates.&lt;/p&gt;

&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;

&lt;p&gt;Skype designed its product to solve three distinct problems:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Making international calls cheaper (Computer to telephone calls)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Free international calls (Computer to computer calls)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Easy file sharing system&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Skype voice chat allowed telephone calls between pairs of users and conference calling by using a proprietary audio 
&lt;a href="https://en.wikipedia.org/wiki/Codec"&gt;codec&lt;/a&gt;. Skype earned a majority of its revenue from supporting for paid service such as calling mobiles/landlines from Skype (formerly called SkypeOut) and calling Skype from mobiles/landlines (currently known as Skype Number).&lt;/p&gt;

&lt;p&gt;For easy file sharing system, Skype used 
&lt;a href="https://en.wikipedia.org/wiki/Peer-to-peer_file_sharing"&gt;peer-to-peer file sharing&lt;/a&gt; that was built for 
&lt;a href="https://en.wikipedia.org/wiki/Kazaa"&gt;Kazaa&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Kazaa was a music sharing applications built by the founders of Skype, 
&lt;a href="https://en.wikipedia.org/wiki/Niklas_Zennstr%C3%B6m"&gt;Niklas Zennström&lt;/a&gt;, and 
&lt;a href="https://en.wikipedia.org/wiki/Janus_Friis"&gt;Janus Friis&lt;/a&gt;. Kazaa was a peer to peer file sharing system which was commonly used to exchange 
&lt;a href="https://en.wikipedia.org/wiki/MP3"&gt;MP3&lt;/a&gt; music files and other file types, such as videos, applications, and documents over the Internet.&lt;/p&gt;

&lt;h2 id="channels"&gt;Channels:&lt;/h2&gt;

&lt;p&gt;Initially, Skype relied on increasing the user base by word of mouth marketing. They also had Skype partnered programs partnering with 
&lt;a href="http://www.plantronics.com/in/"&gt;Plantronics&lt;/a&gt; nudging the Skype users to get the best voice call experience by using their headsets and 
&lt;a href="http://web.archive.org/web/20041120022857/http://communications.siemens.com/cds/frontdoor/0,2241,hq_en_0_74257_rArNrNrNrN,00.html"&gt;Siemens Mobile&lt;/a&gt; as their preferred cordless phone provider. Skype was featured in all preferred partners websites.&lt;/p&gt;

&lt;p&gt;Through partner program, Skype got access to millions of users who would otherwise be out of reach for a small startup. Below are few other partners which helped Skype to get more users during the initial years.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Logitech (US / Global)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bebo (US / Global)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Salesforce.com (US)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;19  Radioshack (US)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;El Corte Ingles (Spain)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Phillips (Dutch / Global)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Panasonic (US / Global)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Aftonbladet (Sweden)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Credits: 
&lt;a href="https://www.google.co.in/url?sa=t&amp;amp;rct=j&amp;amp;q=&amp;amp;esrc=s&amp;amp;source=web&amp;amp;cd=8&amp;amp;cad=rja&amp;amp;uact=8&amp;amp;ved=0ahUKEwjCxc6I3rXLAhVCPo4KHdiUACkQFghJMAc&amp;amp;url=http%3A%2F%2Farc.hhs.se%2Fdownload.aspx%3FMediumId%3D496&amp;amp;usg=AFQjCNGGNWjJrWkNNFxg93573sf0SUdaUA"&gt;Master Thesis on, Skype: Reasons for growth by Nils Hammar&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apart from the partner program, Skype increased its user base by word of mouth marketing by its users. In January 2004, the number of new users who got added daily was around 30000. By late 2005, the number reached up to over 200,000.&lt;/p&gt;

&lt;p&gt;The unique value proposition of Skype and growing user base got them on all the leading business magazines. They got featured in Forbes Magazine in Feb 2004 edition.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/03/Screen-Shot-2016-03-09-at-9.14.24-AM.png" alt="Testimonial for Skype" /&gt;&lt;/p&gt;

&lt;h2 id="revenues"&gt;Revenues:&lt;/h2&gt;

&lt;p&gt;Skype initially made money by partnering with other companies who sold headsets and Cordless phone. The partners were featured on Skype website nudging the user to buy their products for a superior call quality. SkypeOut (Calling from Skype to Mobile/Landline) was an additional service for which users had to pay for. The 
&lt;a href="http://www.skylook.biz/skypeout"&gt;SkypeOut&lt;/a&gt; service was cheaper than phone calls.&lt;/p&gt;

&lt;p&gt;Later SkypeOut got renamed to Skype credit, Skype introduced monthly subscription for calling mobiles/landlines anywhere in the world for cheaper rates, sending text messages, Buying Skype number and other services.&lt;/p&gt;

&lt;h2 id="cost-structure"&gt;Cost Structure:&lt;/h2&gt;

&lt;p&gt;The majority of the cost incurred by Skype during the initial days was on developing and maintenance of the application, maintaining the website with the latest information and marketing activities.&lt;/p&gt;

&lt;h2 id="key-metrics"&gt;Key Metrics:&lt;/h2&gt;

&lt;p&gt;The key action that Skype wanted its users to take was to make calls using Skype. In order to track this, the 
&lt;a href="http://leananalyticsbook.com/one-metric-that-matters/"&gt;one metrics that mattered&lt;/a&gt; during the initial days of the Skype business was the growth rate of registered Skype users. This metric defined the success of Skype’s business.&lt;/p&gt;

&lt;h2 id="unfair-advantage"&gt;Unfair Advantage:&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Kazaa"&gt;Kazaa&lt;/a&gt; was bought by 
&lt;a href="https://en.wikipedia.org/wiki/Niklas_Zennstr%C3%B6m"&gt;Niklas Zennström&lt;/a&gt; and 
&lt;a href="https://en.wikipedia.org/wiki/Janus_Friis"&gt;Janus Friis&lt;/a&gt; who later founded Skype and used the peer to peer technology which was used for sharing music MP3 files and other video files for making free calls among skype users.&lt;/p&gt;

&lt;p&gt;The following are some of the techniques that Skype employed to deliver state-of-the -art IP-based voice chat system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Firewall and NAT (Network Address Translation) traversal:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Skype users were able to call each other even when firewalls and NAT’ed nodes were present between them. This was because the calls were routed using NonFirewalled Clients and publicly routable IP addresses.&lt;/p&gt;

&lt;p&gt;Several new techniques were also developed to avoid end user configurations which would prevent them from making voice calls. In short, Skype worked well even when firewalls existed without any special configurations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Globally decentralized user directory:&lt;/strong&gt;
 Most internet based communication tools need to track users with a central library which logs each username and IP number to know if a user is online or not. Central directories are extremely costly when the user base scale up to millions. By decentralizing this hungry resource infrastructure, Skype was able to focus all its resource in developing cutting-edge functionality.&lt;/p&gt;

&lt;p&gt;In order to deliver a high call quality with low cost, Skype developed a third generation P2P technology (3G P2P), Global Index. Global Index technology is a multi-tiered network where supernodes communicate in such a way that every node in the network have full knowledge about all the users and resources with minimal latency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Intelligent routing:&lt;/strong&gt;
 Skype kept multiple connections open and dynamically chose the best-suited connection at a given time to increase the call quality and reduce latency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Security:&lt;/strong&gt;
 Skype encrypted all calls and instant chat messages for unrivalled privacy. Encryption was necessary because all the calls were routed through the public internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Simple UI:&lt;/strong&gt;
 Skype had simple UI and a user could set it up with minimalistic configurations. Users who could use windows and telephones could start using Skype almost immediately.&lt;/p&gt;

&lt;h3 id="conclusion"&gt;Conclusion:&lt;/h3&gt;

&lt;p&gt;The problem that Skype wanted to solve resonated with the problems that users had. There was a need to design a product that provided good call quality or even better than conventional telephones but with lesser cost. Skype leveraged the fact that they had the best peer-to-peer technology which was used in Kazaa and developed on the same technology for building a voice chat system for free. This revolutionized the way we communicate.&lt;/p&gt;

&lt;p&gt;Excited to chalk out your business plan and learn more about the unique value proposition that your business has? Log on to  
&lt;a href="https://leanstack.com/"&gt;https://leanstack.com/&lt;/a&gt; to create your Lean Canvas today.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introduction to Impact Mapping – Impact Map for an eCommerce Product</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/02/introduction-impact-mapping-impact-map-ecommerce-product/"/>
    <id>http://www.multunus.com/blog/2016/02/introduction-impact-mapping-impact-map-ecommerce-product/</id>
    <published>2016-02-27T04:51:31+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;ul&gt;
  &lt;li&gt;The single biggest problem in communication is the illusion that it has taken place - Bernard Shaw*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;According to the &lt;a href="http://www.infoq.com/articles/standish-chaos-2015"&gt;Standish CHAOS report&lt;/a&gt;, only ~30% of software projects succeed. Others end up either being in a “challenged” state or fail altogether because of various reasons such as over budget, over time or lack of alignment. Let us look at some of the case studies.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://cdn.infoq.com/statics_s1_20160217-0123u3/resource/articles/standish-chaos-2015/en/resources/Modern%20Resolution.jpg" alt="Standish Chaos 2015" /&gt;&lt;/p&gt;

&lt;p&gt;[The modern resolution (OnTime, OnBudget, with a satisfactory result) of all software projects from FY2011-2015 within the new CHAOS database.] &lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.infoq.com/articles/standish-chaos-2015"&gt;Credit: http://www.infoq.com/articles/standish-chaos-2015&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;“After nine years of work and billions of pounds already spent, the UK government recently abandoned a doomed IT project because ‘it wasn't essential.&lt;/p&gt;

&lt;p&gt;"Commercial organisations across the European Union lost 142 billion EUR on failed IT projects in 2004 alone, mostly because of poor alignment with business objectives or business strategies becoming obsolete during delivery. This is roughly the cost of the International Space Station programme, including all flights, or almost twice the cost of the entire Apollo programme, which achieved six manned landings on the Moon.”&lt;/p&gt;

&lt;p&gt;[Excerpt from the &lt;a href="http://impactmapping.org/book"&gt;Impact Mapping&lt;/a&gt; book]&lt;/p&gt;

&lt;h2 id="strategic-alignment"&gt;Strategic Alignment&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://image.slidesharecdn.com/21centurysoftware-130830104432-phpapp02/95/21-century-software-6-638.jpg?cb=1423023399" alt="Water Scrum Fall" /&gt;.&lt;/p&gt;

&lt;p&gt;[Credit: http://image.slidesharecdn.com/21centurysoftware-130830104432-phpapp02/95/21-century-software-6-638.jpg?cb=1423023399].&lt;/p&gt;

&lt;p&gt;It is common to see this model called the &lt;a href="http://whatis.techtarget.com/definition/WaterScrumFall-water-Scrum-fall"&gt;Water-Scrum-Fall&lt;/a&gt; model, where:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.askahippo.com/"&gt;HIPPO&lt;/a&gt; [the Highest Paid Person in the room] decides the backlog&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The dev team work towards the same in the so-called "iterative" way&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The OPs fire starts because the products aligns with the market&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some teams try to solve this problem of  with the
&lt;a href="https://en.wikipedia.org/wiki/Project_charter"&gt;project charter&lt;/a&gt; or
&lt;a href="https://en.wikipedia.org/wiki/Vision_document"&gt;vision document&lt;/a&gt; but visibility becomes a struggle as these documents exists in some repository, hardly known to anyone or updated by anyone.&lt;/p&gt;

&lt;p&gt;Ask your team members: “What is the goal of your project?”. You may be surprised to know how many actually know about it.&lt;/p&gt;

&lt;p&gt;Another issue is that even though the Product Manager/Product Owner or the stakeholder has clarity on the “strategy” or “vision”, there is no forum to converse about these among the team.&lt;/p&gt;

&lt;p&gt;The planning meetings [iteration or release planning] are supposed to be taking care of this. But lack of clear guidelines for these planning meetings, results in backlog of features which are prioritised using:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Ad-hoc planning&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wrong Assumptions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pet features&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Impact Mapping&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.impactmapping.org/assets/poster_im_print_1500.jpg" alt="Impact Mapping" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.impactmapping.org/assets/poster_im_print_1500.jpg"&gt;Credit: http://www.impactmapping.org/assets/poster_im_print_1500.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impact Mapping is a "Strategic planning technique",explained in the book &lt;a href="http://impactmapping.org/book"&gt;Impact Mapping&lt;/a&gt; by &lt;a href="http://gojko.net/"&gt;Gojko Adzic&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Software delivery can’t be done in a vacuum by the technical team instead, it is a collaborative effort between the end users, the business team and the technical team.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The dynamic nature of software, adds to the complexity too.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what is required, is a “technique” which:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Focuses on collaboration among all the stakeholders&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Visualises and communicates the assumptions clearly&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is fast and iterative so that changes can be adapted without delay&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An “Impact Map” is a “mindmap”, derived from the discussion where all the stakeholders, both technical and business people, are involved. It mainly answers the below four questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Why?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s look at Impact Mapping in detail, taking an eCommerce product as an example.&lt;/p&gt;

&lt;h2 id="why"&gt;Why?&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Gary_A._Klein"&gt;Gary Klein&lt;/a&gt;, a research psychologist famous in the field of &lt;a href="https://mitpress.mit.edu/books/sources-power"&gt;naturalistic decision making&lt;/a&gt;,says that, to take better decisions during unforeseen events people should know the purpose of doing something. The research was done on emergency professionals which include firefighters, critical care nurses, pilots, nuclear power plant operators, battle planners, and chess masters to see how they make decisions in split seconds.&lt;/p&gt;

&lt;p&gt;This is the reason “Why” is the center of the Impact Map. It all starts with the question.&lt;/p&gt;

&lt;p&gt;This should be the milestone that the entire team tries to achieve.&lt;/p&gt;

&lt;p&gt;It is common for teams to have a roadmap of features, which are added either by the Stakeholders or by the team members themselves. A good technique is to use the&lt;a href="https://en.wikipedia.org/wiki/5_Whys"&gt;5 Whys technique&lt;/a&gt;to see why the feature is required and then arrive at a goal.&lt;/p&gt;

&lt;h3 id="example"&gt;Example&lt;/h3&gt;

&lt;p&gt;Let us do that for an eCommerce project. Assume the roadmap contains &lt;strong&gt;Introduce Social Sharing&lt;/strong&gt; and let’s do a 5 Whys for the same:&lt;/p&gt;

&lt;p&gt;Q: “Why Social Sharing?”&lt;/p&gt;

&lt;p&gt;A: “So that they can share their transactions with their friends in Twitter or Facebook”&lt;/p&gt;

&lt;p&gt;Q: “Why Should they share with friends?”&lt;/p&gt;

&lt;p&gt;A: “So that more people visit  the site”&lt;/p&gt;

&lt;p&gt;Q: “Why more people should come to the site?”&lt;/p&gt;

&lt;p&gt;A: “To buy more products”&lt;/p&gt;

&lt;p&gt;Q: “Why?”&lt;/p&gt;

&lt;p&gt;A: “To increase the transaction volume”&lt;/p&gt;

&lt;p&gt;Q: “Oh ok, so the goal is to increase the transaction volume. What should be the next immediate target? “&lt;/p&gt;

&lt;p&gt;A: “Immediate target should be to reach out to 1 M transaction within the next 3 months.”&lt;/p&gt;

&lt;p&gt;Once you find out the goal [Increase the transaction volume], we need to identify the milestone [ 1M transactions within next 3 months]  and that becomes the center of the Impact map.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/ImpactMap12.png" alt="ImpactMap1" /&gt;&lt;/p&gt;

&lt;h3 id="getting-it-right"&gt;Getting it Right&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/SMART_criteria"&gt;Good goals need to be SMART&lt;/a&gt;i.e. &lt;strong&gt;S&lt;/strong&gt;pecific, &lt;strong&gt;M&lt;/strong&gt;easurable, &lt;strong&gt;A&lt;/strong&gt;chievable, &lt;strong&gt;R&lt;/strong&gt;ealistic and Timely. Explain why it's valuable instead of placing it around the features or scope.&lt;/p&gt;

&lt;h2 id="who"&gt;Who?&lt;/h2&gt;

&lt;p&gt;The “who” is the first level of Impact Map, these are the actors who can influence the product.&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://en.wikipedia.org/wiki/Gerald_Weinberg"&gt;Gerald Weinberg&lt;/a&gt;,an American computer scientist, author and teacher of the psychology and anthropology of computer software development,. &lt;/p&gt;

&lt;p&gt;And for us to deliver value, we need to understand who they are and what kind of value or outcome they are looking from the product. We also need to consider others whose decisions can influence the success of the product.&lt;/p&gt;

&lt;p&gt;You should ask the below questions to identify the actors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Who can produce the desired effect?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who can obstruct it?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who are consumers of the product?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who will be impacted with it?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="example-1"&gt;Example&lt;/h3&gt;

&lt;p&gt;Let’s look at it from the perspective of our product i.e. eCommerce product:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Shoppers&lt;/strong&gt; who buy products&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Product Vendors&lt;/strong&gt; whose products get sold&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Payment Gateway Provider(s)&lt;/strong&gt; whose services will be used for the payment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Support Personnel&lt;/strong&gt; who handle the shoppers’ queries&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Admin Personnel&lt;/strong&gt;, who manages the catalogue&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/ImpactMap22.png" alt="Impact Map 2" /&gt;&lt;/p&gt;

&lt;h3 id="getting-it-right-1"&gt;Getting it Right&lt;/h3&gt;

&lt;p&gt;Rather than the generic term “users”, it is recommended to identify&lt;a href="https://en.wikipedia.org/wiki/Persona_(user_experience)"&gt;Personas&lt;/a&gt;for each of the actors [with their demographics such as name, job title, age]. This should help everyone in the team to empathise with the actors.&lt;/p&gt;

&lt;h2 id="how"&gt;How?&lt;/h2&gt;

&lt;p&gt;The second level of the Impact Map is to identify the impact that we are going to create on the users i.e what changes are we looking at the actors’ behavior. As&lt;a href="https://hbr.org/2002/01/turn-customer-input-into-innovation"&gt;Anthony W. Ulwick mentioned&lt;/a&gt;,&lt;strong&gt;success delivery of any product or service is to understand what customers want instead of delivering what customers ask for&lt;/strong&gt;. Every impact should result in behavior change of the users.&lt;/p&gt;

&lt;p&gt;Some of the questions that need to be answered to understand the impact are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;How should the goal change the actors’ behavior?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can actors’ help us in achieving the goal?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can actors’ prevent us from achieving the goal?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="example-2"&gt;Example&lt;/h3&gt;

&lt;p&gt;What kind of impact should be provided to achieve the goal 1 M transactions? How can the actors help us or prevent us from achieving the same?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Improved product discovery&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Allow the Vendors to add the products without help from Admin Staff&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Inviting Friends&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;90% of payments being successful&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All support tickets closed in 24 hours&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/ImpactMap32-1024x493.png" alt="Impact Map 3" /&gt;&lt;/p&gt;

&lt;h3 id="getting-it-right-2"&gt;Getting it Right&lt;/h3&gt;

&lt;p&gt;Impacts are not product features. Focus on the &lt;strong&gt;activities&lt;/strong&gt; rather than the product ideas. Focus on the actual behavior change, highlight how it’s different than what they are doing right now. Once you identify the first impact for an actor, think about what else they could do. This would help us to plan and prioritise better.&lt;/p&gt;

&lt;p&gt;Consider both negative or hindering impacts along with the positive ones.&lt;/p&gt;

&lt;h2 id="what"&gt;What?&lt;/h2&gt;

&lt;p&gt;This is the last level of Impact Mapping. The question to be asked in this section is &lt;strong&gt;“What can be done to bring in the impact we are looking for?”&lt;/strong&gt; These are the &lt;strong&gt;deliverables&lt;/strong&gt;, the software features and organisational activities. An impact map puts these deliverables in the context of the impacts that the team is supposed to support. With this clear hierarchy, the team can plan and prioritise deliverables, by grouping the related deliverables and avoid investing in less important ones.&lt;/p&gt;

&lt;p&gt;This section concentrates on the deliverables or features which will create the desired impact on the actors. After identifying the deliverables, the team prioritises them to fit in into the timeline. This way Impact Map helps the team to slice the goals into smaller independent chunks so that the value can be delivered faster in smaller iterations.&lt;/p&gt;

&lt;h3 id="examples"&gt;Examples&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Improve the search algorithm&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Simple and intuitive search UI&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provide options for Social sharing&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Admin Console for Vendors to manage products&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Move to a reliable Payment Gateway, to improve the user experience&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Facebook Ads or Google Ads for branding&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Better alerting mechanisms for failed payments&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/ImpactMap42-1024x431.png" alt="ImpactMap4" /&gt;&lt;/p&gt;

&lt;h3 id="getting-it-right-3"&gt;Getting it Right&lt;/h3&gt;

&lt;p&gt;This is the least important part of the impact map, so don’t try to get it right, instead, refine iteratively as you deliver. At times some impacts can be achieved without building software, eg: investing in marketing or branding too can help adding more users into the system without building many features.&lt;/p&gt;

&lt;p&gt;“Never aim to implement the whole map, instead find the shortest path through the map to the goal.” - &lt;a href="http://impactmapping.org/book"&gt;Gojko Adzic&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="earn-or-learn"&gt;Earn or Learn&lt;/h2&gt;

&lt;p&gt;One key thing about Impact Mapping is the concept of “Earn or Learn” i.e. whether the goal is to increase revenue or is to learn about the market. This is very important to keep in mind while answering “Why” of Impact Map. It is recommended to keep the duration short if the goal is “learn”, to avoid investing a lot of money and effort. Ideal experiments can be for a few days to few weeks, and the Lean Startup way of “Build Measure Learn” is highly recommended for “learning” faster.&lt;/p&gt;

&lt;p&gt;It is an illusion to assume that our deliverables are perfect and will give us our results that we expected. Have objectively measurable metrics for every business goal and look at it on a very frequent basis [daily and weekly] during the entire duration of the goal. With Impact Map conveying the goals clearly, it helps to bring the team back to track and also to a great extent avoid the trap of just sticking to the plan or implementing features randomly.&lt;/p&gt;

&lt;h2 id="mind-mapping-tools"&gt;Mind mapping tools&lt;/h2&gt;

&lt;p&gt;There are quite a few online mind mapping tools that are available. Some tools I would recommend are &lt;a href="https://www.mindmup.com/"&gt;MindMup&lt;/a&gt;, &lt;a href="https://coggle.it/"&gt;Coggle.It&lt;/a&gt;, &lt;a href="https://www.mindmeister.com/"&gt;MindMeister&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A note on &lt;a href="https://www.mindmup.com/"&gt;MindMup&lt;/a&gt;, it’s a tool designed by &lt;a href="https://gojko.net/"&gt;Gojko Adzic&lt;/a&gt; himself for creating the Impact Maps.&lt;/p&gt;

&lt;h1 id="conclusion"&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;If you closely look at Impact Mapping, it is based on the concept of “Asking the right questions to identify the right problems”, which is well aligned with &lt;a href="https://www.lean.org/shook/DisplayObject.cfm?o=1447"&gt;Lean Management&lt;/a&gt;. This helps for embracing the Lean startup way of &lt;a href="http://steveblank.com/2015/05/06/build-measure-learn-throw-things-against-the-wall-and-see-if-they-work/"&gt;Build-Measure-Learn&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/PDCA"&gt;Plan-Do-Check-Act Cycle&lt;/a&gt;[also known as PDCA cycle or Deming Cycle] for delivering software.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://2016.agileindia.org/images/badges/AgileIndia2016_Presenting.png" alt="Presenting @ AgileIndia" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A Noob's Walkthrough of a re-frame Application</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/02/noobs-walkthrough-re-frame-app/"/>
    <id>http://www.multunus.com/blog/2016/02/noobs-walkthrough-re-frame-app/</id>
    <published>2016-02-05T17:43:06+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Are you keen on learning how to build next-gen apps using
&lt;a href="https://github.com/Day8/re-frame"&gt;re-frame&lt;/a&gt;? Are you also the type of person that learns best by observing a fully functional prototype purring on the side? Look no further! You have arrived at your destination. Well, you've probably arrived at the first step…&lt;/p&gt;

&lt;h2 id="so-what-exactly-is-re-frame"&gt;So what exactly is re-frame?&lt;/h2&gt;

&lt;p&gt;re-frame is a very simple but expressive library for writing single-page applications (SPAs) in
&lt;a href="https://github.com/clojure/clojurescript"&gt;Clojurescript&lt;/a&gt; using
&lt;a href="http://reagent-project.github.io/"&gt;Reagent&lt;/a&gt;. Why re-frame, you ask. Because Clojurescriiiipt and Reaaaaaact!!! No really, when functional programming meets reactive programming, it's a new world of possibilities. You'll soon see why. I really recommend going through the brilliant
&lt;a href="https://github.com/Day8/re-frame/blob/master/README.md"&gt;readme&lt;/a&gt; that has been put together for the re-frame repo once you're comfortable with the basic aspects that are explained here.&lt;/p&gt;

&lt;p&gt;This walkthrough is an attempt at simplifying as much as possible the working of a re-frame application. It does not delve into the depths of how re-frame works, but gives you enough information to take that dive by the end. Of course it is necessary that you be familiar with Clojurescript and Reagent (and hence
&lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; - duh!). While you need not have written any applications using either, you should at the least know the basic syntax of both.&lt;/p&gt;

&lt;p&gt;Well then, assuming that's in order, let's jump in!&lt;/p&gt;

&lt;h2 id="and-what-are-we-doing-today"&gt;And what are we doing today?&lt;/h2&gt;

&lt;p&gt;This is a walkthrough and so we need something to, you know, walk through. I thought we could build something together, but
&lt;a href="https://github.com/tacticiankerala"&gt;Sreenath&lt;/a&gt; has built a
&lt;a href="http://tacticiankerala.github.io/re-frame-sample-app/resources/public/index.html"&gt;nice little app&lt;/a&gt; that we can use. Go on, have a look at it. Use the app and see what it does.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/screenshot-2.png" alt="re-frame-sample-app-screenshot" /&gt;&lt;/p&gt;

&lt;p&gt;You would probably also be interested in going through
&lt;a href="https://github.com/tacticiankerala/re-frame-sample-app"&gt;the codebase&lt;/a&gt;. If you're keen on getting the app running locally, the readme in the repo section explains how to do so.&lt;/p&gt;

&lt;p&gt;Now, we're going to see how data and control flows through a re-frame app through this example.&lt;/p&gt;

&lt;h2 id="the-bare-necessities"&gt;The Bare Necessities&lt;/h2&gt;

&lt;p&gt;No, this is not a sing-along of The Jungle Book!&lt;/p&gt;

&lt;p&gt;Let's start by having a look at the core constituents of every re-frame app:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Router:&lt;/strong&gt;
 Our app needs to be capable of redirecting the various events triggered by a user to the right places. We'll see soon where and how these events are sent and who processes them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Data store:&lt;/strong&gt;
 Every app out there is in charge of manipulating and storing data. And since we're talking about a React app, we want a reactive data store - one that tells us when there are changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Views:&lt;/strong&gt;
 This is where we add the visual components of our app. I'm talking of course about the Reagent components.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Handlers:&lt;/strong&gt;
 We need agents in the field to manage the events that occur on the DOM. Once an event occurs, it gets dispatched to the handler, which then takes some action. But for this to happen, we need to register the events against their handlers in the router (we'll get there).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Subscriptions:&lt;/strong&gt;
 Once a handler does its thing, there are likely to be changes in the data store. A reactive system is expected to update its view automatically when this happens. We'll see how this happens.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So at a high level, here's how it rolls.
View components get rendered onto the DOM that the user can interact with. These interactions trigger
events which are dispatched to
handlers. The handlers in turn usually end up mutating
data in the data store causing components that have
subscribed to those data entries to trigger updation of the DOM. And the cycle repeats. Piece of cake, ain't it?&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/www.multunus.com/wp-content/uploads/2016/02/img1.png" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;h2 id="the-directory-structure"&gt;The Directory Structure&lt;/h2&gt;

&lt;p&gt;Before diving into further details, there's one more thing we need to know. There are two main sources of code to be aware of. One comprises the Clojurescript files that we'll be writing to power the application logic behind our SPA. These files are located in &lt;code&gt;app_root/src/cljs/app_name/&lt;/code&gt;. In our example, it becomes &lt;code&gt;re-frame-sample-app/src/cljs/github_profile/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The second is the static assets such as styles and the HTML template files. These are located in &lt;code&gt;app_root/resources/public/&lt;/code&gt;. You should check out what is available in these folders. You'll notice that there's a folder containing Javascript in the second folder. This is where the JS files generated after compiling our Clojurescript code are stored.&lt;/p&gt;

&lt;h2 id="where-it-all-starts"&gt;Where It All Starts&lt;/h2&gt;

&lt;p&gt;Now, to set things in motion, we need a root page to be displayed in our app. This is where every user lands the first time. This stuff is coded in the &lt;code&gt;core.cljs&lt;/code&gt; file. If you look at it, you'll find the following block of code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defn ^:export init []
  (routes/app-routes)
  (re-frame/dispatch-sync [:initialize-db])
  (mount-root))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let's ignore how we got to this point for the time being. What matters more is that we're here and now we want to know what's going to happen. The first two lines initialize the router and data store (don't worry about these, you'll get them shortly). Our focal point at the moment is the last line of this method, which invokes a method called
mount-root:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defn mount-root []
  (reagent/render [views/main-panel]
          (.getElementById js/document "app")))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This method goes through the DOM hunting for an element with the id app. If you look at the index.html file in the static source directory mentioned above, you'll find a
div with this id. Once it finds this element, it renders what we're calling the main panel.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img2.png" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;h2 id="our-first-view"&gt;Our First View&lt;/h2&gt;

&lt;p&gt;We've now asked for a render of the main panel, which is essentially a Reagent component. In our views.cljs file, this can be found in the method
main-panel:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defn main-panel []
  (let [active-panel (re-frame/subscribe [:active-panel])]
    (fn []
      [:div
      [loading-throbber]
      [user-name-and-avatar]
      (panels @active-panel)
      ])))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This seems quite straightforward, doesn't it? Well, let's go through it line by line. The first line of the method is a subscription. Yes, the same one we were talking about earlier. What that line does is that it triggers a 'listener' for changes to an entry in the data store called &lt;code&gt;active-panel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img3.png" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;p&gt;But where's the data store? If you noticed, there's a file called &lt;code&gt;db.cljs&lt;/code&gt;. This however does not contain an entry called &lt;code&gt;active-panel&lt;/code&gt;. Wait, so where did that now come from? Jeez!&lt;/p&gt;

&lt;p&gt;Remember that we're still at the root view of our application. The root path is at the &lt;code&gt;/&lt;/code&gt; location. Just like any other framework, when you visit a particular path/route, there's a couple of things that need to happen. Have a look at the routes in &lt;code&gt;routes.cljs&lt;/code&gt;. You'll find the following block of code, which does exactly that:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defroute "/" []
  (re-frame/dispatch [:set-active-panel :home-panel]))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Something ring a bell? When we visit this path, an event is dispatched. Events are simply vectors that hold nothing but pure data. In our case, the event has information about the name of the event &lt;code&gt;:set-active-panel&lt;/code&gt; and a parameter to support the event, &lt;code&gt;:home-panel&lt;/code&gt;. So now what?&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img5.png?w=1133" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;p&gt;At the beginning, we briefly touched upon the fact that events need to be registered against their handlers in the router. When an event occurs, it reaches the router first. The router then checks against the registered handlers and conveys the event to the matching handlers. One thing to note is that there need not be a one-to-one mapping between events and handlers. Handler registration in our example is done in &lt;code&gt;handlers.cljs&lt;/code&gt;. The following snippet is from that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(re-frame/register-handler
:set-active-panel
(fn [db [_ active-panel]]
  (assoc db :active-panel active-panel)))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This dictates that once the event &lt;code&gt;:set-active-panel&lt;/code&gt; is dispatched, set the &lt;code&gt;:active-panel&lt;/code&gt; entry in the data store to the parameter that got sent in with the event. In our case, the parameter is &lt;code&gt;:home-panel&lt;/code&gt;. Hence a new entry gets added in the data store called active-panel with the value &lt;code&gt;:home-panel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img6.png?w=1125" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;p&gt;Since the initialization is a one-time activity, let's leave it out from our flowchart and simplify the rest to:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img7.png?w=845" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;p&gt;Rewinding to our original &lt;code&gt;main-panel&lt;/code&gt; method, you'll see that the subscription we have queries this very data attribute (&lt;code&gt;active-panel&lt;/code&gt;) in the data store. Visiting the root path caused a change around this attribute. The subscriber is a Reagent component. It picks up the change, resulting in the triggering of the process to update the DOM.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/02/img8.png?w=841" alt="re-frame-flowchart" /&gt;&lt;/p&gt;

&lt;p&gt;In the same &lt;code&gt;main-panel&lt;/code&gt; method, notice the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(panels @active-panel)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just above that method, there is another line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defmethod panels :home-panel [] [home-panel])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Needless to say, the method &lt;code&gt;panels&lt;/code&gt; is invoked with the &lt;code&gt;:home-panel&lt;/code&gt; argument resulting in the calling of the method &lt;code&gt;home-panel&lt;/code&gt;, which can be found in the same file. This returns a Reagent component responsible for rendering the elements we see in the root page. Note that this component is constituted by two other components, namely &lt;code&gt;github-id-input&lt;/code&gt; and &lt;code&gt;user-repos-list&lt;/code&gt;, both of which are now in the DOM.&lt;/p&gt;

&lt;p&gt;Phew! So let's have a recap of what happened. The user visited the root path, resulting in the setting of the data attribute &lt;code&gt;active-panel&lt;/code&gt; to
:home-panel in the data store. The
mount-root method invoked at the end of the initialization triggers the rendering of the main panel in the DOM. The main panel component is subscribed to the
active-panel data entry and hence ends up rendering the
home-panel component.&lt;/p&gt;

&lt;h2 id="click-me"&gt;Click Me!&lt;/h2&gt;

&lt;p&gt;So far, we've seen how a user action of navigating to the root path of a re-frame app is handled all the way until the DOM is updated. Now let's ramp things up a bit and have a look at what happens when a user interaction like a click occurs.&lt;/p&gt;

&lt;p&gt;You must have already tried using the app and noticed that it displays a list of Github repositories that a Github user has. So how exactly does that work? Well, to be honest, it's quite similar to what we've already seen.&lt;/p&gt;

&lt;p&gt;You must have noticed that the div containing the elements to accept a Github username and the button to list the repos for that user was rendered by the component
&lt;code&gt;github-id-input&lt;/code&gt;. There are a couple of things going on in there, but our main interest is with the button and how a click is handled. Check out the following lines in that method:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;on-click (fn [_]
  (when-not (empty? @github-id)
    (re-frame/dispatch [:set-github-id @github-id])
    (reset! github-id "")))]
...
[:button.btn.btn-default {:type "button"
                  :on-click #(when-not @loading? (on-click %))}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While there are other important parts in that method, these excerpts are the primary drivers of the click. As you can see, once a Github id is entered and the button clicked, there is an &lt;code&gt;:on-click&lt;/code&gt; handler waiting to pick up the event. This calls the method &lt;code&gt;on-click&lt;/code&gt; which dispatches an event named &lt;code&gt;:set-github-id&lt;/code&gt; with the parameter &lt;code&gt;@github-id&lt;/code&gt;. That parameter is set when a change is made to the input field (you can find the logic for this in the same method).&lt;/p&gt;

&lt;p&gt;From here, it's the same drill. The event that gets dispatched is handled by the registered handler. It triggers the process to fetch the entered user's Github profile and list of repos, the end result being that the data store gets updated with the newly fetched details, causing subscription handlers to trigger updation of the DOM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Activity For You:&lt;/strong&gt;
 Try mapping out the process that happens when this dispatched event generated on click reaches the corresponding handler and how the DOM gets updated at the end of it.&lt;/p&gt;

&lt;h2 id="lets-wrap-it-up"&gt;Let's Wrap It Up&lt;/h2&gt;

&lt;p&gt;We've seen the various constituents of a re-frame app. We've also seen how these units interact with each other to respond to user events and update the DOM. This is of course a very simplified version of things. You should definitely go and read more on the readme on the re-frame Github page. Equipped with the information you have now, you should find it quite easy to understand all that is explained over there.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please write them in the section below.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our 20% investment time - the background story</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/01/20-investment-time-background-story/"/>
    <id>http://www.multunus.com/blog/2016/01/20-investment-time-background-story/</id>
    <published>2016-01-22T00:30:52+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the things that Google became famous for in its earlier days, was their policy of 20% investment time. One day in a week, you could choose the project of your choice and work on it.&lt;/p&gt;

&lt;p&gt;You would still be held responsible for that and would need to demonstrate progress to your colleagues. But the fact that 
had a choice to work on whatever you felt would be most useful for Google 
 piqued your interest was a big deal.&lt;/p&gt;

&lt;p&gt;GMail, News and AdSense are famous products that were born out of that 20% time.&lt;/p&gt;

&lt;p&gt;Multiple other companies have since followed suit with the objective of accelerating innovation at the workplace.&lt;/p&gt;

&lt;p&gt;We did too. Last year. 7 years after we started Multunus, back in 2008.&lt;/p&gt;

&lt;p&gt;The rest of this post talks about why we did it, how we executed the transition to our “4 day workweek” and what we expect from this transition. &lt;/p&gt;

&lt;h3 id="why-we-chose-to-make-less-money"&gt;Why we chose to make less money&lt;/h3&gt;

&lt;p&gt;Our folks are a smart bunch. They know how to keep themselves on top of things - with regular skill practice and research.&lt;/p&gt;

&lt;p&gt;Considering they already know how to keep their axes sharp, why was it needed for us to invest additional time at the company level?&lt;/p&gt;

&lt;p&gt;We’re in the services business. Which means time is money. Literally. We bill our customers a standard 40 hours per week. Introducing a 20% investment time would mean scaling back our revenues by the same number.&lt;/p&gt;

&lt;p&gt;In summary, our situation:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Our team’s skills were pretty good and they were getting better, because of self-investment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our profits would decrease significantly if we decreased our billing hours&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, why did we do it?&lt;/p&gt;

&lt;p&gt;While practicing your skills independently is great, honing your craft with your colleagues at work is better. Here’s why:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Learning together is a much faster process. You’re surrounded by a team of people with varied levels of experience and skills. That’s a fantastic opportunity to discover, share and learn new things faster, than just by yourself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Craftsmanship. That’s one of our core values here at Multunus. Building a great company culture requires regular investment in the values that we believe in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We want the highest levels of engagement in our team - so we can deliver the best value to our customers. For this to happen, our team needs to be happy and deeply satisfied with their work.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the 20% investment time is what we’ve chosen to help us hone our craft of building software product, faster and together as a company.&lt;/p&gt;

&lt;p&gt;Once this key decision was made, 
&lt;a href="http://www.multunus.com/blog/2016/01/relinquishing-control-to-our-council-a-radical-experiment/"&gt;the council&lt;/a&gt; came up with a plan to roll out the 20% time across the company, in phases.&lt;/p&gt;

&lt;h3 id="the-most-difficult-challenge---telling-our-clients"&gt;The most difficult challenge - telling our clients&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;“We’d like to take a day off from billable work.”*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Client:* “For this week?”*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;“No, forever. One day each week.”*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Client:* [Silence]*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next step was to tell our customers. While we’d made the internal decision to reduce our billable time by 20%, this was not going to be possible without a nod from our clients.&lt;/p&gt;

&lt;p&gt;A possible argument in our favor: * Since we would only be charging for hours billed, and we’re not "employed" by our clients, this was a fair ask. Right?*&lt;/p&gt;

&lt;p&gt;Nope.&lt;/p&gt;

&lt;p&gt;It’s more complicated than that. The kind of work that we undertake with our clients is almost always critical to their business. For some of our clients, we’re their only dev team. For others, we’re their augmented team - working very closely with them on their core products. For still others, we interface with our client’s customers and service them directly representing our client.&lt;/p&gt;

&lt;p&gt;So, what did we do?&lt;/p&gt;

&lt;p&gt;Our council worked with each team to help them negotiate with their respective clients. The key message that each team conveyed was this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;That this was something that we were very serious across the entire company&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;That our clients’ businesses would not be negatively impacted in any way&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;It’s hard to back this up with data, but we feel confident that a motivated engaged team can achieve more in 4 days, than what a less engaged team can achieve in 5 or 6.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="is-it-working"&gt;Is it working?&lt;/h3&gt;

&lt;p&gt;Certainly seems like it. Here’s what’s happened since we switched to this system:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Successfully deployed &lt;a href="http://multunus.github.io/onemdm-server/"&gt;OneMDM&lt;/a&gt;[our open source Mobile Device Management solution] in production for a rural health project in the Sabarkantha district of Gujarat.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added React and React Native to our Javascript tech stack. The icing on the cake? We’re now deploying production code in React for a well funded startup&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One of our teams chose to invest in building their Machine Learning skills. From the looks of it, the day is not far before we start doing serious ML work for our customers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We launched the MVP of a new product - that we’re now dogfooding. This is picking up enough steam to eventually warrant some serious dev investment in the coming months.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We created more content on our blog in the last few months than we’d done in a very long time before that.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get the picture.&lt;/p&gt;

&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;2015 was a year of bold experiments. Here’s a few of them:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2015/09/our-autonomous-salary-system-the-background-story-part-1/"&gt;The launch of our Autonomous Salary system&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.multunus.com/blog/2016/01/relinquishing-control-to-our-council-a-radical-experiment/"&gt;Getting our first Council democratically elected&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The 20% investment time&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Self-determined rate cards [More on this in the coming weeks]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://rework.withgoogle.com/guides/set-goals-with-okrs/steps/understand-moonshots-vs-roofshots/"&gt;Moonshot OKR’s&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The book&lt;a href="http://www.amazon.com/Drive-Surprising-Truth-About-Motivates/dp/1594484805"&gt;“Drive” by Daniel Pink&lt;/a&gt;talks about 3 key aspects of an engaged team:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Autonomy&lt;/strong&gt;:&lt;a href="https://www.youtube.com/watch?v=ehmNmI_wfNA"&gt;Going beyond empowerment&lt;/a&gt; and trusting our team to do the right thing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Mastery&lt;/strong&gt;: Continually investing in sharpening our axes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Our goal is to be the happiest workplace on the planet. When we're working on creating something that endures us, that brings in the sense of deep purpose along with it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Are we engaged yet? What do you think? :) Tell us in the comments.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Relinquishing control to our Council - A radical experiment</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/01/relinquishing-control-to-our-council-a-radical-experiment/"/>
    <id>http://www.multunus.com/blog/2016/01/relinquishing-control-to-our-council-a-radical-experiment/</id>
    <published>2016-01-22T00:24:19+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;It’s true. Our Council members wield significant power and influence. Revenue targets, profit margins, important company policies - they make decisions in all of those areas and more.&lt;/p&gt;

&lt;p&gt;But who are these people? If you’re imagining a bunch of grey haired, suited and serious folks sitting around a large mahogany table, here's some stats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The average age of our current council members? 26.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The youngest member on our current  council? He’s just 24.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do they have business degrees from top universities? Far from it. They’re programmers, product managers and business analysts.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How did they get the job, you ask? They got elected. Democratically. There’s a fixed number of council seats. There’s a nomination and voting process - not very different from how you’d expect a democratic system to function.&lt;/p&gt;

&lt;p&gt;The eligibility criteria to get nominated? 6 months of experience at Multunus. That’s it. Nothing more, nothing less.&lt;/p&gt;

&lt;p&gt;If you’re rolling your eyes in disbelief, read on. There’s a method to the madness.&lt;/p&gt;

&lt;h3 id="the-fundamentals"&gt;The fundamentals&lt;/h3&gt;

&lt;p&gt;A key question that every company with more than 10-15 people needs to answer is this:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;What kind of organization structure makes the most amount of sense for us? A hierarchical one? Or a flat one?*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;This question cannot be answered without sufficient context. The following question needs to be answered first:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;What type of culture will ensure the most amount of success for our business?*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;And to answer the above question, the following question needs to be answered before that:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;What type of business are we in? What does success mean for us?*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;So let’s start from the last question and work upwards from there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What type of business are we in? What does success mean for us?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’re in the software services business. We build software products for our customers, augment their existing tech teams and also provide technology and design consulting services.&lt;/p&gt;

&lt;p&gt;In that context, here’s what success means for us:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;A company where everyone is a CxO is his or her role. Utopian? Maybe. But we want our customers to feel the same level of professionalism across the board whomever they interact with on our team. That kind of experience is worth striving for.*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;[ When I say CxO, I mean anyone having a very high level of skill and an equivalent level of engagement in our organization.a]*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;What type of culture will ensure the most amount of success for our business?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Needless to say, our culture needs to be be aligned with and support our vision well. If everyone is to be a CxO, a key attribute that we’d need to consider would be Autonomy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: Autonomy is * not*  Empowerment. If we’re drawing the boundaries of a playground and inserting our team members as players with those constraints in place, that’s empowerment. Its when we remove those constraints, look away and trust our team to do the right thing, that we become truly autonomous.&lt;/p&gt;

&lt;p&gt;The next logical question then is this: What functions of our business need to be autonomous? Just those parts that are most relevant to the day to day work of each team member? Or all other functions of the company as well? For example should we include Finance, Marketing, Operations and Sales, as well under everyone’s purview?&lt;/p&gt;

&lt;p&gt;If we applied logical reasoning here, we’d probably come to the conclusion that these are functions that require deep experience in their own right, to make critical decisions. And it’s best to leave it to the “professionals”.&lt;/p&gt;

&lt;p&gt;While that’s a reasonable conclusion for most companies, it’s not aligned with our vision of everyone playing the role of a CxO. For us to make that vision a reality, we need to provide as many avenues as possible for our team to engage in our business. No holds barred.&lt;/p&gt;

&lt;p&gt;But how do we make that happen? How can we have people with little or no experience in these functions make important decisions, without compromising the sustainability of our business?&lt;/p&gt;

&lt;p&gt;That finally brings us back to the question we started this section with:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What kind of organization structure makes the most amount of sense for us? A hierarchical one? Or a flat one?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Those are the two obvious choices available these days.&lt;/p&gt;

&lt;p&gt;A strictwith its command and control style of functioning - leaves almost no room for experimentation and failure, thereby leading to little engagement in the business as well.&lt;/p&gt;

&lt;p&gt;Aat the other end of the spectrum seems, on the surface, like an ideal solution for creating an autonomous workplace. But this 
&lt;a href="https://open.buffer.com/self-management-hierarchy/"&gt;doesn't work well in practice&lt;/a&gt;. A lack of rules or guidelines combined with little or no delineation of responsibilities could result in risking business sustainability.&lt;/p&gt;

&lt;p&gt;What if we could meet somewhere in the middle? Here’s the structure that we currently have at Multunus:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/heads_council_everyone_circles-300x212.jpg" alt="Heads Council Everyone Circles" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Heads&lt;/strong&gt;: This is the founders of the company along with the Business Unit heads. These folks have the most amount of business experience - and act as mentors for the Council.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Council&lt;/strong&gt;: The council members are democratically nominated and elected - through a company-wide transparent process. Anyone who has worked at Multunus for 6 months or more is eligible to be nominated. The election process happens twice a year - and new members are elected into the council each time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Everyone&lt;/strong&gt;:The rest of the team. Any decisions that need everyone to be involved (beyond the Heads and the Council) are discussed on Trello - on our “Open Board”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="how-well-is-it-working"&gt;How well is it working?&lt;/h3&gt;

&lt;p&gt;Here’s some of the key decisions that the council (and the rest of the team) has taken so far:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The “formula”&lt;/strong&gt; for rolling out our &lt;a href="http://www.multunus.com/blog/2016/01/20-investment-time-background-story/"&gt;20% investment time&lt;/a&gt;. The council then worked with each of our teams to help them negotiate with customers to accelerate the switch to the new system.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Revenue targets and margins&lt;/strong&gt;: This was a key input for determining the rollout of the 20% investment time. The process we followed was this:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;The Heads group laid out all of the numbers in front of the council and walked them through it&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;A simple framework was then created to help determine the best option that we could go with - that would allow for us to roll out the investment time without pushing us into the red.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Billing Rates&lt;/strong&gt;: Our current rate card is the output of a collaborative exercise between the Heads, the Council members and everyone else on our team. This allows everyone on our team to both have a say in terms of what expectations we want to set with our customers, while also being responsible for meeting (ideally exceeding) those expectations.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those are some discreet examples of important decisions made by the council.&lt;/p&gt;

&lt;p&gt;But here’s a magical moment that happened a couple of weeks after we rolled out the council  system: One of our newest employees (a fresh grad barely out of our on-boarding program) had an open debate with the founder (yours truly) in a public forum. I later commended him on the courage he’d shown in openly voicing his thoughts.&lt;/p&gt;

&lt;p&gt;His response:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;“I feel feel like a founder too. Which is why I chose to debate with you openly. Isn’t that what autonomy is about?”.*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I couldn’t have said it better, myself. That, in a nutshell, is engagement in the business.&lt;/p&gt;

&lt;h3 id="challenges"&gt;Challenges&lt;/h3&gt;

&lt;p&gt;This experiment is still in its early days and we’re battling some rough waters. Here’s some of them:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Because of the lack of relevant experience in the Council members, there is a need for documenting standards and processes for key decisions to be made in a consistent way. This documentation requires significant effort. We tried to bypass this once: let’s just say, that didn’t go too well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The Heads need to walk a tightrope while providing inputs to the council. While these inputs should help the Council make consistent decisions, any additional interference from the Heads could significantly compromise the autonomy of the council. This has to be mindfully practiced.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A lack of enough delineation of responsibilities among the Council members themselves. This sometimes leads to indecisiveness. We’re still working on finding a solution to this problem.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Relinquishing control is a scary proposition for most founders and executives. But if done carefully, it's worth it. We’ve been pleasantly surprised by the maturity of decisions that our Council has taken so far.&lt;/p&gt;

&lt;p&gt;There is one potential issue though. Of the original founders of the company getting lost in a sea of many other founders and CxO’s.&lt;/p&gt;

&lt;p&gt;Still worth it, we think ;-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Training a fish to climb a tree</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/01/training-a-fish-to-climb-a-tree/"/>
    <id>http://www.multunus.com/blog/2016/01/training-a-fish-to-climb-a-tree/</id>
    <published>2016-01-21T23:11:25+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt; 
&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/Training-a-fish-to-climb-a-tree-e1454337520508.jpg" alt="Alt texat" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Grow upwards, sideways…anyways you want*&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe src="https://docs.google.com/presentation/d/1pZWyygi08Rt5vGiFV5dJMyCB7lkDNwpSc36RL3zoLww/embed?start=true&amp;amp;loop=false&amp;amp;delayms=8000" width="480" height="389" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Designing Fluidly for Multiple Platforms</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2016/01/designing-fluidly-multiple-platforms/"/>
    <id>http://www.multunus.com/blog/2016/01/designing-fluidly-multiple-platforms/</id>
    <published>2016-01-07T00:02:43+05:30</published>
    <updated>2017-09-01T22:19:46+05:30</updated>
    <content type="html">&lt;p&gt;Have you ever run across a situation where you download a new app from the store that looks beautiful but is awkward to use? You can’t seem to find your familiar navigation controls and it takes a while before you figure out what, how and where of a seemingly simple IM application? These are signs of poor app design (in most cases), where user needs, and platform guidelines have not been given as much thought as they deserve.&lt;/p&gt;

&lt;p&gt;Consider the Instagram app.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image04_1.png" alt="Instagram Android" title="Instagram Android" /&gt;&lt;/p&gt;

&lt;p&gt;Instagram Android&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image07.jpg" alt="Instagram iOS" title="Instagram iOS" /&gt;&lt;/p&gt;

&lt;p&gt;Instagram iOS&lt;/p&gt;

&lt;p&gt;These images clearly show the lack of differentiation in the navigation pattern on both the platforms - using a bottom tab bar. Since most android phones have a system navigation at the bottom, having the app navigation at the bottom feels clumsy. Also, people are used to switching between tabs by swiping horizontally on Android.&lt;/p&gt;

&lt;p&gt;Another example could be the Gmail app: both the platforms use side menu for navigation.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image00_1.png" alt="Gmail Android" /&gt;&lt;/p&gt;

&lt;p&gt;Gmail Android&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image03.jpg" alt="Gmail iOS" /&gt;&lt;/p&gt;

&lt;p&gt;Gmail iOS&lt;/p&gt;

&lt;p&gt;Though in compliance with material design, a common iOS user would not be intuitively looking for a ‘hamburger menu icon’. The iOS users are used to navigating ‘Back’ using the top left navigation button.&lt;/p&gt;

&lt;h2 id="why-are-such-designs-becoming-a-common-practice"&gt;Why are such designs becoming a common practice?&lt;/h2&gt;

&lt;p&gt;When a new, multi-platform project is incubated, the tendency is to dive right into code. This is because of urgency from the project stakeholders to ship working software. Getting delayed because of designs feels like a terrible (seemingly shameful too) issue and to avoid it, designers are coaxed to come up with a design which would ‘look good on all the platforms‘.&lt;/p&gt;

&lt;p&gt;The designs may tend to overlook or deviate from general practices and guidelines specified for the platforms in order to make things work as fast as they can and to avoid rework.&lt;/p&gt;

&lt;h3 id="why-may-this-seem-like-a-good-idea"&gt;Why may this seem like a good idea?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Less time spent on designs saves on overall time required&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cheaper than getting platform-specific / platform-oriented designs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consistent branding&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consistency in navigation across platforms&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Retention of users who switch platform&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="why-is-this-a-bad-idea"&gt;Why is this a bad idea?&lt;/h3&gt;

&lt;p&gt;A single design for all platforms has deeper repercussions. What needs to be understood is that having great UX can make a difference between hitting top charts and remaining as yet another application in a long list of similar me-too applications. Tradeoffs being made in initial phases for capturing market or to improve time efficiency are acceptable to a certain limit. A concept of ‘UI/UX design debt’ similar to that of ‘&lt;a href="http://c2.com/cgi/wiki?WardExplainsDebtMetaphor"&gt;technical debt&lt;/a&gt;’ should be introduced, and made sure that the backlog in this area is cleared by think-make-check improvement cycles. Deprioritizing UI/UX impacts not only the app development but also on user engagement, retention, reviews, referrals, etc. The perceived benefits of the common design approach start waning away.&lt;/p&gt;

&lt;p&gt;Let’s analyze this problem from different viewpoints:&lt;/p&gt;

&lt;h3 id="business"&gt;Business&lt;/h3&gt;

&lt;h3 id="how-it-happens"&gt;How it happens&lt;/h3&gt;

&lt;p&gt;Businesses work under constraints of limited time and budget (Development, Design, Marketing), while trying to amplify brand value and targeting an early launch.&lt;/p&gt;

&lt;p&gt;They consider that a product should have consistency across platforms and to reach an audience as diverse as possible, they decide for the app to look the &lt;strong&gt;same&lt;/strong&gt; on all platforms.&lt;/p&gt;

&lt;p&gt;Yes, this is how most businesses have come to think of app usability and branding. Instead of leaving this task to the UI/UX designers, businesses go to designers with the task of creating an app for a single platform. The designers do their jobs well at designing an app for the said platform, say iOS. But the designs are distributed to Android as well as iOS developers.&lt;/p&gt;

&lt;h3 id="how-it-should-be"&gt;How it should be&lt;/h3&gt;

&lt;p&gt;The focus of design (as well as business) should be on creating value and delivering an experience that impacts the user. The real value of your product lies not in visuals but what you offer the end user - be it a social platform, a service or simply an aggregator.&lt;/p&gt;

&lt;p&gt;A very good example I would like to refer here is WhatsApp.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image06_1.png" alt="WhatsApp Android" /&gt;&lt;/p&gt;

&lt;p&gt;WhatsApp Android&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image01_1.jpg" alt="WhatsApp iOS" /&gt;&lt;/p&gt;

&lt;p&gt;WhatsApp iOS&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image05.jpg" alt="WhatsApp Windows" /&gt;&lt;/p&gt;

&lt;p&gt;WhatsApp Windows&lt;/p&gt;

&lt;p&gt;Vastly differing UI, tailored UX and top of charts on all mobile platform stores - how did WhatsApp achieve such a feat? The answer is simple - they offer a service worth user’s time to explore and get used to it. Also, they conform to known guidelines for each specific platform. Certainly, a good recipe for successful user engagement.&lt;/p&gt;

&lt;h3 id="uiux-designs"&gt;UI/UX Designs&lt;/h3&gt;

&lt;h3 id="how-it-happens-1"&gt;How it happens&lt;/h3&gt;

&lt;p&gt;If the decision has already been made at the Business level, there’s not much a designer can do. If not, then things could go pretty wrong here too.&lt;/p&gt;

&lt;p&gt;The aim of designs should be to keep in mind the brand and focus on crafting delightful experiences. But new app designs are required to be built under the constraints of time and cost. Hence, they come up with a design which is ‘acceptable’ on multiple platforms. Just acceptable, not specifically adapted for each platform.&lt;/p&gt;

&lt;p&gt;Also, sometimes new ideas or design experiments may overlook all rational argument.&lt;/p&gt;

&lt;h3 id="how-it-should-be-1"&gt;How it should be&lt;/h3&gt;

&lt;p&gt;At times, the choices are unconscious choices. But a designer &lt;strong&gt;should know&lt;/strong&gt; about the different UI patterns, guidelines and possibilities on several platforms (otherwise you might need to look into your choice of designer :P). Consciously steering away from known baselines does not always signify innovation, it may also be a sign of lousiness. While experimenting with new patterns, the risk involved should be taken into account and communicated to the concerned business team. There is a very thin line between trying to stand out and aiming too high. When you start compromising on other aspects like usability and complicating a simple navigation experience, stop and take a moment to think whether it’s worth the risk.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image02_1.png" alt="Zomato Android" /&gt;&lt;/p&gt;

&lt;p&gt;Zomato Android&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image10.jpg" alt="Zomato iOS" /&gt;&lt;/p&gt;

&lt;p&gt;Zomato iOS&lt;/p&gt;

&lt;p&gt;Zomato app, for instance, used * similar*  but more of a platform oriented UI and platform specific icons. This resulted in similar UI, consistent flow across platforms and great branding. This is the not best or de-facto but is definitely a good lesson to learn.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;At the time of writing, Zomato’s android app shifted to a bottom nav bar and iOS style controls. I as a user get disoriented navigating through app now. Not their best decision in my opinion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id="tech-team"&gt;Tech Team&lt;/h3&gt;

&lt;h3 id="how-it-happens-2"&gt;How it happens&lt;/h3&gt;

&lt;p&gt;The previous decisions might have been made under pressure but technicians are generally not even allowed an opinion in such matters. Generally, a design change in standard components translates to a different technical implementation too. This could be a good chance for developers to learn something new, but we should consider whether the learning would be worth the risk associated with the limited resources (time, the number of developers, etc.) at hand. In the end, will the learnings benefit the project and/or the executor(s) with the existing constraints already in place?&lt;/p&gt;

&lt;p&gt;Limited platforms, like a mobile OS, do not allow much deviation. Deviating from guidelines specified for such platforms require a lot of extra effort and knowledge about combinations of feasible options. For people who are relatively new or uncomfortable with it, one of the possible (and more likely than other) outcomes is bad code. Tradeoffs will have to take place - a big one being making a choice among speed, quality and cost - even when using Lean methods from Agile model. What started out as a bad business decision or an overlooked design aspect, ultimately results in a product with bad code practices or smelly code base behind it. The technical debts of this design approach could be huge. The developers might lose interest in creating the beautiful, user-oriented application it was supposed to be and shift their focus towards just getting it done anyway. Is that how you want your business to be shaped?&lt;/p&gt;

&lt;h3 id="how-it-should-be-2"&gt;How it should be&lt;/h3&gt;

&lt;p&gt;Involving them in the process since the beginning and letting them weigh your decisions against the technical aspects might not seem like a popular or mainstream idea, but it works the best considering the situations above. Also, it lets you have a better control on the time and cost of the technical implementation.&lt;/p&gt;

&lt;h3 id="user"&gt;User&lt;/h3&gt;

&lt;p&gt;This is the segment about which the most hype is created, because, after all, users are the ones who all 3 segments mentioned above target. And say what you may, users are very unpredictable. At times, a user may complain of no creativity in the app, that it simply looks like the design has been copied from other popular apps. Others times, he may complain about not being able to find the options at their usual places. And yet, sometimes he wants it aligned with the design of their system apps so that your app feels like it belongs there.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Oh man, what do you want?*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;The truth is your audience wouldn’t know that either. With new ideas and innovations each day, only the sky feels like the limit (not to Elon Musk, though). But what users do notice is when something feels out of place or out of the regular flow which they are accustomed to. Some of the largest factors affecting a user’s perception are not only gender, age, income, education level, geographic boundaries, the frequency of use, and mood but also very often their familiarity and usage of technology in their day-to-day lives.&lt;/p&gt;

&lt;h2 id="okay-what-do-i-do"&gt;Okay, What Do I Do?&lt;/h2&gt;

&lt;p&gt;The same user who loves your app otherwise may get irritated on a bad day, fumbling through those options and may end up giving a bad rating or becoming a detractor. Designing a product is not just about creating an appealing UI, but also provide a great User Experience. While it is true that there is nothing that will satisfy all users at all times, you may want to set your priority and focus on the larger group - the group bringing you business. But again, this group and its preference cannot be determined without
&lt;a href="http://www.talkingtohumans.com/"&gt;interacting with actual people&lt;/a&gt;. Here are some points to ponder upon:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Ask yourself - why do I need an app with same designs all across?&lt;/strong&gt; You may come up with various answers related to your app’s workflow and the real life problem you are trying to solve. These could be genuine reasons. Consider this screen from Flipboard. It presents a simple article.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image08_1.png" alt="Flipboard Android" /&gt;&lt;/p&gt;

&lt;p&gt;Flipboard Android&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2016/01/image09.jpg" alt="Flipboard iOS" /&gt;&lt;/p&gt;

&lt;p&gt;Flipboard iOS&lt;/p&gt;

&lt;p&gt;This view does not need to leverage any specific, platform-dependent UI or features. The screens look the same and focus on what they provide - readable content. This is a good example of when you would want your app to look the same across platforms. But notice the subtle difference in the icons and placement of content lines - platform specific.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Try to prevent dissonance&lt;/strong&gt; by following * platform guidelines, brand guidelines and preferring popular UI patterns.*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Improve continuously&lt;/strong&gt;.Set up Analytics and A/B testing and gather insights independently for each platform. Conduct Usability Tests to point out usability issues. This results in knowing not just where the problem is, but also what and why it is so.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Consider a website&lt;/strong&gt; (preferably mobile-first but it could also be mobile-specific) instead of an app. Web sites are platform independent and present the same UI across similar platforms. This will end up in saving you on designs, time &amp;amp; costs, project size, etc. But in such case, your software would not be able to leverage the benefits enjoyed by a native app. This should be more of a conscious, well-thought business decision, weighing all possible pros and cons.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="end-note"&gt;End Note&lt;/h2&gt;

&lt;p&gt;It largely depends on your constraints and your target audience - rely on user’s knowledge of the platform as well as the genre of your product. Users are exposed to certain patterns and they gradually become habituated to them. Piggy back on these habits to build a good user experience. Following the guidelines will be worth the effort. It's not about not being an innovator and a disruptor, it's about making people comfortable with what your technology does, making their lives easier. Wasn't it your initial problem statement when you set out on this journey to create a great product?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Layers of Design - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/12/layers-design-part-1/"/>
    <id>http://www.multunus.com/blog/2015/12/layers-design-part-1/</id>
    <published>2015-12-12T02:40:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/tumblr_nbw8zmDkfj1tlwzgvo1_1280.jpg" alt="tumblr_nbw8zmDkfj1tlwzgvo1_1280" /&gt;&lt;/p&gt;

&lt;h3 id="what-is-design"&gt;What is Design?&lt;/h3&gt;

&lt;p&gt;When we hear the term Design, what comes to our mind is perhaps images of beautiful apps, elegant animations and Flat UI trends like the one below:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/flat_ui_design.png" alt="flat_ui_design" /&gt;&lt;/p&gt;

&lt;p&gt;When people say they need a designer on the team, most often they are referring to a Visual Designer. The expectation is that the designer will make the application beautiful and intuitive to use.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We often forget that design is not just what meets the eye, it’s also what doesn't - how it works as a system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Consider this IKEA table for instance.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/ikea_side_table_design-1024x768.jpg" alt="ikea_side_table_design" /&gt;&lt;/p&gt;

&lt;p&gt;It’s a pretty simple table. It has a nice color and suits the surrounding. Seems sturdy, looks like it’s been put together neatly and is well polished. One can appreciate that. But, there is more to it that might not be apparent by looking at a table in isolation.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/ikea_side_table_join.jpg" alt="ikea_side_table_join" /&gt;&lt;/p&gt;

&lt;p&gt;Since it’s flat on the sides, you can easily join multiple tables to make a larger one.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/ikea_side_table_stack.jpg" alt="ikea_side_table_stack" /&gt;&lt;/p&gt;

&lt;p&gt;If you have multiple sizes, you can stack them inside one another and save space when not in use.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/ikea_flat_packaging.jpg" alt="ikea_flat_packaging" /&gt;&lt;/p&gt;

&lt;p&gt;The furnitures are packed in flat packs which allows them to save space during transport and storage. This lets IKEA cut down on a lot fuel and real estate needed.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/ikea_effect.jpg" alt="ikea_effect" /&gt;&lt;/p&gt;

&lt;p&gt;This one is interesting. Studies show that “consumers place a disproportionately high value on products they partially created.” That means, by offloading the work of putting together the table to the end customer, IKEA actually made it more loveable! It’s called the 
&lt;a href="https://en.wikipedia.org/wiki/IKEA_effect"&gt;IKEA effect&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, all of this is * by design* .&lt;/p&gt;

&lt;h3 id="what-does-design-really-mean"&gt;What does design &lt;strong&gt;&lt;em&gt;really&lt;/em&gt;&lt;/strong&gt; mean?&lt;/h3&gt;

&lt;p&gt;If you look up design in a dictionary, the definition you’ll find is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;do or plan (something) with a specific purpose in mind.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that definition, everyone is a designer. If you’ve planned a date or even planned your daily routine, you are a designer! The activity of planning by looking at the constraints, considering the way the world and society works. Based on the rules of physics and nature, we come up with something that might take us closer to our goal in a simple and efficient way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, let’s rephrase :&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Design is the act of planning a simple and efficient solution to get a desired outcome, considering the variables.&lt;/p&gt;

&lt;h3 id="if-everyone-is-a-designer-why-hire-one"&gt;If everyone is a designer, why hire one?&lt;/h3&gt;

&lt;p&gt;I can take decent photos on Instagram. But that does not mean you would hire me as your wedding photographer. Likewise, planning doesn’t make one an expert designer. There are just too many things to consider in this complex world. Whether a single designer can do it or not, depends on the skill and experience of the designer. But, here are few things that needs consideration:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What’s the problem we are trying to solve? Is it a real problem or a symptom of a deeper problem?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The person who will is affected, what’s his life like? What excites him and what frustrates him?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do we adapt to people’s changing behaviour?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do we communicate and make sure the audience understands it the way we intend to speak?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we make it intuitive, simple and efficient for use? How do we make people happy while using the solution?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we make sure it communicates and behaves appropriately in varying situations?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do we make it look aesthetically pleasing and desirable to use?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we ensure it doesn’t become out of fashion soon?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How can we keep the cost and impact on the environment low. Is it a solution that scales well?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And finally, how do you balance tradeoffs in the above points. What’s the best that can be done with the constraints? Money, skills, time, and so forth.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="constraints-influence-design"&gt;Constraints influence Design&lt;/h3&gt;

&lt;p&gt;Take these two plants for instance:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/desert_cactus1-225x300.jpg" alt="desert_cactus" /&gt;&lt;/p&gt;

&lt;p&gt;Desert Cactus&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/brazil_nut_tree-225x300.jpg" alt="brazil_nut_tree" /&gt;&lt;/p&gt;

&lt;p&gt;Brazil Nut Tree&lt;/p&gt;

&lt;p&gt;Both trees need water and sunlight to stay alive, the desert has a scarcity of water and abundance of sunlight, whereas the tropics have an abundance of both.&lt;/p&gt;

&lt;p&gt;The cactus has evolved itself to be bulky to store water. It has lost it’s leaves to prevent water loss and instead grew spines to protect itself from predators.&lt;/p&gt;

&lt;p&gt;The Brazil Nut tree faces a different problem. An abundance of light and water leads to a thriving plant life, thus leading to competition for light. The Brazil Nut tree dealt with it by growing tall and developing broad leaves.&lt;/p&gt;

&lt;p&gt;Both plants are great designs by nature. The reason they 
 different is because they function differently. Imagine putting a cactus in the rain forest - It would never get enough sunlight to sustain itself and the Brazil Nut would probably dry and catch fire.&lt;/p&gt;

&lt;p&gt;The best designs are those that qualify constraints and manage tradeoffs well. This requires thinking carefully at all abstraction levels, testing what gets us closer to the desired outcome and making constant improvements; while balancing sustainability of a business and user needs throughout.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your product needs to be well designed  in all aspects, not just made visually appealing. Unless that happens, the law of nature - survival of the fittest - will take effect and the product will eventually fail.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In following blog posts, I’ll walk you through what the layers of design are, and what tools we can use to simplify our thought process.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Build super fast MVP's without programmers - Part 3</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/12/build-super-fast-mvps-without-programmers-part-3/"/>
    <id>http://www.multunus.com/blog/2015/12/build-super-fast-mvps-without-programmers-part-3/</id>
    <published>2015-12-11T16:31:53+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;MVP’s and Prototypes. There’s multiple ways to build them. You can start with &lt;a href="https://www.youtube.com/watch?v=GrV2SZuRPv0"&gt;just paper&lt;/a&gt;, use Keynote or Powerpoint or create interactive prototypes with tools such as &lt;a href="https://marvelapp.com/"&gt;Marvel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you wanted to create aprototype, you could hack together a mobile app or web app fairly quickly these days to test out your hypotheses. We’re big fans of working prototypes - since you can learn a ton by observing user behavior while they interact with the app.&lt;/p&gt;

&lt;p&gt;The downside to building working web and mobile apps though, is that iterating them is not a super fast process. Code changes need to made and tested.&lt;/p&gt;

&lt;p&gt;After trying a bunch of different techniques, we thought we’d finally found our sweet spot: Google Spreadsheets [Affectionately referred to as “GoogleSpread” from this point on]. GoogleSpread MVP's are both quick to launch 
and iterate.&lt;/p&gt;

&lt;p&gt;If you think I’m delusional, you probably haven’t read the the &lt;a href="http://www.multunus.com/blog/2015/11/super-fast-mvps-using-just-google-docs-part-1/"&gt;first&lt;/a&gt; 
&lt;a href="http://www.multunus.com/blog/2015/12/super-fast-mvps-just-google-docs-part-2/"&gt;two&lt;/a&gt; parts of this series.&lt;/p&gt;

&lt;p&gt;Or you’ve actually read both of them (thank you!), but you’re still skeptical. And I wouldn’t blame you. We could probably get away with just GoogleSpread for simple applications but what about more serious stuff?&lt;/p&gt;

&lt;p&gt;For example, could it handle workflows? How about something where users of the system needed to communicate with each other? Could we build something with it to help us make important decisions involving budgets and expensive purchases?&lt;/p&gt;

&lt;p&gt;I’ll have to admit. GoogleSpread had finally met its match. We’d squeezed every last bit of its “MVP Prototyping capacity”.&lt;/p&gt;

&lt;h3 id="buyit"&gt;BuyIt!&lt;/h3&gt;

&lt;p&gt;Our purchasing system was broken. Whether you wanted to get a book or a new laptop, it took forever for someone in the company to pull out their credit and buy it.&lt;/p&gt;

&lt;p&gt;On closer inspection, there were 2 key reasons for this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What’s the exact item that needs to be purchased? Where should it be bought from? How much does it cost? How many of the item were needed? More often than not, we’d find that at least a few of these questions were not answered. And if they were answered, they were unclear.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had our quarterly budgets in place, along with a breakdown of the budget across various purchase categories. The problem? It wasn’t synced with our payables and purchases. That made it very difficult to answer the nagging question:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The solution for the above problems?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Create a &lt;a href="https://personalmba.com/guiding-structure/"&gt;guiding structure&lt;/a&gt; that would make it hard to omit important information. And for those situations where additional clarifications were needed, allow for quick and effective communication between the the purchase requestor and the approver.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure real time updates of the budget as new purchases were being approved.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We’d christen the new system: BuyIt! - to reflect the alacrity that it bring into our erstwhile inefficient purchase system.&lt;/p&gt;

&lt;h3 id="google-forms-and-trello"&gt;Google Forms and Trello&lt;/h3&gt;

&lt;p&gt;Our key requirements:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;A workflow system, that also ideally had a great communication module built in&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Online forms that would allow our team to request and approve purchases quickly.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: For this to work well, the forms would need to provide real-time status on our budgets&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3.A scripting system that would allow us to tie up the above modules together&lt;/p&gt;

&lt;p&gt;As mentioned earlier, it was clear that GoogleSpread couldn’t handle all these requirements.&lt;/p&gt;

&lt;p&gt;We looked up and looked around. What other awesome free tools were we already using at work, that would also work here? Tools that we could tweak so they worked to work well together?&lt;/p&gt;

&lt;p&gt;We were already using Google Forms and &lt;a href="http://www.multunus.com/blog/2013/03/how-we-chose-our-kanban-tool/"&gt;Trello&lt;/a&gt; at Multunus for various other purposes. And we could use App Scripts and Trello’s API to make them work together.&lt;/p&gt;

&lt;p&gt;Our budgeting system was already on GoogleSpread. As you probably expect, all of the Google Apps work well together.&lt;/p&gt;

&lt;h3 id="hypotheses"&gt;Hypotheses&lt;/h3&gt;

&lt;p&gt;Now that question was: could we build a prototype that would combine Google Forms, Trello and GoogleSpread into a seamless way? Probably not. Even if we could get them to work with each other well, there would still be two significant user experience problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Each of these systems would need to be accessed through different URL’s&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each of them has completely different user interfaces.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, “seamless” it definitely was not going to be. :(&lt;/p&gt;

&lt;p&gt;Would we now have to build an expensive mobile or web app? And give up our dreams of building one more MVP sans programmers?  &lt;/p&gt;

&lt;p&gt;Hey, hold on a minute. What were our hypotheses for the MVP?&lt;/p&gt;

&lt;p&gt;Here’s what we’d come up with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Approvers in the purchasing system workflow would be able to make more confident approvals - using real-time budgets&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Efficiency of the purchasing system would be improved significantly - because of quicker decision making. This would be because, the approver would not need to escalate purchasing approvals because they could now use real-time data to make more objective buying decisions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Anyone in the company would be able to create a purchasing request within less than 10min.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Anyone in the company would be able to easily find out how our budgets were getting utilized, and this would lead to higher transparency and trust across the team.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now the question. Was a seamless sexy system required to test the above hypotheses?&lt;/p&gt;

&lt;p&gt;Probably not. We could perhaps tweak the system to make it usableand still validate our hypotheses.&lt;/p&gt;

&lt;h3 id="the-mvp"&gt;The MVP&lt;/h3&gt;

&lt;p&gt;Here’s a diagram that shows how the whole system works together:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/BuyIt_workflow.png" alt="BuyIt_workflow" /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The requester fills up the purchase request using a Google Form. We use the Google Spreadsheet API to fetch the remaining budgets across all categories. This shows up in the Google Form - and allows the requester to ensure that their purchase (if approved), will not go over budget.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;One of the key pieces of input at this stage is also choosing the approver. This is done automatically, when the category of the purchase is chosen.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As soon as the requester submits the form, a card is created in the BuyIt Trello board. It has all of the details from the form, of course. But it also automatically assigns the card to the Approver in question. Trello in turn automatically notifies the approver that a new card has been assigned to them.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The approver then opens up the Trello card (which contains the purchase request) and then uses Trello’s (awesome!) commenting system to get any questions clarified about the request.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The approver then opens up a second form - and fills up additional details for approving the request. This includes the mode of payment being used (We use this information for reconciliation during accounting)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2.When the approval form is submitted, the budget spreadsheet is updated with the latest purchase details and the budget for the corresponding category is updated to reflect the lower amount now available. The corresponding Trello card also moves automatically to the “Approved” status.&lt;/p&gt;

&lt;p&gt;Screenshot of the form&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/Approver_Form_censored.jpg" alt="Approver_Form_censored" /&gt;&lt;/p&gt;

&lt;p&gt;Screenshot of the trello board&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/Trello_board_censored.jpg" alt="Trello_board_censored" /&gt;&lt;/p&gt;

&lt;h3 id="iterations---doing-em-right"&gt;Iterations - doing ’em right!&lt;/h3&gt;

&lt;p&gt;As you’d expect it took multiple iterations and incremental improvements to get it working as we’d wanted it to. But we had the first version available for the team in about a week after we started to build the&lt;/p&gt;

&lt;p&gt;And that was fantastic because from that point on, after the first release - we were following the classical Lean Startup cycle:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/12/buildmeasurelearn.jpg" alt="buildmeasurelearn" /&gt;&lt;/p&gt;

&lt;p&gt;Credit: LeanStack.com&lt;/p&gt;

&lt;p&gt;Admittedly, this was much easier and faster in our case. Since our “customers” were our own team.&lt;/p&gt;

&lt;p&gt;Here’s a few of the key surprises/insights/learnings that we had while going through those iterations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In the very first version of the system, there was no form for the requestors. That was added later when we discovered inconsistencies in the Trello cards.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the initial version, we did not have the Approvers’ names listed alongside the budget categories they were responsible for. But while testing, we realized that requestors found it easier to find the category they were looking for, by first zooming in on the Approver.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We added a second level approver for certain higher ticket purchases. This was easily done by putting in an amount limit against each category, that the primary approver could easily use to determine whether it was within their limits or not.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We found that the approvers would forget to move the Trello cards from “Requested” to “Approved” after they’d okayed a certain purchase request. We then made this automatic as well.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="sans-programmers"&gt;Sans Programmers&lt;/h3&gt;

&lt;p&gt;Are you’re thinking, “Did they actually build this whole thing without professional programmers?”, I’d blame you for being skeptical.&lt;/p&gt;

&lt;p&gt;It was a more complex system than what we’d built earlier. But here’s the thing - more than 80% of this was actually done sans programmers.&lt;/p&gt;

&lt;p&gt;Our programmers were too busy on client work. But here’s the thing - Google Scripts is simple enough to pick up for almost anyone. Our business analysts who had spare time on their hands learned the basics quickly enough and coded the prototype.&lt;/p&gt;

&lt;p&gt;If you ask me, given a few more days to complete the project, we probably could have pulled this whole thing without relying on professional programmers.&lt;/p&gt;

&lt;p&gt;So, if you’ve been delaying building your MVP because you don’t have programming skills,  fear not. You can build almost anything these days with just the tools we’ve covered in this post.&lt;/p&gt;

&lt;h3 id="impact"&gt;Impact&lt;/h3&gt;

&lt;p&gt;We’ve been using BuyIt in “production” across the company for more than 4 months now and here’s the impact:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Budget spillover: * Reduced from 15% to 3% [approx.]*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Average time taken to fulfill a purchase request: * Reduced from 8-10 days to 3-4 days*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Average time invested by people in requesting purchases: * Reduced from &lt;strong&gt;3-5 days to less than an hour!&lt;/strong&gt;*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Average time invested by people to approve purchases:* Reduced from about 45 minutes to less than 15 minutes*&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I believe this is a great example of how constraints (such as not having access to programmers, in this example) can actually lead to some pretty great solutions eventually.&lt;/p&gt;

&lt;h3 id="key-learnings"&gt;Key Learnings&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Theis not really the software product. It’s in the key process change decisions that we make. And the best process changes focus on[reducing waste](https://en.wikipedia.org/wiki/Muda_(Japanese_term).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A Super Fast MVP - is not just something where the first version gets released quickly. It’s something that can be used to learn from your target customers and be  iterated upon at high speedsthe initial release.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Needless to say, the lower the fidelity of the prototype, the faster it is to iterate after the initial release.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;User interface design takes a long time to get right. So, whenever it’s possible, rely on products that have already gotten this right. In our case, we found both Trello and Google Tools to be very good from a UX standpoint&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Not only is this great from a working prototype standpoint. Its also great in terms of inspiring a very good user experience if and when a new custom user interface is built later down the line.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="open-source"&gt;Open Source&lt;/h3&gt;

&lt;p&gt;Here's our 
&lt;a href="https://github.com/multunus/BuyIt"&gt;open source version&lt;/a&gt; of this system. If you’re keen on getting your hands on it first, then please do tell us in the comments.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Options to consider while building an MDM Solution</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/12/options-consider-building-mdm-solution/"/>
    <id>http://www.multunus.com/blog/2015/12/options-consider-building-mdm-solution/</id>
    <published>2015-12-10T13:26:25+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Let’s assume you have a good &lt;a href="http://www.multunus.com/blog/2015/11/overview-mdm-landscape/"&gt;overview of the MDM landscape&lt;/a&gt;. You’ve done your “build vs buy” analysis and have chosen to go for “build”.&lt;/p&gt;

&lt;p&gt;Let’s now look what options are available to build an MDM solution that potentially solves a business problem. I'll be focusing on Android in this post and will cover the iOS ecosystem in the upcoming parts of the series.&lt;/p&gt;

&lt;p&gt;Before I talk about the options, let’s take a look at two key concepts: 
Rooting and Custom ROMs.&lt;/p&gt;

&lt;h2 id="rooting"&gt;Rooting&lt;/h2&gt;

&lt;p&gt;Rooting of a device means gaining full control of the device. &lt;a href="http://www.androidcentral.com/android-z-what-kernel"&gt;Android uses Linux Kernel&lt;/a&gt;, and rooting gives you the super user permission on the device which allows you to do pretty much anything on the device. There are &lt;a href="https://www.google.co.in/webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;es_th=1&amp;amp;ie=UTF-8#q=super+user+app+android"&gt;apps available in the Android Market&lt;/a&gt;, which helps you to managepermission.&lt;/p&gt;

&lt;h3 id="when-to-use"&gt;When to use&lt;/h3&gt;

&lt;p&gt;With rooting, you can install apps as System Apps, those apps which have more privileges than user apps, the apps that we normally install from Play Store. System Apps get installed in thepartition of your device which is read only. Most of the pre-installed apps that we see in the device, especially those from the device manufacturer, are system apps. Users will not be able to uninstall System Apps.&lt;/p&gt;

&lt;h3 id="pros"&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Install apps as System apps, to restrict the app getting uninstalled.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get full control of the device, so can manage the apps silently without any human intervention&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rooting is required to install Custom ROM on many devices [Custom ROM is covered in detail in the next section]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cons"&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Requires flashing, which voids the manufacturer's warranty&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can potentially brick the device, if something goes wrong while rooting.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="custom-roms"&gt;Custom ROMs&lt;/h2&gt;

&lt;p&gt;A Custom ROM as the name suggests, is a custom built distribution of the stock Android OS or tweaked versions of the Android ROM provided by the device manufacturer. Custom ROMs make the device suited for very specific needs.&lt;/p&gt;

&lt;h3 id="when-to-use-1"&gt;When to use&lt;/h3&gt;

&lt;p&gt;Custom ROMs make sense when the device is owned by an organization, say an organization providing devices to the field staff. Other use cases include where the device is used as an&lt;a href="https://en.wikipedia.org/wiki/Interactive_kiosk"&gt;Information Kiosk&lt;/a&gt;, or&lt;a href="https://en.wikipedia.org/wiki/Point_of_sale"&gt;POS Systems&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="pros-1"&gt;Pros&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;More control of the device - As the device is rooted, anything can be done on the device, such as removing bloatware, giving root permissions to specific apps etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cost reduction - A device with lower hardware specifications might be sufficient if only few apps are required to be installed on the device. This might reduce the cost of the device.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Faster upgrades: Android updates from manufacturers takes a very long time to roll out because of multiple layers of testing and certification. With a Custom ROM you can create your own version of stock Android cutting out the need for waiting for the manufacturer.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cons-1"&gt;Cons&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;In BYOD scenarios, employees or partners will be wary of installing a Custom ROM on their owned devices, giving away complete control of their devices.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;With a Custom ROM you are responsible for testing and fixing issues in the OS, which is usually done by the manufacturer if you are using a Stock ROM.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For loading a Custom ROM you have flash the device [many devices require rooting too], which voids manufacturer's warranty.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As mentioned above, rooting can brick the device if something goes amiss while rooting.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="our-experience-building-mdm-withcustom-rom"&gt;Our Experience building MDM with Custom ROM&lt;/h2&gt;

&lt;p&gt;One of&lt;a href="http://www.multunus.com/portfolio/end-end-mobile-device-management-solution-health-media-enterprise/"&gt;our MDM Customers&lt;/a&gt;had the requirement to play Adobe Flash video ads on the devices. Adobe had removed&lt;a href="http://in.pcmag.com/apps/82354/news/adobe-removing-flash-for-android-from-google-play"&gt;Flash App from Google Playstore&lt;/a&gt;with the release of Android 4.1. We tried to convert the flash videos to HTML5 videos, but hit bottlenecks with animations and annotations in the videos. Many advertising firms still use Adobe Flash for videos, so asking the content distributors to distribute the videos in non-flash format was not a viable option.&lt;/p&gt;

&lt;p&gt;That is when we decided to go with Custom ROM which would help us:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Pre-install the required apps, eg: the Adobe Flash app, I mentioned above&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Remove unnecessary bloatware&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pre-configure the device settings eg: WiFi settings, lock settings, volume settings.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;OS and app updates&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="how-to-build-mdm-without-custom-rom-and-rooting"&gt;How to build MDM without Custom ROM and Rooting&lt;/h2&gt;

&lt;p&gt;Using Android API, along with a &lt;a href="https://en.wikipedia.org/wiki/Push_technology"&gt;Push Technology&lt;/a&gt; [such as&lt;a href="https://developers.google.com/cloud-messaging/"&gt;Google Cloud Messaging&lt;/a&gt;],we can create an MDM solution to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Manage apps in the device&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Manage content in the device&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Run apps in Kiosk mode&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Control low-security level features eg: lock/unlock device, control volume, Wifi settings&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At Multunus, we have started an &lt;a href="http://multunus.github.io/onemdm-server/"&gt;Open Source MDM - OneMDM  &lt;/a&gt;to help those who need a barebones MDM solution. Please take a look at the 
&lt;a href="http://multunus.github.io/onemdm-server/#live-demo"&gt;Live Demo&lt;/a&gt; section if you would like to give a try.&lt;/p&gt;

&lt;p&gt;Feel free to contribute to the same by submitting PRs, raising issues.. We are looking forward for comments and/or suggestions.&lt;/p&gt;

&lt;h2 id="device-administration-api"&gt;Device Administration API&lt;/h2&gt;

&lt;p&gt;Android also provides&lt;a href="http://developer.android.com/guide/topics/admin/device-admin.html"&gt;Device Administration API&lt;/a&gt;, which provides device administration features at the system level to create security-aware applications that are useful in enterprise settings. The API supports enabling password policies, storage encryption and disabling camera based on context or time.&lt;/p&gt;

&lt;p&gt;The user must explicitly enable the application for the policies to be enforced. If the user chooses not to enable the application it will still be present on the device, without any policies being enforced, and the user will not get any of the application's benefits.&lt;/p&gt;

&lt;p&gt;The following is a sample prompt to the user to enable an app as Device Administration app:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://developer.android.com/images/admin/device-admin-activate-prompt.png" alt="Android Device Administration" /&gt;&lt;/p&gt;

&lt;h2 id="android-for-work"&gt;Android For Work&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.android.com/work/"&gt;Android for Work&lt;/a&gt; is Google’s recent initiative for corporate customers with a simplified BYOD platform. With Lollipop, Android introduced support for multiple profiles on device which in turn allows to separate the personal apps from work apps. The Corporate Profile that is setup on the device can be controlled by the administrators. The administrators can set which apps are available for the corporate profile along with separate storage areas.&lt;/p&gt;

&lt;p&gt;For devices running below Lollipop i.e. Ice Cream Sandwich and newer,&lt;a href="https://static.googleusercontent.com/media/www.google.co.in/en/IN/work/android/files/android-for-work-apps-guide.pdf"&gt;Google Play for Work&lt;/a&gt;, can be installed to get similar functionalities.&lt;/p&gt;

&lt;p&gt;If you are a Google Enterprise App (not the legacy free tier) user, Android for Work is a useful solution as it offers a simple device registration and administration features.&lt;/p&gt;

&lt;p&gt;To create apps for Android For Work, one needs to be &lt;a href="https://www.google.com/work/android/partners/"&gt;enrolled as a partner&lt;/a&gt;, which is right now available only on request basis. It is expected that in the immediate future, Android For Work should help many enterprises manage BYOD with app distribution, data management and security management.&lt;/p&gt;

&lt;h2 id="coming-up"&gt;Coming Up&lt;/h2&gt;

&lt;p&gt;In the upcoming posts, I will be sharing our learnings [both technical and non-technical] we had while building multiple MDM solutions.&lt;/p&gt;

&lt;p&gt;I am speaking at the upcoming &lt;a href="https://droidcon.in/2015/"&gt;DroidCon India&lt;/a&gt; conference &lt;a href="https://droidconin.talkfunnel.com/2015/57-learnings-from-building-custom-mdm"&gt;about MDM&lt;/a&gt;. Come and say hi if you are attending the conference.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Build super fast MVP's without programmers - Part 2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/12/super-fast-mvps-just-google-docs-part-2/"/>
    <id>http://www.multunus.com/blog/2015/12/super-fast-mvps-just-google-docs-part-2/</id>
    <published>2015-12-01T15:37:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the second post in our “&lt;a href="https://en.wikipedia.org/wiki/Minimum_viable_product"&gt;MVP’s&lt;/a&gt;without programmers” series.&lt;a href="http://www.multunus.com/blog/2015/11/super-fast-mvps-using-just-google-docs-part-1/"&gt;Here’s the first post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s a screenshot of the “app” we created:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/MVP-with-Google-Docs-Part-2.png" alt="MVP with Google Docs - Part 2" /&gt;&lt;/p&gt;

&lt;p&gt;I’m not gonna blame you, if you wanna stop reading now. Yes, it’s a timesheet. That bane of a consultant’s existence.&lt;/p&gt;

&lt;p&gt;But here’s the thing: We had more fun building this banal timesheet than we’d ever expected. Hypotheses, experiments, prototypes, testing..oh my!&lt;/p&gt;

&lt;h3 id="yats"&gt;YATS&lt;/h3&gt;

&lt;p&gt;I’ll be the first to admit it. Until recently, every invoice we sent to our customers had an ad-hoc timesheet attached with it.&lt;/p&gt;

&lt;p&gt;Ad-hoc timesheets. Manually prepared by each team member. Yep. Guilty as charged.&lt;/p&gt;

&lt;p&gt;Anyways, our conscience got the better of us. It was time to set things straight. We were gonna standardize timesheets across the organization and become more professional. It was time to build an application that we could all log into, enter our hours and generate professional reports.&lt;/p&gt;

&lt;p&gt;Wait!&lt;/p&gt;

&lt;p&gt;Aren’t there’s like hundreds of these kinds of products already out there? Were we out of our minds to invest expensive programmer hours in building YATS? [Yet Another Time Sheet]&lt;/p&gt;

&lt;p&gt;Take a look at the following goals across our types of users:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For each consultant:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Enter daily time spent on various projects&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get reports on how many hours they’ve spent and on what activity&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For each team of consultants (working on a certain account):&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Help the team react quickly if the specified number of target monthly hours (as mentioned in the contract with our customers) is unlikely to be met&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This is important for us, because we don’t have fixed hours,&lt;a href="http://www.multunus.com/blog/2015/11/work-remotely-or-together-thats-wrong-question/"&gt;we allow for remote work&lt;/a&gt;and&lt;a href="http://www.multunus.com/blog/2015/09/our-autonomous-salary-system-the-background-story-part-1/"&gt;we’re moving to significant levels of autonomy across the organization&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Allow for even more autonomy in decision making with respect to how they choose to split up their time between Client Work, Time Off and&lt;a href="http://blog.codinghorror.com/today-is-goof-off-at-work-day/"&gt;20% time&lt;/a&gt;. [We’ve just introduced 20% time at Multunus. More on this soon.]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For customers:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Allow them to see real time timesheet entries. Some of our customers asked for this to help them project their expenses more accurately.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Across the organization:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Track projected vs actual revenues throughout the month with a “real time dashboard”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;See patterns/trends across the company - are we working too much or too little?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Help everyone across the company to realize where our time is being spent - and to encourage everyone to be more mindful.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’re yet to find an off-the-shelf solution that gives us all of those things.&lt;/p&gt;

&lt;h3 id="constraints-you-gotta-love-em"&gt;Constraints. You gotta love ’em!&lt;/h3&gt;

&lt;p&gt;With stretch goals like those, the whole project was now starting to inspire our programmers.  To the point they volunteered to build this thing on evenings and weekends.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Yeah, like anyone’s gonna believe that. A timesheet with stretch goals is still a timesheet :-&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Back to ground reality. We needed someone who could learn to code fast, but also deliver working software from Day 1.&lt;/p&gt;

&lt;p&gt;Oh, and we also needed this thing to be online, interactive, have database persistence, allow for concurrent user access, have an intuitive user interface, allow for easy extensibility and maintenance.&lt;/p&gt;

&lt;p&gt;, you say., you say., you say.&lt;/p&gt;

&lt;p&gt;But what if, we could do this whole thing just using Google Spreadsheets and Google Doc Scripts?&lt;/p&gt;

&lt;p&gt;Here’s the hypotheses in more detail:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Problem Hypotheses:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our consultants are not able to plan their time offs and their investment time well because they don’t have a tool that tells them the financial impact of making those choices&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our people are not able towith our consulting business because they’re not able to see how they’re contributing to the “big” picture&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Solution Hypotheses:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s possible to build an online solution just using Google Docs and&lt;a href="https://developers.google.com/apps-script/?hl=en"&gt;Google Apps Scripts&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We would be able to build this solution without the help of professional programmers&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The solution would be good enough for us to use at least for a couple of months - while we made programmers available for building an actual web app.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The solution would be easy enough to iterate on and would hence, allow us to discover and fix problems quickly.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="the-google-docs-community-great-but"&gt;The Google Docs Community. Great, but…&lt;/h3&gt;

&lt;p&gt;Since the intention was to use Google Docs, we looked for existing “timesheet”&lt;a href="https://drive.google.com/a/multunus.com/templates?q=timesheets&amp;amp;sort=rating&amp;amp;view=public"&gt;templates in the public GDoc library&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What we found were mostly “decorated” versions of a standard spreadsheet. This is sufficient if all you need is a pre-defined template to log/change and aggregate timesheet entries.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;But what we needed was this:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A “database” of all the timesheet data that we could run custom reports on&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;An easy to use interface for our consultants to enter and change their timesheet entries&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A sample of reports that demonstrated the capabilities of the tool&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, what we now needed was to build an online database backed web application. Except, we had to do it, just using Google Docs and Google Apps Script.&lt;/p&gt;

&lt;p&gt;Here’s what we came up with:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/timeit_optim.gif" alt="TimeIt Demo - Animated GIF" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.google.com/spreadsheets/d/1YgeKOYqwNarJJwVfAN52lRSC4dFY3JhNK5rJgh4LkyM/edit#gid=14693585&amp;amp;vpid=A1"&gt;Here’s an online template of the spreadsheet.&lt;/a&gt;[The App Script is accessible from within the template. Checkout the instructions.]&lt;/p&gt;

&lt;h3 id="thats-a-nice-prototype-what-about-the-real-app"&gt;That’s a nice prototype. What about the real app?&lt;/h3&gt;

&lt;p&gt;Once we’d got the basic infrastructure built, the rest was quite easy. We incrementally added all of the reports that we wanted also to the system. And we’re now in the process of building our financial dashboard - that connects our quarterly budgets, revenue targets, accrued revenue and projected revenue all in one place.&lt;/p&gt;

&lt;p&gt;And you guessed it - all with just Google Docs.&lt;/p&gt;

&lt;p&gt;The funny thing we discovered was this: Piggybacking on Google’s massive infrastructure actually makes more sense in more situations that you’d expect.&lt;/p&gt;

&lt;p&gt;We’ve now been using our “prototype” timesheet for over 3 months now - and by the looks of it, it doesn’t seem like we’d want to move to anything else, any time soon. It works just fine.&lt;/p&gt;

&lt;h3 id="so-theres-no-downsides-at-all"&gt;So there’s no downsides at all?&lt;/h3&gt;

&lt;p&gt;Of course, there are trade-offs. That is, if you think of them as tradeoffs. For example, if you’re averse to keeping the timesheet data across the company open for everyone - then, yeah, this isn’t for you.&lt;/p&gt;

&lt;p&gt;If you’re paranoid about people making stupid mistakes - by say accidentally deleting important data, then, yeah, this isn’t for you. No, scratch that. This is still for you. Use the protect sheet feature to avoid accidental updates by your team.&lt;/p&gt;

&lt;h3 id="learnings"&gt;Learnings&lt;/h3&gt;

&lt;p&gt;So, what did we learn from this experience?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Google Docs is a very powerful platform - especially if you’re ready to invest a little bit of time in learning the scripting language. Which is actually, quite simple as well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Programming (or at least GDocs scripting!) can be learned fairly quickly by non-programmers very quickly. In our case, almost all of the coding was done by one of our business analysts - who hadbefore this.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://scottberkun.com/2008/do-constraints-help-creative-thinking/"&gt;Constraints enforce creativity&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Taking a methodical approach helps us to stay on track. We knew what problems we wanted to solve, so we created hypotheses for them and that helped us to stick to just those problems.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="your-turn"&gt;Your Turn&lt;/h3&gt;

&lt;p&gt;What kinds of MVP experiments have you been trying out? Would love to hear your stories in the comments below :).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>React Essentials for JavaScript Beginners</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/react-essentials-for-javascript-beginners/"/>
    <id>http://www.multunus.com/blog/2015/11/react-essentials-for-javascript-beginners/</id>
    <published>2015-11-25T21:57:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;React has made working on frontend fun again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You know JavaScript, you might have played around with AngularJS or Node.js. You've been hearing about &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; and your curiosity has been piqued. You're at the right place, this post will cover the essentials of React with simple code snippets.&lt;/p&gt;

&lt;p&gt;Unless you’ve been living under a rock for the past year, you would know that React is a &lt;a href="https://facebook.github.io/react/blog/2013/06/05/why-react.html"&gt;&lt;strong&gt;View&lt;/strong&gt;&lt;/a&gt; library released by Facebook. In its infancy, people had mixed reactions on its weird looking syntax of HTML inside JavaScript (called &lt;a href="https://facebook.github.io/react/docs/displaying-data.html"&gt;JSX&lt;/a&gt;). All that weirdness is now invisible with frontend developers considering React as the de-facto standard for creating UIs.&lt;/p&gt;

&lt;p&gt;You can use the latest features from the ES6 and ES7 standards in your React app today, thanks to transpilers like Babel. In short React has made working on frontend fun again!&lt;/p&gt;

&lt;p&gt;All the code snippets I use here follows the ES6/ES2015 syntax. JS Bin seems to act up occasionally, but as usual, refreshing it seems to fix it.&lt;/p&gt;

&lt;h2 id="react-components"&gt;React Components&lt;/h2&gt;

&lt;p&gt;Let's get started. We'll start by defining a couple of components that we'll use throughout.&lt;/p&gt;

&lt;p&gt;Text&lt;/p&gt;

&lt;p&gt;Here’s a component that displays the venerable “Hello, World!”&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/1/edit"&gt;Check out the code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Text extends React.Component {
  render() {
    return (
      &amp;lt;div&amp;gt;
Hello, World!
      &amp;lt;/div&amp;gt;
    );
  }
}

React.render(&amp;lt;Text /&amp;gt;, document.getElementById('container'));

 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/text-1024x522.gif" alt="Text Component - Output" /&gt;&lt;/p&gt;

&lt;p&gt;In line 1, we are defining a class called &lt;code&gt;Text&lt;/code&gt; which extends the component class of React. Text has a &lt;code&gt;render&lt;/code&gt; method which returns a React element, in this case, a div tag with the text “Hello, World!”. Remember that only a single React element should be returned by the render method. However, there may be nested elements within that element.
The last line is telling React to render the &lt;code&gt;Text&lt;/code&gt; React Element as a child of the DOM node with the id &lt;code&gt;container&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="spinner"&gt;Spinner&lt;/h3&gt;

&lt;p&gt;This component will display a spinner. I will not go into the implementation of it, it's mostly css.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/4/edit"&gt;Check out the code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Spinner extends React.Component {
  render() {
      return (
  &amp;lt;div className="spinner-component"&amp;gt;
    &amp;lt;svg className="spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"&amp;gt;
      &amp;lt;circle className="path" fill="none" strokeWidth="6" strokeLinecap="round" cx="33" cy="33" r="30"&amp;gt;&amp;lt;/circle&amp;gt;
    &amp;lt;/svg&amp;gt;
  &amp;lt;/div&amp;gt;
)
  }
}

React.render(&amp;lt;Spinner /&amp;gt;, document.getElementById('container'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/spinner-1024x553.gif" alt="Spinner Component" /&gt;
The only thing this component does new, as far as React is concerned, is to apply css class names to HTML tags. JSX requires you to use the keyword &lt;code&gt;className&lt;/code&gt; for applying css classes, since &lt;code&gt;class&lt;/code&gt; is a JavaScript keyword.&lt;/p&gt;

&lt;h3 id="app"&gt;App&lt;/h3&gt;

&lt;p&gt;We will now define a &lt;code&gt;App&lt;/code&gt; component which will behave as the parent component.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/7/edit"&gt;Check out the code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class App extends React.Component {
  render() {
    return (
      &amp;lt;div&amp;gt;
&amp;lt;Text /&amp;gt;
&amp;lt;Spinner /&amp;gt;
      &amp;lt;/div&amp;gt;
    )
  }
}

React.render(&amp;lt;App /&amp;gt;, document.getElementById('container'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/App-1024x553.gif" alt="App Component" /&gt;&lt;/p&gt;

&lt;p&gt;I will include only the relevant portion of the code for the sake of brevity, you can follow the &lt;a href="(http://jsbin.com/vusuje/7/edit)"&gt;JS Bin&lt;/a&gt; link to see the whole code.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;App&lt;/code&gt; is the parent component and it's child components are &lt;code&gt;Text&lt;/code&gt; and &lt;code&gt;Spinner&lt;/code&gt;. We will modify these components throughout the course of this post.&lt;/p&gt;

&lt;p&gt;You might be wondering what the fuss is all about. Things don't look exciting right now? Wait for it - the magic happens when the components use &lt;strong&gt;props&lt;/strong&gt; and &lt;strong&gt;state&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="props"&gt;Props&lt;/h2&gt;

&lt;p&gt;The * props*  (short for properties) are a component’s &lt;strong&gt;configuration&lt;/strong&gt;. They are received from a component above it in the component hierarchy. Props are treated as &lt;strong&gt;immutable&lt;/strong&gt;in the component receiving them. This means data flow should be top-down.&lt;/p&gt;

&lt;p&gt;It sounds confusing I know, but it's really intuitive once you think about it. Props are passed down to a child component from it's parent component. As far as the child is concerned, the prop is owned by the parent and only the parent should modify it.&lt;/p&gt;

&lt;p&gt;Therefore, a component is not supposed to change its props, in other words &lt;strong&gt;never write&lt;/strong&gt; to props. It is also the responsibility of a component to pass down any required props to its child components.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/9/edit"&gt;Check out the code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Text extends React.Component {
  render() {
    &amp;lt;div&amp;gt;
      {this.props.content}
    &amp;lt;/div&amp;gt;
  }
}

class App extends React.Component {

  render() {
    return (
      &amp;lt;div&amp;gt;
&amp;lt;Text content="I am React"/&amp;gt;
&amp;lt;Spinner/&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
};

React.render(&amp;lt;App name="React"/&amp;gt;, document.getElementById('container'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/Prop-1024x553.gif" alt="Props Example" /&gt;&lt;/p&gt;

&lt;p&gt;No points for guessing what the above code snippet does! It’s mostly the same code as before, but with a slight modification. The &lt;code&gt;Text&lt;/code&gt; component inside &lt;code&gt;App&lt;/code&gt; takes an attribute called &lt;code&gt;content&lt;/code&gt; with the value “I am React”. This is how we transfer data into a component:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The attribute &lt;code&gt;content&lt;/code&gt; is pushed to the props object of the current instance of the &lt;code&gt;Text&lt;/code&gt; component.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Within the component, this attribute is now accessible as &lt;code&gt;this.props.name&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The handlebars(&lt;code&gt;{ }&lt;/code&gt;) lets the JSX transformer know that it’s contents should be evaluated and replaced.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The parent, in this case, is &lt;code&gt;App&lt;/code&gt; and the child is &lt;code&gt;Text&lt;/code&gt;, as mentioned previously, parent provides the child component with the necessary props.&lt;/p&gt;

&lt;p&gt;Follow this &lt;a href="http://www.sitepoint.com/video-using-props-to-pass-data-in-react/"&gt;post&lt;/a&gt; to learn more about props.&lt;/p&gt;

&lt;h2 id="state"&gt;State&lt;/h2&gt;

&lt;p&gt;State is what you use when you want your application to be interactive. The * state*  is initialized with a default value when a component is mounted in the DOM. It then undergoes &lt;strong&gt;mutations&lt;/strong&gt; as time passes. These mutations are usually triggered from user events or client-server interaction. It is the representation of a component at a given point of time.&lt;/p&gt;

&lt;p&gt;A component takes care of its state internally, but it should not mess with the state of its children. Most of the time, state of the parent is passed down as a prop to the child.&lt;/p&gt;

&lt;p&gt;React components can hold state information within them. Each instance of a component maintains a separate state. This quickly proves to be very useful. Let us see how state works:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/11/edit"&gt;Check out the code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Spinner extends React.Component {
  render() {
    if(this.props.show) {
      return (
  &amp;lt;div className="spinner-component"&amp;gt;
    &amp;lt;svg className="spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"&amp;gt;
      &amp;lt;circle className="path" fill="none" strokeWidth="6" strokeLinecap="round" cx="33" cy="33" r="30"&amp;gt;&amp;lt;/circle&amp;gt;
    &amp;lt;/svg&amp;gt;
  &amp;lt;/div&amp;gt;
)
    } else {
  return (&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;);
    }
  }
}
class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {showSpinner: false};
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
&amp;lt;Text content="I am React"/&amp;gt;
&amp;lt;Spinner show={this.state.showSpinner}/&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
};

React.render(&amp;lt;App name="React"/&amp;gt;, document.getElementById('container'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/state-1024x553.gif" alt="State Example" /&gt;
We have modified Spinner component to be able to use the &lt;code&gt;show&lt;/code&gt; prop. Spinner will now return an empty &lt;code&gt;div&lt;/code&gt; tag if the value of &lt;code&gt;show&lt;/code&gt; is false.&lt;/p&gt;

&lt;p&gt;Let's see what changes we have made to &lt;code&gt;App&lt;/code&gt; component.
*  It calls super with props to prepare the component for rendering
*  It initializes the state. In this case, &lt;code&gt;showSpinner&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.
*  &lt;code&gt;Spinner&lt;/code&gt; component is given a prop called &lt;code&gt;show&lt;/code&gt; which takes the value of the &lt;code&gt;showSpinner&lt;/code&gt; state element.&lt;/p&gt;

&lt;p&gt;By now you have probably guessed what we are trying to do, we are passing in the state &lt;code&gt;showSpinner&lt;/code&gt; as a prop to &lt;code&gt;Spinner&lt;/code&gt;. &lt;code&gt;Spinner&lt;/code&gt; will now use this prop to determine whether it should display a spinner or not.&lt;/p&gt;

&lt;p&gt;There are certain things you should take care of when using state in your app:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;State reduces predictability and increases the complexity of your application&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try to use as few components with state as possible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stateful components are mainly used for handling user events, client-server communication etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This excellent 
&lt;a href="https://facebook.github.io/react/docs/interactivity-and-dynamic-uis.html"&gt;post&lt;/a&gt; will give you more information about when to use state.&lt;/p&gt;

&lt;h2 id="dynamic-ui"&gt;Dynamic UI&lt;/h2&gt;

&lt;p&gt;Alright, state is no fun if we can’t mutate it. Let’s see a small example of how state can be mutated through a user event. Go on to the JS Bin link and try clicking on 
* Toggle Spinner*&lt;/p&gt;

&lt;p&gt;&lt;a href="http://jsbin.com/vusuje/15/edit"&gt;Check out this code on JS Bin&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {showSpinner: false};
  }

  toggleShowSpinner() {
    this.setState({
      showSpinner: !this.state.showSpinner
    });
  }

  handleClick() {
    this.toggleShowSpinner();
  }

  render() {
    return (
      &amp;lt;div&amp;gt;
&amp;lt;Text content="I am React"/&amp;gt;
&amp;lt;button onClick={(e) =&amp;gt; {this.handleClick(e)}}&amp;gt;Toggle Spinner&amp;lt;/button&amp;gt;
&amp;lt;Spinner show={this.state.showSpinner}/&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

React.render(&amp;lt;App name="React"/&amp;gt;, document.getElementById('container'));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/dynamic-ui-1024x522.gif" alt="Dynamic UI Example" /&gt;
The code above looks slightly more complicated, but it’s a no-brainer.&lt;/p&gt;

&lt;p&gt;We have created an HTML &lt;code&gt;button&lt;/code&gt; and passed in an &lt;code&gt;onClick&lt;/code&gt; event handler as a prop. The strange looking 
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;syntax&lt;/a&gt; is from ES2015. When you click on the button, &lt;code&gt;handleClick()&lt;/code&gt; is invoked.&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;handleClick()&lt;/code&gt; method is invoked it invokes &lt;code&gt;toggleShowSpinner()&lt;/code&gt;. This is where the magic happens. The &lt;a href="https://facebook.github.io/react/docs/component-api.html"&gt;&lt;code&gt;setState()&lt;/code&gt;&lt;/a&gt; method is used to mutate the state. In this case, &lt;code&gt;showSpinner&lt;/code&gt; is toggled. As soon as the state is mutated, React performs a set of steps. One of these is calling the render method. Pressing the button again toggles the state and the spinner is disabled.&lt;/p&gt;

&lt;p&gt;Now you know enough about react to get started with it. If you get stuck in between, dig through the
&lt;a href="https://facebook.github.io/react/docs/getting-started.html"&gt;React Docs&lt;/a&gt; or comment here. Stay tuned for the next post which talks about what exactly happens when state is mutated among other things.&lt;/p&gt;

&lt;p&gt;Leave your thoughts and suggestions below and make sure to &lt;a href="https://twitter.com/multunus"&gt;follow us&lt;/a&gt; to receive even more posts :)&lt;/p&gt;

&lt;h3 id="further-reading"&gt;Further Reading&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://firstdoit.com/react-1/"&gt;How I learned to stop worrying and love React&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://babeljs.io/blog/2015/06/07/react-on-es6-plus/"&gt;React on ES6+&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://github.com/arkency/reactjs_koans"&gt;React Koans&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://ctheu.com/2015/02/12/how-to-communicate-between-react-components/"&gt;How to communicate between React Components&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://github.com/enaqx/awesome-react"&gt;Curated list of React resources&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>An overview of the MDM landscape</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/overview-mdm-landscape/"/>
    <id>http://www.multunus.com/blog/2015/11/overview-mdm-landscape/</id>
    <published>2015-11-25T13:45:29+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In the recent past, we had the opportunity to work with multiple MDM solutions and this post is to share how the MDM landscape looks currently,  and what options exist today for someone looking for an MDM solution.&lt;/p&gt;

&lt;h2 id="what-is-mdm"&gt;What is MDM?&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;MDM, Mobile Device Management&lt;/strong&gt;, means the ability to manage devices from a centralised location. Enterprises uses this for securing emails and corporate documents on device, enforcing corporate policies, etc. With the increased use  of mobile apps in the field, MDM is becoming a necessity in many industries. MDM is also gaining traction where the devices will require very little interactions once installed.&lt;/p&gt;

&lt;h2 id="what-can-be-managed"&gt;What can be managed?&lt;/h2&gt;

&lt;p&gt;Now lets look at what can be managed with the MDM solution. If you look at the above examples it includes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Managing applications&lt;/strong&gt; remotely installing/deleting/updating apps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Restricting the access or enforcing policies&lt;/strong&gt; on the device, such as Securing content on the device, Configuring WiFi access etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Remote management of the device&lt;/strong&gt; itself, such as wiping content, turning screen off/on etc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And lastly, &lt;strong&gt;content&lt;/strong&gt; &lt;strong&gt;management,&lt;/strong&gt; Pushing files to device, deleting files etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="what-is-byod"&gt;What is BYOD?&lt;/h2&gt;

&lt;p&gt;One popular term in the MDM world is &lt;strong&gt;BYOD i.e. Bring Your Own Device.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More and more enterprises are opening up their firewalls to let users carry their personal mobile devices into the corporate network. In some cases, companies give out devices to employees that are used for official as well as personal use. These bring in challenges of data privacy and malware protection.&lt;/p&gt;

&lt;p&gt;The fragmented nature of the Android world BYOD makes MDM more complex.&lt;/p&gt;

&lt;h2 id="available-solutions"&gt;Available Solutions&lt;/h2&gt;

&lt;p&gt;There are a lot of MDM solutions available and you need to choose the one which matches the requirement. Some of the popular solutions are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Airwatch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MobileIron&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Apperian&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dell EMM&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Citrix XenMobile&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you use the remote management console that comes with the above products, the experience is more of a typical &lt;a href="https://en.wikipedia.org/wiki/Commercial_off-the-shelf"&gt;COTS application&lt;/a&gt;, than the modern SaaS products. If you’ve used the standard enterprise applications such as email applications or word processing applications, you might be able to relate to what I am talking about here.&lt;/p&gt;

&lt;p&gt;There are a number of other solutions coming up targeting specific problems such as Content Management, Data Security, Remote Control etc.&lt;/p&gt;

&lt;h2 id="onemdm"&gt;OneMDM&lt;/h2&gt;

&lt;p&gt;At Multunus, we’ve created several MDM solutions for our customers, each solving a different problem.&lt;/p&gt;

&lt;p&gt;Recently we’ve started on &lt;a href="http://multunus.github.io/onemdm-server/"&gt;OneMDM&lt;/a&gt;,  an Open Source Solution, which extracts out the most common features that we’ve seen across the MDM solutions that we’ve built. Right now it supports only Android devices [running Kitkat and beyond].  &lt;/p&gt;

&lt;p&gt;It is in its early stages,  and we will be adding more features in the coming weeks and months. The source can be found at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/multunus/onemdm-server"&gt;https://github.com/multunus/onemdm-server&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/multunus/onemdm-client"&gt;https://github.com/multunus/onemdm-client&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;a href="http://www.multunus.com/blog/2015/12/options-consider-building-mdm-solution/"&gt;Read this post&lt;/a&gt;, if you'd like to know different options once need to consider while building an MDM product.&lt;/p&gt;

&lt;h3 id="further-references"&gt;Further References&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Mobile_device_management"&gt;https://en.wikipedia.org/wiki/Mobile_device_management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://searchmobilecomputing.techtarget.com/definition/mobile-device-management"&gt;http://searchmobilecomputing.techtarget.com/definition/mobile-device-management&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The below video talks about &lt;a href="http://www.multunus.com/portfolio/end-end-mobile-device-management-solution-health-media-enterprise/"&gt;The&lt;/a&gt;&lt;a href="http://www.multunus.com/portfolio/end-end-mobile-device-management-solution-health-media-enterprise/"&gt;Custom MDM solution for Android Tablets and Linux Media Players&lt;/a&gt; that we built for one of our customers. These devices are deployed in clinics across US delivering educational content to the patients.&lt;/p&gt;

&lt;iframe width="1280" height="720" src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/Enterprise-Mobile-and-MDM-Health-and-Media-space.mp4"&gt;&lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <title>Rohan's "Overnight" Success</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/intersectfund-overnight-success/"/>
    <id>http://www.multunus.com/blog/2015/11/intersectfund-overnight-success/</id>
    <published>2015-11-23T23:01:21+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Find your life’s purpose and then throw yourself at it with all of the energy you can muster. And success will come calling overnight.&lt;/p&gt;

&lt;p&gt;For Rohan, the “Overnight” part was about 7 years.&lt;/p&gt;

&lt;p&gt;We learn something from every one of our customers. Our takeaway from Rohan? Learn to enjoy the journey of growth. When all of the early euphoria and excitement goes away, the ability to see each experience - whether its failure or success - as a step toward growth, is what will keep you going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A key career decision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rohan Mathew founded the IntersectFund, a microfinance institution in 2009. Check out his 
&lt;a href="http://tedxtalks.ted.com/video/Investing-with-love-Rohan-Mathe"&gt;TedX talk&lt;/a&gt; below. He talks about Jorge, a poor immigrant and a minimum wage worker struggling to make ends meet. And how the IntersectFund helps Jorge generate additional income by giving a micro-loan to setup a hot-dog cart business. They also teach Jorge some basic business skills along the way.&lt;/p&gt;

&lt;p&gt;[Click image below to see Rohan’s 9min TedX talk]&lt;/p&gt;

&lt;p&gt;&lt;a href="http://tedxtalks.ted.com/video/Investing-with-love-Rohan-Mathe"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/maxresdefault-1024x576.jpg" alt="Rohan_Mathew_TedX_Talk" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;He separately told me when I met him later that a key career choice he had to make was to let go of a lucrative Wall Street investment bank opportunity, to allow him to focus full-time on helping people like Jorge build better lives for themselves.&lt;/p&gt;

&lt;p&gt;Today, more than 7 years later, the IntersectFund does more than $5 million in micro-loans annually. They’ve helped &lt;a href="http://intersectfund.org/content/entrepreneur-directory/"&gt;Jorge, Michelle, Kim, Rita and hundreds of others&lt;/a&gt; set up decent lives for themselves and their families.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There’s more than meets the eye&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, how do you get started setting up a micro-credit non-profit institution from scratch? Well, you’d need to set up the loan processing system which in turn would include all of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Origination System:&lt;/strong&gt;
 This is the loan application process. Includes collecting the Loan Requestor’s details and why and how much of a loan they need, the risk of non-repayment and how the risk can be mitigated, their guarantors and what collateral they have&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The Servicing System:&lt;/strong&gt;
 This is the loan processing stage - which includes Risk Evaluation and Mitigation, Disbursement and Collections&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[Click on the following diagram for more detail]&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/06/Intersect-Fund-Landscape.001.jpg" alt="micro-lending-processing-system" /&gt;
Once you’ve figured out all of the above, you’d also have all those other things too:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Hiring and training the best people you can find&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep growing your customer base&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Raise funds from foundations by submitting applications and winning grants from them&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Managing your cash flows effectively so you can keep the lights on&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keeping everyone on the team motivated by constantly helping everyone clearly see the vision&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Making sure &lt;a href="http://avc.com/2010/09/what-a-ceo-does-continued/"&gt;you’re not being a bottleneck for the team, are running great meetings and keeping yourself fresh&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Using software technology and automation to increase efficiency in operations.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the hundreds of other things that every entrepreneur would need to do.&lt;/p&gt;

&lt;p&gt;Not for the faint of heart. And certainly not stuff you can get done overnight.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software for higher efficiency&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Each of the items in the above list deserves a post of its own. For the rest of this post, we’ll focus on that last item in the above list: Software.&lt;/p&gt;

&lt;p&gt;There’s not much you can do without software these days. The better you can figure this part out, the faster your growth is going to be.&lt;/p&gt;

&lt;p&gt;Rohan’s choice of software tools for his key tasks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Zoho Creator [think, Google Forms on steroids] for accepting loan applications.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MS Excel for the financial models and risk analysis.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MS Word for creating loan agreements.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;RightSignature for electronic signing of the agreements.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These tools are great when used standalone. But to use them together, there’s still the manual task of copy/pasting data between these tools.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The Loan application info from Zoho Forms into Excel.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The approved loan amount, required collateral and the repayment terms from Excel into Word.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The loan agreement from Word into RightSignature for the final signing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not to mention the rework involved when things would go wrong, which was also a common scenario.&lt;/p&gt;

&lt;p&gt;It was clear that more automation was needed. Here’s the 2 standard options most people evaluate at this point:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Plan A: Buy an off-the-shelf solution&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Plan B: Hire a team to build a complete solution from scratch&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;“Do something well or not at all” - Rohan&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That’s probably the mantra that Rohan repeats more than anything else. Just because you’re a non-profit doesn’t mean you’ve got to compromise on quality. Visit the offices of the IntersectFund in New Jersey and you’ll realize that he follows through on that principle.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It’s a beautiful and highly functional office. Just the kind of setup you’d expect from a venture funded startup in Silicon Valley.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They have the best hardware money can buy - top of the line Apple laptops, Retina solution 27” monitors, iPads for all their staff.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They have an absolutely no-compromises principle for hiring talent - they’ve proven that it is possible to attract great talent even if you can’t pay big bucks. You just need a really big vision and be totally committed to it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With those kind of standard already in place, it’s not surprising that when it came to choosing a software platform for their loan processing system, Rohan was looking for something world-class there as well.&lt;/p&gt;

&lt;p&gt;Unfortunately none of the off-the-shelf solutions even nearly met his expectations.&lt;/p&gt;

&lt;p&gt;He switched to plan B - to hire a team to build the solution. In his search to find such a team, he looked at both hiring his own team and also at outsourcing. Once again, most of the people he met just didn’t match his expectations in terms of quality. Occassionaly he found a few people who leveled up to his standards, but they were too expensive to fit into his operational budget.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The hacking phase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It was a good 9 months or so before Rohan discovered that neither plan A nor plan B was going to work well for him.&lt;/p&gt;

&lt;p&gt;You’d think that their growth was stalled during this time - and that their future was going to be bleak, with everyone in the company copy/pasting data and doing a lot of inefficient manual work.&lt;/p&gt;

&lt;p&gt;But if you took a look at the growth curve of the IntersectFund during this period, you’d have noticed a graph going up and to the right, with more loans applications being received and getting processed faster.&lt;/p&gt;

&lt;p&gt;Were they hiring more humans for getting all that manual work done? Nope.&lt;/p&gt;

&lt;p&gt;Rohan realized that almost anyone can code these days. &lt;a href="http://first20hours.com/"&gt;It just takes a bit of practice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During the day he was the CEO at Intersect, running the company.&lt;/p&gt;

&lt;p&gt;In the nights, he would transform himself into a hacker - piecing together the integrations between Zoho, Excel and Word - using Zoho Scripts, Excel Macros and VB Script.&lt;/p&gt;

&lt;p&gt;It was now possible to get an application filled up in Zoho and generate the draft agreement for signing in RightSignature is less than half the time it would take earlier.&lt;/p&gt;

&lt;p&gt;That was the “software system” that the IntersectFund relied on, to grow from the initial set loans to more than $3 million in annual disbursements.&lt;/p&gt;

&lt;p&gt;The lesson here? Innovative hacking can take you a long distance :).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The hack helps, but the hacker becomes a bottleneck&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Eventually, the hacks put together by Rohan started showing signs of age when he became the bottleneck for the whole system. The solution, while it worked quite well, was mostly a tool that only Rohan could use.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It wasn’t online and hence not accessible by anyone at anytime&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It didn’t have an easy to use interface that would allow anyone on the team (not just experts) to use the system&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The business rules that were coded into the tools were understood to a large extent only by Rohan. This made it necessary for other members on his team to always reach out to him for clarifications.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The growth in the number of loans was slowly starting to stall. It was now time for a system that would get Rohan out of the way and help speed up growth significantly.&lt;/p&gt;

&lt;p&gt;With the kind of growth they’d already achieved with the hacked-together solution, it was clear that investing in an end-to-end online loan processing system would have the kind of RoI that would be easy to demonstrate, to the board and the rest of the team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A fortuitous association&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Around the same time, Multunus was helping Lend for America (LFA) launch an online campaign for them. LFA is a non-profit that helps, encourages and guides students at universities to set up their own micro-credit institutions out of their dorm rooms.&lt;/p&gt;

&lt;p&gt;LFA also happens to be wholly owned by the Intersect Fund.&lt;/p&gt;

&lt;p&gt;One thing led to another and soon, we were speaking with Rohan about building the next generation online loan processing system - together. Our team worked remotely out of Bangalore, with Rohan providing guidance from New Jersey.&lt;/p&gt;

&lt;p&gt;Fast forward another 12 months. Here’s the progress since then:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We’ve launched two key parts of the Servicing system:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Closer&lt;/strong&gt;: The workflow for converting an tentative approval for a loan application to a signed agreement with the borrower&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Servicer&lt;/strong&gt;: The system that actually disburses the funds and sets up the automatic repayment schedule as well.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rohan is no longer the bottleneck - the application is online and usable not just by everyone at Intersect, but also by their customers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;While Rohan continues to hack on the code (along with our programmers), he now has more time to focus on growing his business.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The rest of the staff at IntersectFund now has a 24/7 dashboard they can use to communicate much better among themselves. They also have a lot more visibility into how the company is doing overall.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Last, but not the least, the growth in the number of loans has been almost dramatic. The projected disbursement for this year is upwards of $5 million.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/unnamed-11.png" alt="success_intersect_fund" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;“Overnight” Success&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When we hear stories of success in the media, all we end up seeing are graphs like the one above. And we’re led to believe that success happens almost overnight.&lt;/p&gt;

&lt;p&gt;Of course, the journey is usually much longer, arduous and fraught with unexpected ups and downs all along the way.&lt;/p&gt;

&lt;p&gt;What keeps the best entrepreneurs and teams moving forward during those times is a of a better future. To make the world a better place. For people like &lt;a href="http://intersectfund.org/content/entrepreneur-directory/"&gt;Michelle, Kim and Rita&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/unnamed-1-959x1024.jpg" alt="Entreprenuers" /&gt;
It’s been 7 years since Rohan started IntersectFund. And by the looks of how they’re doing today, they’re not stopping any time soon. They’re a team that clearly sees everyday as a learning experience. They’ve learned how to enjoy their 
journey.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>When to hire?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/when-to-hire/"/>
    <id>http://www.multunus.com/blog/2015/11/when-to-hire/</id>
    <published>2015-11-23T22:22:45+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Abhi, a friend of mine and his brother run an early stage consulting company out of the UK. Here's an email he sent me recently:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How do you synchronize your capacity with your sales? It feels like a chicken and egg problem, no capacity means no sales, no sales means no capacity.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We also do not want to hire unless there is a clear customer commitment for 3 to 4 months and we have enough money to cover for one year salary.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I am in need of your advice on this. Could you help me figure this?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here's the response I sent him:&lt;/p&gt;

&lt;p&gt;Hi Abhi,&lt;/p&gt;

&lt;p&gt;This is a bit of a complex topic, so this response is long.
Its basically two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The first few people you hire are the ones who are critical for you to
&lt;strong&gt;grow&lt;/strong&gt; your startup. Treat them like your co-founders, not as employees.&lt;/li&gt;
  &lt;li&gt;There is no business without risk. But even risk is sometimes blown out of proportion. In most cases, it’s the fear of failure rather than failure itself, that holds people back.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here's the full response:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Its not about Capacity Planning, yet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You &lt;em&gt;could&lt;/em&gt;  think of this whole thing as a purely 'capacity planning' question. But that's more useful once you cross the 15-20 people threshold. At this early stage, you can rest assured that there's more than enough work out there - you just need to get your sales and marketing working well for your market to discover you.&lt;/p&gt;

&lt;p&gt;So, this response instead focuses more on the 'how' (and "why") of hiring the first 5 employees. This is important because you're going to grow faster when you've hired some really good people initially. The value they will add will not just be in terms of shipping client work - it will also be in terms of ideas to expand your business - while they're wearing the 'co-founder' hat. Of course you've got to encourage them to do that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Marketing and Sales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your primary responsibility as the CEO of an early stage company is to get your Marketing and Sales in order. You should focus on building a pipeline and ensure that at least 50% of your time is spent in working toward that.&lt;/p&gt;

&lt;p&gt;[Yes, when you’re also coding, this means 80-100 hours weeks in the beginning. But you knew that already :)]&lt;/p&gt;

&lt;p&gt;To make this happen, you will need both of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The Knowledge and the Skills&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Confidence that you will succeed
As you gain more knowledge and skill, you will gain more confidence. And as you gain more confidence, you will gain more knowledge and skill. Its an upward spiral.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The earliest employees&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Its best to have the following expectations for the first 5-10 employees:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;That its called a startup for a reason - there will be ups and downs. But therein lies the opportunity to actually make a difference with their work. Its different from a standard 9 to 5 job in that, in this case they have the opportunity to actually help build the business.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Of course, you as the founder will also have to invest time to make them feel as co-owners in the company. That they have a significant voice and influence on the company’s future.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A good test of finding the right employee is if they’re leaving another offer for your company - for the same amount of money, or in the best cases, for less money - that you’d be offering them.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Money is not the most important thing for the right kind of people - especially for those who love the startup vibe. And you need to find those kinds of people.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You might consider giving some kind of reward - say sharing profits or providing stock options - as a recognition of the risk they would be undertaking.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;But this is not actually required. I did not do this.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Culture&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The following aspects of trust are very key to focus on, right from the start:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Autonomy&lt;/strong&gt;: You will need to encourage (not just allow) your people to make mistakes and learn from those mistakes. They need that space to experiment and fail. This will lead to two things:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A high sense of ownership&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Trust&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Embracing Failure:&lt;/strong&gt; I love this image:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/4cd7af25c08a9c243dd175386cf6966f.jpg" alt="embrace-failure" /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should have space to fail as the founder. And you should be comfortable in your skin failing in front of your people. You should also give everyone on your team space to fail. So, this goes hand in hand with Autonomy.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Your company has to stand for something more enduring than just making money. Why should your company exist? Why should people come into work everyday? Those reasons may not resonate with everyone - but if it resonates with you and you’re able to get your initial employees galvanized with that sense of purpose, you’ll do fine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Customer Service:&lt;/strong&gt; Here’s a &lt;a href="http://wefirstbranding.com/wp-content/uploads/2012/06/20110508-1044301.jpg"&gt;super nice quote from Gandhi&lt;/a&gt; that I think explains this very well. To ensure that your people really get the importance of this, you may need to demonstrate how much you personally believe in this. For example, by providing refunds to customers when you guys are in the wrong - or extending a helping hand, when they’re down - just because they were once your customer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;a href="https://hbr.org07/four-lessons-on-culture-and-cu/"&gt;Zappos culture&lt;/a&gt; is also worth reading about - for example, how they don’t optimize for “call times” for their customer support staff and instead optimize on customer satisfaction - unlike most other e-commerce firms.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Integrity&lt;/strong&gt;: This is important at two levels:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Honesty with others (the team and with customers):&lt;/strong&gt; This should be non-negotiable. And should be emphasized very strongly, IMO.&lt;/li&gt;
  &lt;li&gt;We’ve let people go at Multunus when we sensed a lack of this.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Focusing on &lt;a href="http://personalmba.com/safety/"&gt;safety&lt;/a&gt; will help make it easier for people to be honest with you&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Honesty with oneself :&lt;/strong&gt; You will know that you’re making progress on this front when people start challenging the status quo. When they politely but firmly question decisions you’re making as the founder, you know that your people are trying to be consistent with their own beliefs and being courageous enough to follow through with what they believe in. That they actually care for themselves and for the company.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;This is admittedly quite hard. And it takes time. But be persistent, and you will eventually start seeing results.You will be able to make it easier for people to be honest (in both of the above ways) if you focus on the Autonomy and the Embracing Failure points above.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Vision&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is related to the point about Purpose above. But this is important to highlight as a separate point, because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Sharing your vision for the company is going to be key to attracting great talent - and to inspire people enough to take that leap of faith to join your company instead of another one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This will be the compass that will guide both you and your team - when they have to make everyday decisions.
Should you work with a customer who has more money or with someone who has a great vision? Should you hire someone who’s a great programmer or someone who’s a much better team player, but has some gaps in his skills? Should you focus on clean code or take shortcuts to ship faster?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Risk&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There is no business without Risk. The &lt;a href="https://www.youtube.com/watch?v=bwZyyAxkqQc&amp;amp;feature=youtu.be&amp;amp;t=3m33s"&gt;SpaceX story&lt;/a&gt; is especially telling here. You as the founder have to believe in yourself, in your vision and and in your team and take brave steps forward, when the future is not clear.&lt;/p&gt;

&lt;p&gt;Sometimes things work out and sometimes they don’t. And that’s okay. But if you stop taking risks, I’m afraid, growth is just not going to happen. In most cases, it’s the fear of failure rather than failure itself, that holds people back.&lt;/p&gt;

&lt;p&gt;The other key thing to keep in mind is that Time is a startup’s biggest enemy. Not money. So, when even you’re not totally sure about something, but all of the above points are taken care of, go ahead and take the step forward. You’d have spent your time wisely, even if things didn’t turn out so well. Why? Because you’d learned something in the process and become wiser.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I hope this helps. Its best to see entrepreneurship as a journey of personal growth and an opportunity to interact with and learn from the fantastic community out there.&lt;/p&gt;

&lt;p&gt;So, to summarize in just one word: “Start”. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Work Remotely or Together? That's the wrong question.</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/work-remotely-or-together-thats-wrong-question/"/>
    <id>http://www.multunus.com/blog/2015/11/work-remotely-or-together-thats-wrong-question/</id>
    <published>2015-11-23T21:56:57+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;San Francisco. It’s 11AM on Monday.&lt;/p&gt;

&lt;p&gt;The office is buzzing with activity. People sitting in halls plugging away at their computers. Animated discussions happening in meeting rooms. Everyone visibly busy doing their thing. Right?&lt;/p&gt;

&lt;p&gt;Nope.&lt;/p&gt;

&lt;p&gt;At the office of Automattic - the company that makes and ships Wordpress and employs over 250 people - it’s as silent as a ghost town. Almost everyone here works remotely. They physically meet each other once or twice a year, but all other interaction is purely online.&lt;/p&gt;

&lt;p&gt;Is this because Automattic has a global workforce? And it’s just logistically easier (cheaper?) to have them work remotely rather than setup office spaces everywhere? Or is there more to it?&lt;/p&gt;

&lt;p&gt;Automattic is what you’d call a &lt;a href="https://en.wikipedia.org/wiki/ROWE"&gt;ROWE&lt;/a&gt; - a “Results Only Working Environment”. It doesn’t matter when or where you work - as long as you’re producing “Results”.#Which option or
whose option? That is the question&lt;/p&gt;

&lt;h2 id="which-option-or-whose-option-that-is-the-question"&gt;Which option or &lt;strong&gt;&lt;em&gt;whose&lt;/em&gt;&lt;/strong&gt; option? That is the question&lt;/h2&gt;

&lt;p&gt;At Multunus however, we’ve been averse to remote work. We’ve believed that co-located teams end up being more close knit, have fewer communication gaps and are more productive. We were a strictly “no remote work” company until about 6 months ago.&lt;/p&gt;

&lt;p&gt;Actually, let’s take a step back here. Who’s “we” here? The whole team or just the “senior management”? The truth is we didn’t know. We’d just assumed that everyone on the team believed in co-location as well.&lt;/p&gt;

&lt;p&gt;But it was time to find out. What if we actually let the teams decide? What would they choose?&lt;/p&gt;

&lt;p&gt;It’s been 6 months since we left this choice to the team. The trend we’re seeing at Multunus is that people like to do both - that is work out of the office and work remotely.&lt;/p&gt;

&lt;p&gt;Some of the reasons for remote work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Freedom to run errands near their home&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Avoid traffic at least a couple of times a week&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Just work alone and get stuff done without getting pulled into meetings&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And for co-location:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Attend meetings face to face&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Collaborate more closely with the team on tougher challenges&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bond better with teammates&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Engage with the business better&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The impact? We don’t have a full office everyday because people come in when it works for them. That’s it. Nothing more. Nothing less.&lt;/p&gt;

&lt;h2 id="control"&gt;Control&lt;/h2&gt;

&lt;p&gt;So what did we learn? That it’s okay to let everyone just be.&lt;/p&gt;

&lt;p&gt;We weren’t always like this. Fixed timings, a company wide morning standup at 9:30AM (sharp!). Followed by more fixed time meetings. Everything was “fixed” for you.&lt;/p&gt;

&lt;p&gt;But very few of us would attend and adhere to these meetings on time. Most of us struggled. It got to a point, where we’d almost want to celebrate just for coming in on time!&lt;/p&gt;

&lt;p&gt;We also spent precious time and energy in stressful conversations around why people were coming in late. And this would get in the way of actually making progress on other important tasks.&lt;/p&gt;

&lt;p&gt;It was clear that people had the
intention to come in on time - but the work timings were not synced with their biological clock and productivity cycles.&lt;/p&gt;

&lt;p&gt;The more painful thing to admit was that the meetings were actually not very useful either. There was no agenda, no one was ever really prepared. &lt;a href="https://www.gv.com/lib/meetings-that-dont-suck"&gt;Ad hoc meetings. The worst kind.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="what-matters-most"&gt;What matters most&lt;/h2&gt;

&lt;p&gt;We’d totally missed the forest for the trees. The intent of the morning meeting was to get everyone engaged with our business and to get that sense of teamwork going. But it had the opposite effect - one where people felt more disconnected with the company.&lt;/p&gt;

&lt;p&gt;Why was being on time at work everyday such a big deal? Was it because we didn’t trust each other to get their work done at their convenience?&lt;/p&gt;

&lt;p&gt;Yes, some teams needed to collaborate in person - so they would need more overlap in terms of timings. But why was it required for the senior management to create these “policies” around fixed times and co-location?&lt;/p&gt;

&lt;p&gt;It can be scary to just let go and give space to the team to make their own decisions. To allow them to experiment. To make mistakes.&lt;/p&gt;

&lt;p&gt;But in return, you get a greater sense of ownership, significantly higher levels of trust and in most cases - actually
better decisions being made. It makes sense when you think about it. You know more about
your situation than anyone else - so, you end up making better choices as well.&lt;/p&gt;

&lt;p&gt;In the end it’s not about what the “remote working policy” of the company should be.
It’s about treating your team as adults and making the workplace more autonomous.&lt;/p&gt;

&lt;h2 id="caveats"&gt;Caveats&lt;/h2&gt;

&lt;p&gt;We’ve now made a bunch of changes: No more morning stand-ups, totally flexible hours and work from home for anyone at anytime - based totally on their convenience.&lt;/p&gt;

&lt;p&gt;But what’s the risk with this approach? How do we avoid this kind of autonomous working environment from becoming chaotic? Or in the worst cases, people exploiting this kind of high trust environment?&lt;/p&gt;

&lt;p&gt;That’s where great hiring comes in. Only hire the kind of people who can leverage this kind of autonomy to make themselves more successful.&lt;/p&gt;

&lt;p&gt;Remember:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;They’ve got to be very good communicators - they should be able to write and speak very good English (or whichever language suits your team the best).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;They’ve also got to be energetic, honest and self-confident.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Folks who know how to work in teams very well. Look for great listening skills. Equally importantly, look for folks who have high expectations from their teammates.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, have small teams and provide them with great tools to help them collaborate well. None of our teams are larger than 3-4 people and we use Slack, Trello and Skype heavily.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;At the end of day, most day-to-day operational decisions are largely cultural decisions. Every “policy” that you create (or better yet, choose not to create :) ) affects the overall engagement of the team.&lt;/p&gt;

&lt;p&gt;The perspective you choose to take matters. You can choose to create new rules that eventually constrain the creativity of your team or you can let them grow by getting out of the way.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Losing a Master Craftsman</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/losing-master-craftsman/"/>
    <id>http://www.multunus.com/blog/2015/11/losing-master-craftsman/</id>
    <published>2015-11-23T21:37:45+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/4385681932_5c5c9a578b_o.jpg" alt="losing-a-master-craftsman" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.flickr.com/photos/reallynuts/"&gt;Photo Credits: Abhishek Sarda&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Early last year we hired one of the brightest guys we’d seen in a long time. And then lost him just 12 months later. Let’s call him Guru.&lt;/p&gt;

&lt;p&gt;This is a difficult topic to talk about. But I wanna share some key lessons from this experience.&lt;/p&gt;

&lt;p&gt;When we hire, we look for both skill fit and cultural fit - and Guru did well in both. So, what went wrong?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This&lt;/strong&gt;: We learned much later that he did too well on the skill fit side.&lt;/p&gt;

&lt;p&gt;Read on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The initial signs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Guru joined our team a few days after we offered him. The first few months were good. He seemed to gel well with our team and with our customers. We shipped working software together. He seemed happy as well.&lt;/p&gt;

&lt;p&gt;Then things got trickier. We landed a large sized project from a customer. And this one came with tight deadlines.&lt;/p&gt;

&lt;p&gt;Once again, things looked good initially. But the team found it hard to get into a rhythm. When we dug deeper, we realized that a significant amount of effort was being spent on technical discussions which were important, but not the need of the hour.&lt;/p&gt;

&lt;p&gt;There’s this concept called YAGNI - which is short for You Aren’t Gonna Need It. And it seemed like the team was spending a lot of time deliberating on YAGNI stuff. And in most cases, we discovered that Guru was spearheading those discussions.&lt;/p&gt;

&lt;p&gt;There was significant friction. As we continued to miss deadline after deadline, the technical arguments escalated into serious discussions around the capability of the team to deliver on the project. We finally made the decision to move Guru out of the project and bring in someone else to help get the project back on track.&lt;/p&gt;

&lt;p&gt;That got the project back on track.&lt;/p&gt;

&lt;p&gt;But..it’s never that simple, is it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The turning point&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over the next 6 months Guru worked with another customer. But this time, it was at their location. Different working environment, different culture. Guru seemed happy there, and so was the new customer. When that contract ended however, Guru resigned from Multunus as well.&lt;/p&gt;

&lt;p&gt;That didn’t seem like a huge deal at the time. It was a couple of months later that I bumped into the second customer again. We spoke for a while, and then I asked what he thought about Guru. His response? “He was remarkable”.&lt;/p&gt;

&lt;p&gt;The customer is always right, of course. And it was time for us to take a hard look at the mirror and rethink our whole approach toward people and teams.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learnings and changes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had been optimizing everything around just two key points:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Customer Success, and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Team Collaboration&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This works in 80-90% of situations. But for folks like Guru, that just doesn’t cut it.&lt;/p&gt;

&lt;p&gt;To nurture people like Guru, we need a strong focus on Mastery. We need a culture that both encourages development of mastery. 
We also need to know how to spot and recognize mastery when we come folks who demonstrate it.&lt;/p&gt;

&lt;p&gt;Here’s some changes we’re putting in place to move faster toward mastery:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Some people are better suited for Individual Contributor roles. We’re loosening our team structure to accommodate this fact.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Our new &lt;a href="https://weekdone.com/resources/objectives-key-results"&gt;OKR’s&lt;/a&gt; focus on acceleration toward the “pursuit of mastery” as a key objective. As a first step, we are experimenting with a 20% investment time for our team. This will mean a 20% decrease in our revenue but we believe it’ll be worth it in the longer term&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’ve heard of the 
&lt;a href="https://en.wikipedia.org/wiki/Butterfly_effect"&gt;butterfly effect&lt;/a&gt;. In our case Guru was the butterfly.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A dark cloud. And its silver lining.</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/dark-cloud-silver-lining/"/>
    <id>http://www.multunus.com/blog/2015/11/dark-cloud-silver-lining/</id>
    <published>2015-11-23T21:35:50+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/unnamed.jpg" alt="unnamed" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.flickr.com/people/hb2/"&gt;Photo credits: haRee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of our more challenging consulting assignments was to build a Mobile Device Management (MDM) solution from the ground up. It’s a network of 
&lt;strong&gt;5000+ devices&lt;/strong&gt;- android tablets and linux based video players, installed across the US in hundreds of cities.&lt;/p&gt;

&lt;p&gt;These devices would be loaded with health content and installed at health clinics - mostly educational videos about specific ailments. And patients consume this content when they visit these clinics.&lt;/p&gt;

&lt;p&gt;We built the software that allowed anyone to control these devices remotely. It was complex. You could control everything on these devices - what videos they played, the volume, the brightness, interspersing ad content between videos etc&lt;/p&gt;

&lt;p&gt;[Click the image below to watch the video.]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=xfpxOCI8dlc"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/MDM.png" alt="MDM" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A suspicious “Virus”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Things were going well, when one day, we got a &lt;strong&gt;Red Alert&lt;/strong&gt; email from our customer. Some of the devices were not accessible from the command centre. This kind of problem usually corrected itself, when the internet connection at the clinic got back to normal.&lt;/p&gt;

&lt;p&gt;But this time it was different. It was almost like a virus - spreading across the entire network, one device at a time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Cause&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To cut a long story short, the devices were left with zero disk space to function. Some software we had installed on these devices was eating up the space.&lt;/p&gt;

&lt;p&gt;Unfortunately none of the techniques we tried to remotely resurrect these devices worked. The only option left was to send technicians to the clinics and run the software fix on them locally. And this was costly. Very costly. :(&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Safety Valves&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There were supposed to be two safety valves:&lt;/p&gt;

&lt;p&gt;The first was a test device we used to simulate our code in. Why did we not see the problem on that one? Turns out it was much newer than the dead ones on the network. And new devices have more disk space. A lot more.&lt;/p&gt;

&lt;p&gt;The second was a monitoring system we were building to check on things like disk space. The only problem? It was still work-in-progress, almost ready to prevent this exact kind of nightmare.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When the chips are down…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is not a great story. It didn’t end well. We worked round the clock that entire week supporting the technicians while they fixed device after device.&lt;/p&gt;

&lt;p&gt;That was not a fun week. None of the usual banter and humor that you’d otherwise see. But there was also no finger pointing. No arguments. No grumbling. Just silent work.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/9711009229_52ec1ef0c0_b-1024x674.jpg" alt="Serenity" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.flickr.com/photos/davidyuweb/"&gt;Photo Credits: David Yu&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is what we’d like to call teamwork. Resilience in the face of intense adversity. The maturity to empathize with your team members and take collective responsibility. To help everyone focus on the job at hand. To introspect silently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The bright side&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Talking about this story is not easy. But it’s a good reminder that tough times almost always bring with them something good as well.&lt;/p&gt;

&lt;p&gt;For us, it was the increased trust across the team. When your colleagues become your friends and your supervisors become your mentors - that’s a nicer workplace.&lt;/p&gt;

&lt;p&gt;How about you and your team? Is this something that resonates with you? Would love to hear your stories too. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Art of Execution</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/art-execution/"/>
    <id>http://www.multunus.com/blog/2015/11/art-execution/</id>
    <published>2015-11-23T15:38:50+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;You have a very big goal that you want to achieve but if you don’t know how to execute, then having a goal or a dream is pointless.&lt;/p&gt;

&lt;p&gt;So, what is execution? It is, in simple terms, the process of carrying out a plan or a strategy for achieving a goal. It is a discipline rather than a technique or a tactic. Most people find it difficult to complete a task or a project basically because of wrong execution. If the execution is wrong then the quantity and the quality of output is lamentably low. The way you execute something is invariably exhibited on the kind of output you generate.&lt;/p&gt;

&lt;p&gt;To get better at the art of execution, you need to know a few concepts which are the biggest obstacles to great execution. Here are a few obstacles that I know in no particular order:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obstacle #1: Achieving Perfectionism&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you are on a project or a task, you think of ways to do it in the best way you can. You keep quality in mind and start to work on the project with aplomb. Quality is of course important but most people try to achieve the “Perfect” state to complete their project. This is where they fail to get things done. You can almost never reach a perfect state as the sole reason being that it is a moving target. You can always keep improving. There’s no end to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson Learned:&lt;/strong&gt;
 Looking for a reasonable perfectionism is a way to get things done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obstacle #2: Slower Decision Making&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are always times when you get stuck at a certain point where you need to decide in which direction you need to be taking. Sometimes, you are even unclear on the directions itself. This point is what I call the “Grey” point. You need to understand that when you are on a task you need to get it done as fast as possible to get early feedback. The slower the process of decision making, the slower it takes to get it done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson Learned:&lt;/strong&gt;
 Make quick decisions to get your task done and get quick feedback so that you can be better the next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obstacle #3: Working on Multiple Tasks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most people work on multiple tasks at the same time. You are in this imaginary world where you think you are getting so many things done at the same time. But the reality is you are going no where. This is the concept of WIP or "&lt;a href="https://en.wikipedia.org/wiki/Work_in_process"&gt;Work-In-Progress&lt;/a&gt;". As you keep increasing the number of unfinished items that you're juggling, you'll find it much harder to make progress on any of them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson Learned:&lt;/strong&gt;
 Its much more ideal to focus on and complete what you're working on first, and then to move onto the next thing. The lesser WIP you have the more things you get done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Obstacle #4: Fear of making mistakes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is kind of related to the above obstacle “faster decision making”. When you make faster decisions, you fear that you may end up making mistakes and that you could have made a better choice. Creating an environment around you where you could carry out experiments without fear will help you execute better.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lesson Learned:&lt;/strong&gt;
 Remove the fear and get your work done. There is always something that you can learn from each and every mistake.&lt;/p&gt;

&lt;p&gt;The above are a few points I could think of which comes in the way of execution. Please let me know if you can think of some more in the comments section below.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>6 Tips to Give Your Website an Instant Facelift</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/6-6-tips-give-website-instant-facelift/"/>
    <id>http://www.multunus.com/blog/2015/11/6-6-tips-give-website-instant-facelift/</id>
    <published>2015-11-18T00:29:15+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/paint.jpg" alt="paint" /&gt;&lt;/p&gt;

&lt;p&gt;If your website or application hasn’t had a touch of a professional designer yet, try the follow tips to give it an instant facelift. These are my compilations from the most common mistakes I’ve seen and will work in most cases.&lt;/p&gt;

&lt;h2 id="delete"&gt;1. Delete&lt;/h2&gt;

&lt;p&gt;This is the hardest! Take a look at your page and remove as many details as you can that are adding almost no value. Unless you have a strong justification for it and can back it up with data, remove it.&lt;/p&gt;

&lt;p&gt;You might feel that every feature, every section is important. But by keeping all of it, you end up diluting the focus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Try this exercise alone or with the team:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Start with $100&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Distribute the money appropriately to the sections on the screen based on importance.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once you've exhausted all of it, deliberate if you can get rid of the sections that received little or no money.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consider doing a &lt;a href="http://pages.ucsd.edu/~jalevin/gp/blurred/index.html"&gt;squint test&lt;/a&gt; by leaning back and looking at the screen while squinting your eyes.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="highlight"&gt;2. Highlight&lt;/h2&gt;

&lt;p&gt;The most important detail and actions on the screen should be easy to spot. If you did the exercise, you know what the important details are. Make sure their importance is represented visually too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here are a few techniques to do that:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Make the text larger or bolder&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add contrast by changing the color of the text or background to a more contrasting one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If it’s the text on an image, add a black overlay to the background and a black text shadow.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="simplify"&gt;3. Simplify&lt;/h2&gt;

&lt;p&gt;Unless you are creating an art, we often like to see uniformity in what we see. Reduce the number of things the user needs to get used to.&lt;/p&gt;

&lt;p&gt;How many typefaces, text sizes and colors are you using? Try limiting the base colors and typefaces to two. Use the shades of the chosen color if required. Also try using single column layouts.&lt;/p&gt;

&lt;h2 id="add-more-white-space"&gt;4. Add more white space&lt;/h2&gt;

&lt;p&gt;When in doubt, err on the side of more white space. For paragraphs, try a line height of 1.4 to 1.7 times the font size. Add a good amount of spacings between title and paragraphs. Make sure there is enough room around text in buttons and around them too.&lt;/p&gt;

&lt;h2 id="limit-characters-in-content"&gt;5. Limit characters in content&lt;/h2&gt;

&lt;p&gt;Limit characters to 60 to 70 in a line. You can do this by adjusting font size and the width of the test area.&lt;/p&gt;

&lt;h2 id="align-everything"&gt;6. Align everything&lt;/h2&gt;

&lt;p&gt;Draw grid lines and try to align as many elements as you can. Also try keeping equal spacings around each element.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;With these 6 tips, your web or mobile application should see a facelift. But the techniques mentioned here have more than what meets the eye. A professional designer will use the right techniques at the right places to meet the desired outcome.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Build super fast MVP's without programmers - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/super-fast-mvps-using-just-google-docs-part-1/"/>
    <id>http://www.multunus.com/blog/2015/11/super-fast-mvps-using-just-google-docs-part-1/</id>
    <published>2015-11-17T15:30:16+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;If you’re into software products, you probably hear the term “MVP” more often than you’d like. Sadly, this post isn’t gonna make your life easier.&lt;/p&gt;

&lt;p&gt;At Multunus , we’ve been doing our experimenting with Lean Startup principles, running our experiments and creating prototypes to test hypotheses.&lt;/p&gt;

&lt;p&gt;We love building quick prototypes with Google Docs and Trello. They’re both free and are available both online and as apps on your phone. I’ll dive into a few products that we’ve built just using these two tools.&lt;/p&gt;

&lt;p&gt;This post is about MoveIt. Ourtool, with a twist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Brain Power&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’m a neuroscience junkie. A &lt;a href="http://www.brainrules.net/exercise"&gt;common recurring point&lt;/a&gt;in&lt;a href="http://brainblogger.com/2015/03/11/exercise-boosts-brain-power/"&gt;brain research&lt;/a&gt;is the link between regular physical exercise and higher brain power. As a bonus, you also have some happy hormones that get released when you&lt;/p&gt;

&lt;p&gt;If more exercise is gonna make us smarter, we wanted that in our team. Get everybody to exercise and then make everyone smarter instantly. And then get the big bucks.&lt;/p&gt;

&lt;p&gt;Okay, we got a bit carried away with all that excitement. But it was good, because fast forward 6 months, we’ve actually made some decent progress.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first MVP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We’re a software company. And we like to build stuff.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our problem&lt;/strong&gt;: We wanted to start exercising. And we wanted to share our progress with everyone on team in a super easy way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The first step to solve that problem&lt;/strong&gt;: Of course, we need to build an app to track the team’s progress. And, if we could squeeze in a GPS based tracker into it too, that would be awesome. Oh, and we also need this to be on both iOS and Android.&lt;/p&gt;

&lt;p&gt;[Like I said. We like to build stuff.]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Total estimated effort&lt;/strong&gt;: at least a week something basic out the door. And that’s if, this was thething our team was gonna work on.&lt;/p&gt;

&lt;p&gt;Could we wait a week and risk all the excitement of starting to exercise die? Since we like to build stuff, we almost said “Yes” to that question.&lt;/p&gt;

&lt;p&gt;Thankfully though, better sense prevailed.&lt;/p&gt;

&lt;p&gt;So, we created a Google spreadsheet instead - a much more lean way of doing things. 6 of us feverishly added our names to the sheet and made grand plans to get out of bed and get moving. We’d then celebrate by bragging our progress on the spreadsheet. It was going to be great.&lt;/p&gt;

&lt;p&gt;Except of course it wasn’t. We met again a couple of days later, timidly opening up the spreadsheet to see a bunch of empty rows in there.&lt;/p&gt;

&lt;p&gt;But we * had*  to make this work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Thank you, Nike&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That’s when someone on the team shared about how great it was when the &lt;a href="http://www.nike.com/us/en_us/c/running/nikeplus/gps-app"&gt;Nike app&lt;/a&gt; had run the charity campaign a few months earlier in Dec.&lt;/p&gt;

&lt;p&gt;You did your bit by logging your running minutes in the app. And Nike donates a tiny bit of money to charity for each of those minutes.&lt;/p&gt;

&lt;p&gt;15min later, we announced: “Multunions! Go move those bodies. We’ll make every minute count. We’re gonna do the Nike thing too”.&lt;/p&gt;

&lt;p&gt;At this point, we had two options: Use the Nike App itself - it has a group feature that would have worked well enough. Or continue with our spreadsheet. We chose to continue with the latter.&lt;/p&gt;

&lt;p&gt;The Nike app is more guided and somewhat constrained in terms of the kind of exercise activities that is accepts as input. We wanted less control.&lt;/p&gt;

&lt;p&gt;We also needed a “leaderboard” with the total charity amount clearly displayed for everyone to see. This was much easier in the spreadsheet.&lt;/p&gt;

&lt;p&gt;Besides it wasn’t like we were expending serious effort into tweaking the spreadsheet anyway.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traction! And then a slowdown. Kinda.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Traction is about growing your userbase in themarketplace.&lt;/p&gt;

&lt;p&gt;Our “market” was just the Multunus audience. But when was the last time you successfully encouragedto move it?&lt;/p&gt;

&lt;p&gt;So, when the spreadsheet started to fill up with some nice meaty data - with folks logging in their minutes regularly, we were elated.&lt;/p&gt;

&lt;p&gt;This was going well for a week or two. And then things started to slow down. The numbers were dwindling in the spreadsheet with fewer people updating it each passing day.&lt;/p&gt;

&lt;p&gt;Just like you’d expect, right? Everybody knows consistent exercise is hard. How in the world can a spreadsheet solve that problem? It was time for some motivational talk to get things back on track.&lt;/p&gt;

&lt;p&gt;But wait!&lt;/p&gt;

&lt;p&gt;What if the team was exercising, but was forgetting to put in the hours in the spreadsheet? I was one of the users and I’d noticed myself forgetting every now and then.&lt;/p&gt;

&lt;p&gt;It was time for a quick survey. Sure enough, that was indeed the problem. Updating the spreadsheet was a chore separate from the exercising routine.&lt;/p&gt;

&lt;p&gt;Zooming in a bit more, it turns out that it’s not the easiest thing to pull out your phone, open Google Spreadsheet on it, open the exercise sheet, scroll to the bottom and then fill in your data cell by cell. Especially when you have sweaty hands.&lt;/p&gt;

&lt;p&gt;We needed something that was simpler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problem:&lt;/strong&gt; We wanted a solution that would make allow us to log an exercise entry in less than a minute and thereby reduce friction to use the app.&lt;/p&gt;

&lt;p&gt;We were now excited, once again. Could we scratch that “build an app” itch now?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The hacknight. And the second MVP.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The fact that we could start using the spreadsheet within 10min of thinking about it, had changed us. For good.&lt;/p&gt;

&lt;p&gt;Now, with that kind of instant gratification mindset embedded within us, could we wait for another week to have our app ready? No way!&lt;/p&gt;

&lt;p&gt;That’s why we’ve got hacknights. All we needed to do was to bribe our team with pizzas and coke. We got together the next Fri evening and started to hack away.&lt;/p&gt;

&lt;p&gt;And by early Sat morning, we had an app. Not exactly * instant*  gratification. But almost there.&lt;/p&gt;

&lt;p&gt;We got together on Monday and took another look at the app. Was it good enough to replace the spreadsheet? We were almost there.&lt;/p&gt;

&lt;p&gt;It was at least good enough, for us to spend another couple of late evenings on it - to smoothen it out. We moved the data from the spreadsheet and were now ready to exercise 
it (pun intended).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A communication tool&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fast forward to today. It’s been 6 months since that hacknight.&lt;/p&gt;

&lt;p&gt;The app now has a decent bunch of features. Here’s some of the features it has: &lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/MoveIt_Animated_Gif.gif" alt="MoveIt_Animated_Gif" /&gt;&lt;/p&gt;

&lt;p&gt;Beyond the obvious benefit of being able to track and compete on our exercise minutes in a much easier way, we’ve now got a tool that allows us to “silently” communicate with each other - about how each of us is investing in our health. And how much we care about each other’s health.&lt;/p&gt;

&lt;p&gt;And brain power. And making more money.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Learnings&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here’s our key learnings from this experience:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;MVP’s are not a fad. They do work. They’re fantastic for getting quick feedback and for learning from * real*  users. We were able to speed up our rate of learning significantly using just the spreadsheet.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We knew that the single biggest problem we had was ease of accessibility of the app itself and not really about motivating our team to exercise. So that’s what we focused on when building the initial app prototype.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Timeboxing"&gt;Timeboxing&lt;/a&gt; is a great tool for reducing scope of the prototype and making sure it the team does not get into analysis paralysis and fall prey to &lt;a href="https://en.wikipedia.org/wiki/Feature_creep"&gt;feature creep&lt;/a&gt;. We used that successfully for both the:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Initial spreadsheet prototype (timeboxed to just 10 min) and also for the,&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;App prototype (a working app was due at the end of the hacknight - which lasted about 6 hours)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It’s much easier to get a team motivated to get together to spend some extra effort building something that has traction. So, the idea is to keep going from one MVP to the next, as quickly as you can, getting real feedback from the market at each stage. Every dev team loves this kind of real feedback.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The upcoming posts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next 2 posts in the series will talk about how we used Google Spreadsheets and Trello to not just build prototypes, but actually full fledged * applications*  that we’re using on a daily basis within Multunus.&lt;/p&gt;

&lt;p&gt;Stay tuned.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How MFIs Work</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/11/mfis-work/"/>
    <id>http://www.multunus.com/blog/2015/11/mfis-work/</id>
    <published>2015-11-07T02:28:04+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;People.. were poor not because they were stupid or lazy. They worked all day long, doing complex physical tasks. They were poor because the financial institution in the country did not help them widen their economic base.” ― Muhammad Yunus, Banker to the Poor: Micro-Lending and the Battle Against World Poverty*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Historically, micro lending has been prevalent in the world. We would call them Sharks. These people would lend money at a very high rate of interest as high as 400%. In case the borrower did not pay up, the collectors would snatch away every single belonging they had and at times resort to violence as well. To avoid being in such a situation, the borrowers would again borrow from some other source to pay these Sharks. Thus this would result in an endless debt trap and borrowers would ultimately lose out on everything they have.&lt;/p&gt;

&lt;p&gt;MFIs have changed the scenario now. They have used the interest factor responsibly to create a social impact. To understand how they do this, we need to first understand how they work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MFI Workflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An Individual applies to an MFI for a loan, say a business loan of Rs 5,000. A Field Officer from the MFI who is assigned to that area visits the “would-be” borrower personally. The Field Officer then collects the required documents including business plans, evaluates and processes them along with his colleagues in the office. Once they are convinced that the intent of the loan is to actually grow the business and that he will repay, the MFIs will approve the loan. On approval, they will immediately sign the agreement and disburse the loan to the Borrower. For individuals who do not have access to banks, these Field Officers will again personally go over to collect the repayment amount periodically.&lt;/p&gt;

&lt;p&gt;We have often wondered - with Field Officers, people at the back end who actually process the loans and people who see that the entire system is smooth for the loan disbursement and repayment - how are these MFIs able to cover the costs?&lt;/p&gt;

&lt;p&gt;These are the operating costs of MFIs. The MFIs are generally created as a Non Profit Organizations initially. They would try to use the interest amount that they receive to cover the costs. Hence interest costs are higher than in banks. When the operation costs are higher than the interest received, they would try to seek donations as they cannot increase the interest rates. This is because as and when they start increasing the rates, social impact will come down. To reduce the risk of delinquency, the Field Officers or the personnel from the MFI would conduct financial training sessions for the borrowers.&lt;/p&gt;

&lt;p&gt;“.. but Banks also give loans”. Yes, Banks do give loans but are different from MFIs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MFIs and Banks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Prof Yunus quotes”  These MFIs work on the principle of keeping the interest low and funds available when required. Let’s see how these MFIs work vis a vis the Banks.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/parameters.png" alt="parameters" /&gt;&lt;/p&gt;

&lt;p&gt;We now have understood how the MFIs work. But this was in general. Each MFI works differently and hence have been broadly classified into different models.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Models of Micro lending&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model 1: Individuals getting micro loans from Banks directly&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this model the Banks provide micro loans to people, giving them the collaterals for the loan in terms of whatever little the borrowers’ own. Though the rate of interest will be less than in the other models, the process (includes a Guarantor) and the documentation required itself makes it difficult for the individuals to get loans from the bank.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model 2: Individuals getting loans from Organizations like MFIs with or without collateral&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the model usually followed in developed countries like USA. Intersect Fund is one such example who follows this model. In this model, individuals with no or very low credit rating can get loans for business or any other expenses. The individual themselves take responsibility for paying up the loan in small installments. As these are only individual loans and not dependent on any other external person, these loans can be negotiated in terms of the interest rates and the flexibility in repayment.&lt;/p&gt;

&lt;p&gt;Example: If the income of the individual is seasonal, he will repay more amount of loan during that time and less the other times. Another instance of the flexibility is that if the borrower is not able to repay the loan because of lower income than expected, then either the installment amount is changed or the loan itself is restructured so that he can make the payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model 3: Individuals getting loans from MFIs where they are part of a Joint Liability Group [JLG]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/JLGs.png" alt="JLGs" /&gt;&lt;/p&gt;

&lt;p&gt;This model is usually followed in developing and underdeveloped countries. In this model the borrower must belong to a group. This group can be as small as five. The group need not stand as guarantee for a loan for its members. Repayment responsibility is solely on the individual borrower. The Group itself oversees that everyone behaves responsibly and none gets into a repayment issue. No formal joint liability exists, i.e. there is no obligation that the Group pays on behalf of a defaulting borrower. However, they may often contribute the defaulted loan amount as this may jeopardise the credit standing of the entire group. Eg. Grameen Bank follows this model of lending.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model 4: Individuals getting loans in form of crowdsourcing of lenders [Peer to Peer lending (P2P)]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/p2p.png" alt="p2p" /&gt;&lt;/p&gt;

&lt;p&gt;In this model, technology is used as a platform to bring in together the lenders and borrowers. It is based on a form of crowdsourcing. When an individual needs the loan, he will put his requirement in this platform. The organization partners with MFIs and NGOs to validate the loan requirements. If it is genuine they would put the details of the borrowers in their web site. People who have small amounts to lend would then transfer this amount to the account created for the borrower. Once the full loan amount is reached, it is then transferred to the borrower. The Borrower would then make the monthly repayments which in turn would be credited to the lenders’ accounts. The risk is shared among many lenders who lent this loan. Example:&lt;a href="http://www.kiva.org/"&gt;KIVA&lt;/a&gt;is a platform that allows Peer to Peer lending. Kiva itself is a non profit organization and hence is able to keep their interest rates low.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Model 5: Individuals getting loans through MFIs where they are part of a Self Help Group [SHG]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2015/11/SHG.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/11/SHG.png" alt="SHG" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this model, individuals are part of a group of 10 to 20 members. They start saving regularly among themselves. These savings are pooled in and deposited in a bank until the group begins lending. This account is operated by the chosen representative for these groups. These SHGs lend to the members from the pooled-in savings. Whatever interest is being collected will be again put back into the group’s account. These excess funds are used for either lending or creating &lt;a href="http://www.multunus.com/blog/2015/10/multunus-and-mfi/"&gt;financial inclusions&lt;/a&gt; for the members in this group. The disbursement of the loan to its members will be at the discretion of the group. External loans will be provided to the group itself and not to any individual member of the group. To reduce the risk of non-repayment, the group meets very often, perhaps once a week, to help each other and to grow. One such SHG is &lt;a href="http://www.annapurnapariwar.org/"&gt;Annapurna Pariwar&lt;/a&gt; that started as a small group but now has greatly impacted the slums of the Indian cities of Pune and Mumbai.&lt;/p&gt;

&lt;p&gt;As and when new models emerge, the impact they have on the lives of people continue to increase.&lt;/p&gt;

&lt;p&gt;To conclude this post, I would like to quote Prof Mohammad Yunus again:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;“By simply capitalizing on core strengths and knowledge, companies and entrepreneurs can engage in an emerging business model that will enable them to create - and demonstrate - real, sustainable social impact in society”* .&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hence, my next post will be “Tech in MFIs”. This will also give insights on how Multunus is adding value to the MFI industry.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>MFIs and Financial Inclusions</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/10/mfi-and-financial-inclusions/"/>
    <id>http://www.multunus.com/blog/2015/10/mfi-and-financial-inclusions/</id>
    <published>2015-10-30T23:17:30+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/10/A_business_in_South_Sudan_benefiting_from_microfinance_6189731244.jpg" alt="A_business_in_South_Sudan_benefiting_from_microfinance_(6189731244)" /&gt;&lt;/p&gt;

&lt;p&gt;Announcement was …. “The Nobel Peace Prize 2006 is divided into two equal parts to Muhammad Yunus and Grameen Bank..”&lt;/p&gt;

&lt;p&gt;This was for their impact on the economy by providing Micro credit to millions of people across the world and helping them improve their economic status.&lt;/p&gt;

&lt;p&gt;One such person who was inspired by Prof Muhammad Yunus was&lt;a href="https://www.linkedin.com/pub/rohan-mathew/36/140/7b6"&gt;Rohan Mathew&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Rohan Mathew conceived&lt;a href="http://www.intersectfund.org/"&gt;The Intersect Fund&lt;/a&gt;, a Micro Credit Institutionin a dorm room in 2009 with just 1,000USD  seed capital and has provided more than 900 loans totaling upwards of $3M total of low-income people struggling to make ends meet.&lt;/p&gt;

&lt;p&gt;As the borrowers began to grow, Rohan saw that a lot of time was being spent on huge spreadsheets that were manually maintained which restrained them from expanding. That was when Rohan approached Multunus to build a Loan Management System so that they could focus on impacting more people.&lt;/p&gt;

&lt;p&gt;Since then Multunus has been associated with The Intersect Fund and has already seen the impact of the on-going Loan Management System, with a whooping 300% increase in the number of loans in just one year!&lt;/p&gt;

&lt;p&gt;The inspiration to add more value to The Intersect Fund and also to understand the technological impact that we could provide for an MFI is why we are researching about MFI.&lt;/p&gt;

&lt;p&gt;Hence these blog posts are part of sharing our understanding of the MFI industry and its potential impact on the community and the industry.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are MFIs?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MFIs - Micro Financial Institutions - are organizations that provide basic financial services to the low-income group and to the people below poverty line who may not have a good credit history or who do not have access to these services from a bank.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why MFIs?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These MFIs give loans of smaller value, allow deposits of smaller nature etc - which would not be provided by banks.&lt;/p&gt;

&lt;p&gt;The reason these are small / micro is for people who have just enough or less money to invest in their small businesses, who have to pay school fees for their children, who have to bear costs of marriage etc.&lt;/p&gt;

&lt;p&gt;For example, In India they don’t need a huge amount like Rs 100,000, but instead something like Rs 5,000 would be enough for them to boost their business or meet their needs. These people would then pay it back in installments as low as Rs 50 on a daily basis or on a seasonal basis etc depending on their income.&lt;/p&gt;

&lt;p&gt;To make these poor people self sufficient and to discourage them getting into the debt trap, MFIs provide them with the financial inclusions as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the financial inclusions?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Financial inclusions are basic financial services available at affordable costs to the disadvantaged or the poor section of the society. These are in terms of access to smaller amount of loans with flexibility in the repayment schedules, encouraging deposits of smaller value, access to the basic insurances without paying hefty premiums and addressing the inaccessibility to banking services outside banking locations. To motivate people to utilise the financial inclusions available in India, the current Indian Prime Minister Modi introduced the&lt;a href="http://pmjdy.gov.in/"&gt;Pradhan Mantri Jan Dhan Yojana&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/10/2015-10-30_0955-300x253.png" alt="Financial Inclusions" /&gt;&lt;/p&gt;

&lt;p&gt;Financial Inclusions include the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Credit&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Though Micro Credit and MFIs are used interchangeably, micro credit is one of the services provided by MFIs. These loans may start from a few hundreds to ten thousands of rupees. They are offered for various purposes like capital investment in small businesses, working capital for businesses, to help with personal expenses like marriage, children’s education, medical help etc that will help them to alleviate acute poverty and move to a better lifestyle.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Savings&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With a goal of creating self-sufficiency among poor people, MFIs encourage small savings to meet their future requirements like repayment of the loan itself. This may be as low as depositing Rs 10 at a time.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Insurance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the various insurances to cover health, death, loan repayment, loss of income etc. These are provided at a very low rate of premium and the sum insured would be just enough to cover the emergency expenses. These services actually discourage people from taking more loans to cover emergencies like medical expenses, death of a family member etc so that they do not fall into the indefinite debt trap.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Payments through Mobiles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;MFIs are not physically accessible to people in rural areas and hence this service allows them to use mobile phones as a tool to make use of the services provided by the MFIs. eg. M-Pesa in Kenya.&lt;/p&gt;

&lt;p&gt;Thus MFIs have given a new perspective to financial services, which were earlier available to the higher class of people, through the impact that they create to improve lives of people below poverty line.&lt;/p&gt;

&lt;p&gt;Next Post: &lt;a href="http://www.multunus.com/blog/2015/11/mfis-work/"&gt;How MFIs work?&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our Open (&amp; Autonomous) Salary System - The Background Story [Part 1]</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/09/our-autonomous-salary-system-the-background-story-part-1/"/>
    <id>http://www.multunus.com/blog/2015/09/our-autonomous-salary-system-the-background-story-part-1/</id>
    <published>2015-10-01T00:05:48+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;A few of us (read * founders* ) in the company had the ominous responsibility called the… “Yearly Compensation Revision”.&lt;/p&gt;

&lt;p&gt;We dreaded it. Every year.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/1992019542_86f31eab77_o-1024x683.jpg" alt="scared" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.flickr.com/photos/paolomargari/"&gt;Image Credit&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It did not fall into the “creative” tasks bucket. We hardly learned anything from doing the same thing year after year.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We had almost no feedback on whether our team trusted us in being fair.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This sucked a significant amount of time from our other work.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We wondered: What would be the exact opposite of what we were doing?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What if we could actuallytransparency and autonomy every time we went through the process?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Would it be possible to make the whole process enjoyable? Something that we actually looked forward to?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those were the questions that intrigued us to a point, that we couldn’t shake the curiosity off any longer. So after many years of being afraid to do it, we finally bit the bullet.&lt;/p&gt;

&lt;p&gt;We did two things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We made our salaries transparent. All of our salaries are now open to everyone within the company.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We made the compensation revision system democratic. Everyone chooses their preferred salary and then tries to get enough support from the rest of our team to justify their expectation.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’re curious how the system works, check out our &lt;a href="http://github.com/multunus/open-playbook"&gt;open playbook&lt;/a&gt; and &lt;a href="https://docs.google.com/spreadsheets/d/1MhoSHHSpOKYPM1Nx5n2XmjlK2ddouxL6byqEH0fZS2s/edit#gid=1267023075"&gt;our public spreadsheet template&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The focus of this post series is to share our experience doing this for the first time. We made a ton of mistakes but also learned a lot.&lt;/p&gt;

&lt;p&gt;At the end of it all, what I think we’ve succeeded in doing is starting a movement of transparency and autonomy at Multunus. From that perspective, this was a * bang*  of a beginning. :)&lt;/p&gt;

&lt;h2 id="creating-ownership"&gt;Creating Ownership&lt;/h2&gt;

&lt;p&gt;We waited 7 years to launch this system because of the significant social and financial risks involved.&lt;/p&gt;

&lt;p&gt;A key motivation however to open things up is that we’re building a world class consultancy. In a workplace place like ours, there’s little place for ill-informed people to exist.&lt;/p&gt;

&lt;p&gt;The whole team needs to be aware of what’s happening in our business. Everyone of us also needs to feel a great sense of ownership in our company. Only then, can all of us confidently represent our company in front of our customers.&lt;/p&gt;

&lt;p&gt;A key ingredient to create that sense of ownership: Trust.&lt;/p&gt;

&lt;h2 id="building-trust"&gt;Building Trust&lt;/h2&gt;

&lt;p&gt;One of the key challenges we’ve struggled with is creating a high sense of trust between the founders and the rest of the team. This is a bit of a chicken and egg situation. Which group should go out of its way to demonstrate trust first?&lt;/p&gt;

&lt;p&gt;No prizes for getting this right. The founders have the key responsibility of taking proactive significant steps to create a high trust environment. We believe that kind of gesture combined with great doses of patience will result in propagation of trust across the whole team in all directions.&lt;/p&gt;

&lt;p&gt;So we made the following decisions to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Increasingly make usually-considered-sensitive-and-confidential information transparent&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To distribute control across everyone in the company. This means making it the * responsibility*  of everyone in the company to take important business decisions that are usually within the control of the founders or senior executives&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The autonomous salary system was the first step in the above direction.&lt;/p&gt;

&lt;h2 id="goals"&gt;Goals&lt;/h2&gt;

&lt;p&gt;We had the following goals for the new compensation system we were putting together:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Dramatically increase the level of transparency with respect to compensation related matters.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provide total control to the team to choose their own salaries.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Train the team to start using our financial data to make well-informed compensation level decisions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep the whole be open - so that everyone could react during any step of the process if they had feedback or wanted changes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Execute the process with as little disruption as possible to our day to day operations.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="risks"&gt;Risks&lt;/h2&gt;

&lt;p&gt;To list out the risks of launching this kind of system, we:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Researched other companies&lt;/strong&gt;: We found a lot of very good articles (See References at the end) -&lt;a href="http://positivesharing.com/2006/08/the-case-against-open-salaries/"&gt;especially this one&lt;/a&gt;. The two companies that were most useful in providing inspiration and confidence were:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://open.bufferapp.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/"&gt;Buffer&lt;/a&gt;:Both for their radical levels of transparency (their salaries are open to the public!) and also for their simple salary formula (that we used as our foundation).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Ricardo_Semler"&gt;Semco&lt;/a&gt;:For Ricardo Semler’s vision of egalitarian workplaces.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Surveyed the mood of the team:&lt;/strong&gt; The idea of introducing this kind of radical transparency and autonomy did indeed induce some amount of fear and doubt - but also curiosity and aspiration.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From the research and surveys, we found two broad types of risks:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Social Risks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Financial Risks&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="social-risks"&gt;Social Risks&lt;/h2&gt;

&lt;p&gt;Here's the key social risks we considered:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Perception of unfairness:&lt;/strong&gt; This is usually caused by high levels of subjectivity and ambiguity in the salary determination process. We introduced a “salary formula” to make the process more objective.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Higher pay for those with higher influence and negotiation skills:&lt;/strong&gt; This is a possibility in an autonomous system. We introduced a democratic system of checks and balances to lower this risk.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Embarrassment for those with lower pay: This was a key concern.**&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;The good:&lt;/strong&gt; In the “less transparent” past we had put in significant efforts to maintain compensation fairness across the team. So making the salaries open wasn’t a big deal from that perspective.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;The not-so-good:&lt;/strong&gt; But we were concerned that a certain group of folks (playing a specific role) within our team were being paid significantly less than their counterparts. While this was not kept secret per se, the risk of bruised egos in a transparent environment was still a significant risk.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;The solution:&lt;/strong&gt;&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;We decided not to reveal the existing salaries of our people. Only the newly revised self-determined would be open to everyone.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;The root cause of this risk is lack of confidence. The solution for this is to coach people to be comfortable in their own skin and attain self-confidence by creating significant value for our customers and the community. We do that too.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;Salary is a personal matter for some people:&lt;/strong&gt; While we do appreciate this fact, our priority is higher trust across the team. We also believe this is a perspective that can change with good coaching.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="financial-risks"&gt;Financial Risks&lt;/h2&gt;

&lt;p&gt;Here’s the list of Financial Risks:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;The operational expenses could spiral out of control&lt;/strong&gt;- potentially affecting the sustainability of the business.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Opening up our books&lt;/strong&gt;: For us to be truly transparent, we would need to open up our books as well to everyone in the company. This could be a Pandora’s box - bringing in a whole new set of questions, concerns or doubts about the company.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The rest of this post will focus on the Social Risks and how we’ve tried to mitigate them. Part 2 of this series will detail the Financial Risks.&lt;/p&gt;

&lt;h2 id="the-salary-formula"&gt;The Salary Formula&lt;/h2&gt;

&lt;p&gt;The first step we took was to standardize the salary structure using a “Salary Formula” (very similar to that of Buffer). This Formula would serve as the basis for salary calculation for everyone across the the company. This is also a great way to increase fairness.&lt;/p&gt;

&lt;p&gt;The Buffer salary formula has 3 components, corresponding “attributes” and “attribute numbers”:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Role&lt;/strong&gt; and the corresponding Base Salary&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Skill Level&lt;/strong&gt; and the corresponding Multiplier Factor&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;strong&gt;Leadership component&lt;/strong&gt; and the corresponding Additive Factor&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We added a fourth component:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Flexibility Factor&lt;/strong&gt; and the corresponding multiplier factor. We added this to suit the needs of some of our employees - who preferred to work lesser hours.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/image02-1024x592.png" alt="image02" /&gt;&lt;/p&gt;

&lt;p&gt;[More details on each of these components are available in our&lt;a href="http://github.com/multunus/open-playbook"&gt;Open Playbook&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;While the above formula structure was a great start, we still had to determine what attributes and attribute numbers would make sense for us. Specifically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What roles and matching base salaries would make sense for us?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What skill levels and matching multiplier factors should we go with?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What leadership levels and corresponding numbers should we choose?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How would the Flexibility factor work?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="circle-org-structure"&gt;3 Circle Org structure&lt;/h2&gt;

&lt;p&gt;We knew multiple iterations would be needed until we had the final list of attributes and attribute numbers that would work for everyone.&lt;/p&gt;

&lt;p&gt;As mentioned earlier, we also had two additional goals:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Do these iterations in the open and by keeping everyone in the company involved&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure that we were making consistent progress and not disrupting our daily operations too much&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To achieve both of those goals, we created a 3 Circle Org Structure:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/heads_council_everyone_circles.jpg" alt="Heads Council Everyone Circles" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Heads:&lt;/strong&gt; We already had a Business Unit “Heads” group - that would meet every week to discuss and plan progress of our company.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Council:&lt;/strong&gt; We also had some team members in the company who had already been demonstrating some level leadership in the company - so, we invited them to create the “Council”.  &lt;/p&gt;

&lt;p&gt;And finally we had everyone else.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;&lt;strong&gt;Side Note&lt;/strong&gt;: We prefer to use circles rather than a pyramid - because this is not really about authority and control - but more about efficiency, pragmatism and responsibility. The folks at the center are held more accountable to ensure success of the process than the folks on the outer circles.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We iterated through the process of plugging in numbers for each of the components until we had something that we thought would work for everyone. The Heads would first come up with some values for each of the components in the formula - and then invite the Council members to provide feedback. And when the Heads and the Council were in sync - we were  ready to involve everyone else in the company - and get their feedback.&lt;/p&gt;

&lt;h2 id="the-evening-of-chaos"&gt;The Evening of Chaos&lt;/h2&gt;

&lt;p&gt;We scheduled a 2 hour marathon session one late afternoon to meet with everyone. The goal was to get everyone’s numbers decided, finish the whole process and just move on with our lives.&lt;/p&gt;

&lt;p&gt;This however turned out to be much harder than what we’d expected. It was chaos.&lt;/p&gt;

&lt;h2 id="deadlock-and-key-learnings"&gt;Deadlock and key learnings&lt;/h2&gt;

&lt;p&gt;The goal was to decide on the formula numbers for all roles, skill levels and leadership levels across everyone across the company. We’d assumed (naively) that people would be focused on the whole team and not be tempted to find out how the formula would affect their own numbers.&lt;/p&gt;

&lt;p&gt;We had a deadlock between what people felt was good for everyone in the company and what met their own personal salary preferences. After many attempts at changing the numbers over and over again for over 6 hours - everyone just got tired and went home (really late!).&lt;/p&gt;

&lt;p&gt;At this point we were at our wit’s end. Things were looking quite sticky.&lt;/p&gt;

&lt;p&gt;We however learned the following 3 key things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;It was important to highlight the fact that the compensation is a direct derivative of the value being created by the individual. And that the Role, Skill and Leadership components are tools to be able to gauge that accurately.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is difficult for people to think about the company and themselves at the same time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A democratic system requires some level of structure to guide the process and to help people make decisions easily and quickly.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="breaking-the-deadlock---at-the-cost-of-some-transparency-and-autonomy"&gt;Breaking the deadlock - at the cost of some Transparency and Autonomy&lt;/h2&gt;

&lt;p&gt;We made the following changes, to implement the above learnings:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Delinked the Company and Individual part (see details below) of the process and made them separate steps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Added a few simple tools to make it possible for everyone to efficiently coordinate and make decisions collectively&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/image03.png" alt="image03" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/09/image04-1024x396.png" alt="image04" /&gt;&lt;/p&gt;

&lt;p&gt;The heads got together the next morning and came up with the following changes to separate the Company and Individual level numbers - albeit at the expense of significantly reducing transparency and autonomy:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Step 1: Private Review of Company Level Numbers:&lt;/strong&gt; We removed visibility to the spreadsheet temporarily - so it was visible only to the heads at this point. We then reviewed and revised the Attribute Lists and the Attribute Numbers - keeping the following two goals in mind:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use the data we’d collected from the earlier exercise as a key indicator of the salary preferences of the whole team&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure that fairness would be maintained across everyone in the company - across roles, skill levels and leadership&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ensure that the sustainability of our business would be maintained&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The good news* : We were already mid-way through the whole process and the formula numbers were already somewhat stabilized - enough data for us to feel confident of feeling the pulse of the team correctly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Step 2: Choosing the Individual Levels for each of the Formula Components:&lt;/strong&gt;We kept the Company Level formula numbers hidden - and asked the Council members and everyone else in the company to select their (Individual Level) role, skill, leadership and flexibility components - in that order.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;This ensured that each individual would have to choose their Roles, Skill Levels and Leadership values purely on the basis of theof those components - and not on the compensation that would finally get calculated.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;This required a leap of faith on behalf of our team, but we had little resistance to the idea from anyone on the team.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Step 3: Democracy for the Individual Levels:&lt;/strong&gt; Once everyone was done choosing their respective individual components - we brought in the first level of democracy:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;We asked everyone on the team to get upvotes from at least 6 others in the company with a good distribution of roles, skill levels and leadership levels - demonstrating support for their individual decisions.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;If someone could not get support, then they would need to check in with the others to find out why. They could at this point do what is common sense - either convince the others that the numbers made sense or get convinced to change their own numbers.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;This was a magical moment - because for the first time in the company’s history, the leadership was not involved in these decisions. It was driven by the whole team.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Once everyone was done getting the support needed for their numbers - we locked the spreadsheet to avoid future changes.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Step 4: Salaries Revealed:&lt;/strong&gt; We then revealed the Company Level numbers to everyone and then applied the formula numbers across the team. Suddenly, everyone on the team could see their salaries :).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Step 5: Democracy for the Salaries:&lt;/strong&gt; At this point, we asked everyone to either say “ok” or “not ok” against the numbers that they could see against their name.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;If there was a “not ok”, then they were also required to state in the open spreadsheet - why they felt the numbers were not appropriate, how much they expected and why it was better for them as well as for the company that an override should be approved for themselves.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Once again, if they could get enough support across the team, then the override would be approved.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Figuring this process out was one of the more complicated projects we’ve attempted. But it was also:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;A satisfying system designproject.&lt;/strong&gt; Our goal was to create something simple and easy to use and we’ve made good progress on that. In fact the process detailed in our &lt;a href="https://github.com/multunus/Open-Playbook"&gt;our open playbook&lt;/a&gt; is more refined, transparent and autonomous than the version detailed above. And that is the version we intend to use going forward.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;A significant first step in building a great culture.&lt;/strong&gt;This project has triggered a series of continuous improvements in making our workplace more autonomous and transparent. Every couple of weeks, we make open for discussion one more  “previously-considered-taboo” topic. We’re getting there :).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://positivesharing.com/2006/08/why-secret-salaries-are-a-baaaaaad-idea/"&gt;http://positivesharing.com/2006/08/why-secret-salaries-are-a-baaaaaad-idea/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://positivesharing.com/2006/08/the-case-against-open-salaries/"&gt;http://positivesharing.com/2006/08/the-case-against-open-salaries/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://medium.com/@jurgenappelo/pay-people-a-fair-salary-using-a-transparent-salary-formula-8d81df8e1de6"&gt;https://medium.com/@jurgenappelo/pay-people-a-fair-salary-using-a-transparent-salary-formula-8d81df8e1de6&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://open.bufferapp.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/"&gt;https://open.bufferapp.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://joelonsoftware.com/articles/ladder.html"&gt;http://joelonsoftware.com/articles/ladder.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://qz.com/198871/this-tech-startup-uses-a-simple-formula-to-decide-how-much-stock-to-give-employees/"&gt;http://qz.com/198871/this-tech-startup-uses-a-simple-formula-to-decide-how-much-stock-to-give-employees/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://enhanced-reality.net/transparent-salaries/"&gt;http://enhanced-reality.net/transparent-salaries/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.slideshare.net/jurgenappelo/salary-formula"&gt;http://www.slideshare.net/jurgenappelo/salary-formula&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Mountain sickness and Employee Engagement</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/09/employee-engagement-moving-part-2/"/>
    <id>http://www.multunus.com/blog/2015/09/employee-engagement-moving-part-2/</id>
    <published>2015-09-14T17:05:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Employee-Engagement-Part-2.jpg" alt="Measuring Employee Engagement" /&gt;&lt;/p&gt;

&lt;p&gt;This is the part 2 of the blog post series on Employee Engagement [&lt;a href="http://www.multunus.com/blog/2015/07/moving-it-and-employee-engagement/"&gt;find part 1 here&lt;/a&gt;].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;We have mountain sickness!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Imagine you are climbing a mountain which is about 2000m high. There are 4 camps set up as checkpoints to rest and get adjusted to the altitude. You think you don’t have the time to climb and decide to take a helicopter service to camp 4.&lt;/p&gt;

&lt;p&gt;Your lungs have to deal with a change of 1500m altitude in very less time. But, you can’t stop. Already overloaded with the effort to adjust to the current change in altitude, you are walking up the mountain subjecting it to further change in altitude. Oxygen decreases. And finally, your lungs give away before you can reach the summit.&lt;/p&gt;

&lt;p&gt;This condition is called &lt;strong&gt;Mountain Sickness.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, if at all you had started to climb the mountain by visiting each camp in its order of increasing altitude, here’s what would have happened:&lt;/p&gt;

&lt;p&gt;You start at the base camp. While you are climbing up, the change is altitude in comparison with the ground level increases slowly and gradually. When you reach Camp 1, you stay there for a while giving your lungs enough time to get accustomed to the new altitude change. And then with these rest intervals and steady climbing, you would have reached the summit.&lt;/p&gt;

&lt;p&gt;Replace yourself with the organization and your desire for it to grow. If your employees don’t have the basic necessities like knowing what is expected out of them at work or the tools that they require to work with, then there is no point in talking about the vision of the company or growth of the company and expecting your folks to take active part in it.&lt;/p&gt;

&lt;p&gt;All you will end up with will be a set of confused and frustrated employees and the organization is said to have mountain sickness. It’s just a matter of time when your organization will fail.&lt;/p&gt;

&lt;p&gt;Every employee has a &lt;strong&gt;need&lt;/strong&gt; to feel engaged with the organization. This need to feel engaged can be visualized in the form of a pyramid called the Hierarchy Pyramid [Fig below].&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid.png" alt="Hierarchy Pyramid" /&gt;&lt;/p&gt;

&lt;p&gt;One has to focus on engaging the employee at each and every level and in the same order of the a pyramid. The engagement has to start with the lowest level of basic needs and go all the way up to growth.&lt;/p&gt;

&lt;p&gt;Coming back to the story of Multunus and mountain sickness. We realized that we had mountain sickness when we measured our employee engagement. The section below helped us understand how a set of 12 questions can give us feedback on health of employee engagement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Measuring employee engagement&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Gallup_(company)"&gt;Gallup and team&lt;/a&gt; interviewed about 10 million employees and came up with these 12 questions to measure the engagement at the workplace. These questions capture the most important information by measuring the core elements that are needed to attract, focus and keep the most talented employees.&lt;/p&gt;

&lt;p&gt;GALLUP Q12&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Do I know what’s expected out of me at work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do I have the materials and equipment I need to do my work right?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;At work, do I have the opportunity to do what I do best every day?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the last seven days, have I received recognition or praise for doing good work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does my supervisor, or someone at work, seems to care about me as a person?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is there someone at work who encourages my development?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does my opinions matter, at work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does the mission or purpose of my organization make me feel my job is important?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are my associates or fellow employees committed to doing quality work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do I have a best friend at work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the last six months, did someone at work has talked to me about my progress?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This last year, did I have had opportunities at work to learn and grow?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These questions belong to hierarchy pyramid. At each level of this pyramid, the employee needs to feel engaged. The figure below shows what the mindset of the employee at each level of the engagement [left of the pyramid]. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid-with-explaination.png"&gt;Hierarchy Pyramid levels explained&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s how the 12 questions and the employee mindset match up to the levels of the pyramid ["I" stands for the employees]:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Base Camp: What do I get?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid-Basic-Needs.jpg" alt="Hierarchy Pyramid-Basic Needs" /&gt;&lt;/p&gt;

&lt;p&gt;At this stage the employee is concerned about what he is getting. The questions that he needs to be answered are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;What’s my pay going to be?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How long am I going to work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Will I have an office, desk or a phone to work with?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To measure how well their &lt;strong&gt;basic needs&lt;/strong&gt; have been met with, we can use these two questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Do I know what’s expected out of me at work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do I have the materials and equipment I need to do my work right?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Camp 1: What do I give?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid-Individual1.jpg" alt="Hierarchy Pyramid-Individual" /&gt;&lt;/p&gt;

&lt;p&gt;Here, their basic needs are already met, their perspective evolves to seeing what their contribution as an individual is and other people’s perception of it.&lt;/p&gt;

&lt;p&gt;We need to ask them these questions to measure their level of engagement at the 
individual level:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;At work, do I have the opportunity to do what I do best every day? * [If they are doing well in your role]*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the last seven days, have I received recognition or praise for doing good work? * [Do other people value your individual performance]*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does my supervisor, or someone at work, seems to care about me as a person? * [Do people value as a person]*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is there someone at work who encourages my development? * [Is someone interested in investing in your individual growth]*&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Camp 2: Do I belong here?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid-Team.jpg" alt="Hierarchy Pyramid-Team" /&gt;&lt;/p&gt;

&lt;p&gt;The employee’s perspective has widened and they have asked some difficult questions about themselves and others by this tim**e like if they want to belong to a place where others also respect and have high standards of quality and expectations from themselves.&lt;/p&gt;

&lt;p&gt;To measure the engagement of the employee at the &lt;strong&gt;team&lt;/strong&gt; level, we need to ask the following questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Is there someone at work who encourages my development?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does my opinions matter, at work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does the mission or purpose of my organization make me feel my job is important?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are my associates or fellow employees committed to doing quality work?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do I have a best friend at work?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Camp 3: How do we all grow?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/08/Hierarchy-Pyramid-Growth.jpg" alt="Hierarchy Pyramid-Growth" /&gt;&lt;/p&gt;

&lt;p&gt;This stage is pretty advanced where the employee is impatient for everyone to grow. They want to make things better and to innovate. They can be here only if they are engaged in each of the levels below. They can apply their ideas only if they know what is expected of them at work, how well their idea is going to be accepted or rejected by others.&lt;/p&gt;

&lt;p&gt;Here are the two questions you ask to measure the level of engagement at &lt;strong&gt;growth&lt;/strong&gt; level:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the last six months, did someone at work has talked to me about my progress?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This last year, did I have had opportunities at work to learn and grow?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;The Summit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If the employee is able to answer positively to all the above questions, then they have reached the summit. Their focus is clear and they have a sense of achievement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discovering Multunus has Mountain Sickness!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After understanding mountain sickness, we took a survey with these 12 questions which is popularly referred to as the eNPS survey and asked folks to rate it  with a range between 0 to 10 [0 being a strong "No" and 10 being a strong "Yes"].&lt;/p&gt;

&lt;p&gt;We analyzed the data from the survey to discover that we had mountain sickness. We have higher scores for the level Growth and lower scores for everything below.&lt;/p&gt;

&lt;p&gt;Initially, it was hard to believe. But, numbers aren't irrational as we humans are. The scores and the hierarchy pyramid helped us think more objectively.&lt;/p&gt;

&lt;p&gt;I will talk more about the analysis in the next post. Please feel free to comment with thoughts and questions.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Moving It and Employee Engagement</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/07/moving-it-and-employee-engagement/"/>
    <id>http://www.multunus.com/blog/2015/07/moving-it-and-employee-engagement/</id>
    <published>2015-07-15T22:35:50+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/07/EE-Blog-Posg1.jpg" alt="Engaged employee" /&gt;&lt;/p&gt;

&lt;p&gt;Let’s begin with the story of * Moving It…*&lt;/p&gt;

&lt;p&gt;It all started with a few folks at Multunus trying to bring in a sense of oneness in the organization. They began an experiment by starting a health movement. They would post their exercise details on WhatsApp group and celebrate their workout wins during standups. This inspired a few others to join the movement.&lt;/p&gt;

&lt;p&gt;We started tracking everyone’s workout on a spreadsheet, initially. Then we quickly built an app called MoveIt, which helped us keep track efficiently. As we were hoping, we saw a spike in the engagement on the app.&lt;/p&gt;

&lt;p&gt;We were enthusiastic about building features of the app while we saw people talking about it over lunch and coffee. But then, we realized that we were just touching the tip of the iceberg which was trying to bring in camaraderie. Beneath this lay a huge part of the iceberg, a huge problem which was trying to be solved by many companies called "Employee Engagement".&lt;/p&gt;

&lt;p&gt;Hence we thought, why not solve this problem from its root at the organization. Before that, we wanted to first understand what and why behind Employee Engagement.&lt;/p&gt;

&lt;h3 id="what-is-employee-engagement"&gt;What is Employee Engagement?&lt;/h3&gt;

&lt;p&gt;Initial thought would be, having fancy parties, unlimited junk food to snack on and other “cool” stuff in the workplace will increase employee engagement and happiness. In this case, one has failed to understand what employee engagement actually means.&lt;/p&gt;

&lt;p&gt;After a lot of reading, we discovered that each organization had its own definition for Employee Engagement. But, this is what it means to us:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Employee engagement is what happens when an employee’s objectives are in resonance with the organization’s objectives.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This happens because the organization gives her a feeling that she is part of something that is bigger than her. As an effect, she is in a &lt;strong&gt;state of flow&lt;/strong&gt;
 in all the activities she performs.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="http://www.ted.com/talks/mihaly_csikszentmihalyi_on_flow?language=en"&gt;State of Flow&lt;/a&gt; is the state of mind when a person is completely immersed in the activity she is performing. She feels that her body and mind are working in such symphony that she needn’t put in any kind of effort. She is energized, rather than being drained.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id="why-is-engagement-important"&gt;Why is Engagement Important?&lt;/h3&gt;

&lt;p&gt;There are two ways in which a company can grow:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Bring in more people to increase total value&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each employee brings in more value&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now let’s take each of the above mentioned categories and see how Employee Engagement affects them:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bring in more people to increase total value:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If more people are employed then more value is created. Now, this simple "if then" equation isn't so simple in reality. We all know how difficult it is to hire folks who are good fits for the organization and the amount of time and money being invested in this process of hiring is huge.&lt;/p&gt;

&lt;p&gt;Engaged employees know very well what kind of people we are looking at to hire. They help us by directing us to people who match our expectations. They also brand and promote the organization without anyone prompting them, attracting the right kind of people who are good fits. Hence, employee engagement increases the total value.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;As we say at Multunus, the opposite of an employee leaving is the employee bring in another employee.*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Each employee brings in more value:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We want the employees to bring in more value to the table. If the employee is engaged, then her objectives and goals will be working towards the organizational success.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An engaged employee will showcase the following:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Attitude: that tells she is proud and loyal towards the organization;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Behavior: she becomes a great advocate of the organization to clients, or goes the extra mile to finish a piece of work;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Outcomes: may include lower accident rates, higher productivity, happiness at work, fewer conflicts, more innovation, lower numbers leaving and reduced sickness rates.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We need to understand how one can measure Employee Engagement. &lt;a href="http://www.multunus.com/blog/2015/09/employee-engagement-moving-part-2/"&gt;I will be talking about this in the next post.&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CodeRetreat - Honing your Craft as a Programmer</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2015/03/coderetreat/"/>
    <id>http://www.multunus.com/blog/2015/03/coderetreat/</id>
    <published>2015-03-02T16:01:28+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Have you ever wondered on how to get better as a Programmer?&lt;/p&gt;

&lt;p&gt;CodeRetreat is a day long event to challenge yourself to grow. It stretches your skills and understanding of writing and designing elegant code.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2015/03/CodeRetreat-300x200.jpg" alt="CodeRetreat" /&gt;&lt;/p&gt;

&lt;p&gt;Read on to understand more.##What is CodeRetreat?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It is a day-long event.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The problem is the same : Conway’s Game of Life.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;5 or 6 programming sessions : 45 minutes each, followed by retrospections on each session.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pair-programming is necessary.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After each session, pairs should be swapped.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After each session, code must be deleted, not put in a branch, not stashed, just deleted with no trace left.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is preferred to use Test-Driven Development (TDD)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="what-is-the-problem"&gt;What is the Problem?&lt;/h2&gt;

&lt;p&gt;In 1970, mathematician Rob Conway came up with a few rules called the
&lt;a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"&gt;Conway’s game of life&lt;/a&gt;. The universe of the Game of Life is an infinite two-dimensional orthogonal grid of square cells. Each cell is either alive or dead. Every cell interacts with its neighbours to determine its state at the next tick.&lt;/p&gt;

&lt;h2 id="how-deleting-code-makes-you-a-better-programmer"&gt;How deleting code makes you a better programmer?&lt;/h2&gt;

&lt;p&gt;In our daily lives, maintainable code is valued a lot. But in a CodeRetreat you can explore different approaches of problem solving. You can start each session with a fresh outlook to solve the problem with a new technique.&lt;/p&gt;

&lt;p&gt;Deleting code is somehow similar to the &lt;a href="https://en.wikipedia.org/wiki/Sand_mandala"&gt;Zen ritual&lt;/a&gt; of building sand castles with intense focus and then destroying them. You develop the habit of doing your best work decoupled from the end result.&lt;/p&gt;

&lt;h2 id="why-pair-programming-with-different-partners"&gt;Why “Pair Programming” with different partners?&lt;/h2&gt;

&lt;p&gt;Two programmers come together and solving the same problem. Sounds fun?&lt;/p&gt;

&lt;p&gt;But it is proven to actually produce better code. &lt;a href="https://en.wikipedia.org/wiki/Pair_programming"&gt;Pair Programming&lt;/a&gt; allows you to learn at a much faster pace. You learn more in a few hours than you would in weeks.&lt;/p&gt;

&lt;p&gt;There are the obvious advantages. Discussing a problem leads to better understanding of it. Collaborating make you learn new techniques and shortcuts.&lt;/p&gt;

&lt;p&gt;Pair Programming also gives us an opportunity to practise &lt;a href="http://www.c2.com/cgi/wiki?EgolessProgramming"&gt;Egoless Programming&lt;/a&gt;. Programmers have the natural tendency to treat their programs as part of themselves and therefore reject all criticism. The antidote is treating code independent from yourself and taking feedback dispassionately.&lt;/p&gt;

&lt;p&gt;Pair Programming leads to collective ownership of code. Collective ownership can be scary as you have to be comfortable to admit your mistakes and incorporate new changes, which is hard work. But the more the ownership of a codebase, the higher the quality. The most popular open source software are the most tested and are of the highest quality in terms of design.&lt;/p&gt;

&lt;p&gt;As &lt;a href="https://en.wikipedia.org/wiki/Linus%27s_Law"&gt;Linus’s Law&lt;/a&gt; states "given enough eyeballs, all bugs are shallow”.&lt;/p&gt;

&lt;h2 id="are-all-sessions-similar"&gt;Are all sessions similar?&lt;/h2&gt;

&lt;p&gt;No. There are additional rules and constraints in some sessions.&lt;/p&gt;

&lt;p&gt;In most sessions the focus is on practising the rules of &lt;a href="http://c2.com/cgi/wiki?XpSimplicityRules"&gt;Simple Design&lt;/a&gt;. Once participants are comfortable with the problem - Conway’s Game of Life, constraints are added in subsequent sessions. Constraints drive creativity in problem solving.&lt;/p&gt;

&lt;p&gt;In one of the sessions we had, the constraint was to use the principle of pure OOP - no returns. It was incredibly hard to come up with solutions keeping that constraint in picture. In the end, people came up with very interesting solutions. One of them was using event listeners, node.js style, but in ruby and using ruby blocks to act on the data and not return anything.&lt;/p&gt;

&lt;p&gt;In some sessions, the constraint was to use Test Driven Development (TDD). For some it was their first experience with TDD. For people who were already using it, it was an opportunity to teach TDD concepts to beginners. Some of the insights that are always shared by beginners on using TDD are :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Focus on one rule at a time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;More confidence in the validity and correctness of code.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Continuously changing, restructuring and &lt;a href="https://en.wikipedia.org/wiki/Code_refactoring"&gt;refactoring&lt;/a&gt; code all the time.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="what-language-do-i-use-to-code"&gt;What language do I use to code?&lt;/h2&gt;

&lt;p&gt;Whatever language you want to. Want to use your favorite programming language, cool.&lt;/p&gt;

&lt;p&gt;Curious about a different language or paradigm(i.e. functional programming or logical programming), go for it. You can get an opportunity to pair with someone already familiar with it. We had participants who tried out Perl, Scala and Elixir for the first time.&lt;/p&gt;

&lt;p&gt;You have to be intentional about learning. The more you are open to experimentation, the more rewarding the experience from a CodeRetreat.&lt;/p&gt;

&lt;p&gt;If you are excited about CodeRetreat, you can come and participate next time. We organize one every now and then. To know about the next, please follow us on
&lt;a href="https://www.facebook.com/multunus"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/multunus"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="still-want-to-learn-more-about-coderetreat"&gt;Still want to learn more about CodeRetreat..&lt;/h2&gt;

&lt;p&gt;Go here&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://coderetreat.org/"&gt;CodeRetreat&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://coderetreat.org/facilitating/structure-of-a-coderetreat"&gt;Structure of a CodeRetreat&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://johnpwood.net/2011/07/29/what-i-learned-by-attending-a-code-retreat/"&gt;What I learnt from a CodeRetreat&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Do you really need Usability Testing?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/11/do-you-really-need-usability-testing/"/>
    <id>http://www.multunus.com/blog/2014/11/do-you-really-need-usability-testing/</id>
    <published>2014-11-12T16:56:45+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/11/1.jpg" alt="Should you do usability testing on a perfect design?" /&gt;&lt;/p&gt;

&lt;p&gt;One of our customers is the &lt;a href="http://intersectfund.org"&gt;IntersectFund&lt;/a&gt;. They are a nonprofit microlender who have trained, coached and financed hundreds of New Jersey's emerging entrepreneurs from lower income groups.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/11/IF_logo_small.jpg" alt="The Intersect Fund Logo" /&gt;&lt;/p&gt;

&lt;p&gt;Given that they’ve been doing it for 7 years, our customer was already very comfortable with the needs and the workflow of the the Loan Officers - who are the primary users of the system.&lt;/p&gt;

&lt;p&gt;Considering this, we felt confident on the designs too. But eating our own dog-food, we forced ourselves to conduct a Usability Test anyway. Read along to find out what we found. Let’s just say, Steve Krug wouldn’t be surprised.&lt;/p&gt;

&lt;h2 id="a-quick-intro-to-the-product"&gt;A Quick Intro to The Product&lt;/h2&gt;

&lt;p&gt;The first product we’re building for the IntersectFund is called Closer. The goal of Closer is to make the process of Closing a loan much more efficient:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Reduce Communication Overhead&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reduce Manual Errors&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reduce Dependency on Single Person&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Build a system that can scale.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="persona---the-loan-officer"&gt;Persona - The Loan Officer&lt;/h2&gt;

&lt;p&gt;The Loan Officer is the primary user of Closer. Her role involves meeting Loan Applicants, understand their needs, and help get their loan approved.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/11/1984_Davie_JaneDoe_Reconstruction_004b-150x150.jpg" alt="Jane Doe - Example Image" style="float:left" /&gt;&lt;/p&gt;

&lt;p&gt;Jane Johnsons&lt;/p&gt;

&lt;p&gt;Age: 30&lt;/p&gt;

&lt;p&gt;Location: &lt;strong&gt;NJ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Speaks Spanish&lt;/p&gt;

&lt;p&gt;Behaviour&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Works out of Intersect office. But spend about 90% time on the go.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Loan Officer meets with the Borrower to discuss about the loans.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Work Long hours - mostly in the evening as that's when borrowers are available.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Fairly tech savvy. Troubleshooting is difficult, though.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Carries iPhone, MacBook Air &amp;amp; a Portable Scanner.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Access to Internet is through the iPhone.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Problems&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Having to drive long distances to do small tasks is painful.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lot of Phone calls. (Phone call every 5 minutes)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Has to deal with complaints from the applicants.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Not having access to all information is a problem. (Ex. not having balances on active loans.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Waiting for approval of loan applications.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Declining to people is difficult. Has to figure how to translate what document are needed to what the borrower can provide.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Has to deal with borrowers lacking documents.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Goals&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Reduce communication overhead times.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Get loan approved and disbursed as soon as possible.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spend time talking to more Borrowers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Be able to answer queries from borrowers quickly - without relying on other people from Intersect.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="how-we-did-the-usability-test"&gt;How We Did The Usability Test&lt;/h2&gt;

&lt;p&gt;Since the IntersectFund Team is based out of NJ, we decided to do remote usability testing with two Loan Officers. We used &lt;a href="http://www.multunus.com/blog/2014/09/using-google-hangouts-air-remote-usability-testing/"&gt;Google Hangouts on Air&lt;/a&gt; for conducting and recording the test for later use - Everybody already has it installed, automatically saves the video to youtube, and easy to share the video privately with multiple people.&lt;/p&gt;

&lt;h2 id="heres-what-we-found"&gt;Here’s What We Found&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Merge before Uploading&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Closer required them to upload single bank statements for 3 months. What we found though was that each month was stored in a separate scanned document. That meant they had to combine them before uploading.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Switching back and forth&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After the Collateral Documents are uploaded, the loan officer is supposed to enter a few details from the document such as validity of the document. This is to ensure that the validity of the documents are checked soon after the upload. During the usability test, we found the Loan Officer constantly switching windows between the new system and the document to fill all the fields. Since the fields were important, she did that frequently with smaller chunks of data.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Less keystrokes is more keystrokes&lt;/strong&gt;
The date fields had * auto*  addition of '/' to save on a few keystrokes. But, since they were used to filling dates with separate input fields or including the ‘/’ manually, they ended by making a lot of corrections. It was irksome!&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;No Aid for Explanation&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;During the process of closing a loan, there’s a step when the Loan Officer explains how things will work out, to the Borrower. We have a page which is supposed to help her explain. What we found out though was that the interface was hardly used during explanation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Webcam Permission&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The browser vendors aren’t doing a great job with making the Webcam Permissions apparent. In this case, they Loan Officers were using chrome. It’s the same color as the address/bookmarks bar and the buttons aren’t highlighted either. Complete amiss.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/11/Screen_Shot_2014-10-20_at_12_02_43_PM.jpg" alt="webcam permission - chrome browser" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Help-Text-Don’t-Read [HTDR]&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With so much information overload these days, it doesn’t matter how good intentions you have and how short you try to keep it. Nobody reads the help-text. They may come back to it when they face any error. But, don’t expect them to read it in the first pass.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Mandatory Address Line 2&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For some reason, the address line 2 was made mandatory. Since we tested with some real data though, we figured that address line 2 was hardly used which we later made optional.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;To Err is human&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We discovered that the current way of highlighting the fields with errors is too subtle and not very intuitive.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;“Enter Your Email Address” - Yours or Mine?&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the pages is supposed to collect the details the Loan Borrower. At the end of the page are the email and phone fields which would be used to send reminds to the borrower. We saw that the browser would auto-fill the Loan Officer’s details and since the Loan Officer would be filling it up for the borrower, she perceived it to be her details instead of the borrowers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;In the Logo they trust&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also found that there wasn’t any place where IntersectFund logo was displayed. The Loan officer thought that it would be essential to maintain the trust with the borrowers.&lt;/p&gt;

&lt;h2 id="how-we-prioritized"&gt;How We Prioritized&lt;/h2&gt;

&lt;p&gt;With all these insights from the usability test at hand and the constraints of time we decided to prioritize
 related issues over first time user experience issues for the following reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;It’s the same persons using the app everyday.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The risk of the users abandoning doesn’t exist.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;All this just goes to say that, even if you are very confident about your designs, there will always be a few things Usability Testing will uncover. Plan to spend a few hours every month and make your design better.*&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If you are facing difficulty getting insights to make your products better, feel free to reach out to me on
&lt;a href="http://sohelpful.me/manishrc"&gt;SoHelpful.me/manishrc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Photo Credit:
&lt;a href="http://startupstockphotos.com/post/78227111700/download"&gt;http://startupstockphotos.com/post/78227111700/download&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Culture Fit: How to evaluate it?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/10/culture-fit-evaluate/"/>
    <id>http://www.multunus.com/blog/2014/10/culture-fit-evaluate/</id>
    <published>2014-10-28T21:24:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;TL;DR: Jump to the last section if you wanna take a look at the sample questions.&lt;/p&gt;

&lt;p&gt;There are two aspects to our Hiring. The first one being the “Right Skills” for a particular role and other being “Culture Fit”. Evaluating the latter is more tricky than the former.&lt;/p&gt;

&lt;p&gt;But what does culture fit mean to us? Culture fit helps us know how well can a potential candidate align with the our organizational values, gel with the team, enhance our culture, grow oneself and help others grow.&lt;/p&gt;

&lt;p&gt;We’ve interviewed many candidates with very good technical skills and hired them, only to find after a few months, that there’s a significant mismatch of expectations at the culture level. We’ve known that a candidate with both good technical skills and culture has definitely helped us enhance our culture and bring in more customers but a bad hire has cost us - customers, our people’s time and revenue.&lt;/p&gt;

&lt;p&gt;On a separate but related note, we’ve also found that an experienced person (perhaps at a company with a very different culture) takes more time to accept our culture and adapt into our organization, as she has to both learn our ways 
and unlearn the old ones. Not many people realize that they have to unlearn certain things to adapt.&lt;/p&gt;

&lt;p&gt;But * how*  do you test for Culture Fit? Well, that of course depends on your organization and what it is that your culture stands for.&lt;/p&gt;

&lt;p&gt;[embed]https://www.flickr.com/photos/striatic/2144933705[/embed]&lt;/p&gt;

&lt;p&gt;Photo Credit: 
&lt;a href="https://www.flickr.com/photos/striatic/"&gt;Hobvias Sudoneighm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Multunus, we believe that a person who is &lt;strong&gt;thoughtful, serious and mature&lt;/strong&gt; is much more likely to fit well into our organization.&lt;/p&gt;

&lt;p&gt;We’ve broken down this further in the following aspects. And as promised, the sample questions for testing each of these traits are also included below:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Abstract thinking&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;We believe in focusing on Outcome rather than Output. Can you provide some examples from your work where you’ve done the same*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Keenness  in organization&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What questions do you have about us?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What are your expectations from us?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Why should we hire you?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Analytical Thinking&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Why did you join a large MNC by leaving your start up?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What are the top 3 lessons you’ve learned so far in your career?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What are the top 3 things you like about your organization?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What are the top 3 things you would want to improve in your organization?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Courage&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;How long do you intend to work for us and why?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;When was the last time you did something that made you feel uncomfortable?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Career/Purpose&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Why are you interested in a software career?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What role or roles do you think you can play at our organization?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;If you were not a software person, what would your alternate career path have been?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Teamwork&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What behaviors are you unwilling to tolerate from your teammates?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;What constitutes a good team?*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Patience&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Describe a situation where you felt your patience was tested*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Describe a situation where you being patient helped in yielding results.*&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope these questions were useful to you. We’d like to hear your way of evaluating culture fit for a candidate. Write to us and help us to improve our hiring process.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://businessofsoftware.org/2012/08/how-the-best-bosses-companies-interview-for-culture-fit-guest-blog-mikey-trafton/"&gt;Guest blog post on “interview for culture fit” by Mikey Trafton&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.creighton.edu/fileadmin/user/CareerCenter/docs/50_Tough_Interview_Questions.pdf"&gt;50 Tough interview questions by Crieghton Edu&lt;/a&gt;[PDF]&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Fireside Chat with Ash Maurya – Understanding Lean Startups – Part 5</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/10/fireside-chat-ash-maurya-understanding-lean-startups-part-5/"/>
    <id>http://www.multunus.com/blog/2014/10/fireside-chat-ash-maurya-understanding-lean-startups-part-5/</id>
    <published>2014-10-17T10:04:57+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the fifth part the multipart series: * “Fireside Chat With Ash Maurya”*  (&lt;a href="http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-understanding-lean-startups-part-4/"&gt;Read part 4 here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy&lt;/strong&gt;: * [With reference to what you said about working towards making an entrepreneur better and not keeping the business goal as our primary focus]*  This is something that I personally battle with. We want to do the right thing for others. But, we are also doing it because at the end of that there is a business goal and we are trying to focus more on the first and leaving the second as a potential benefit. That's quite hard.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: Definitely it requires a leap of faith. I see this a lot. Some of the Agile companies in the US are trying to experiment with different models.&lt;/p&gt;

&lt;p&gt;In the past, they used to bill by the hour. So, you get a client and they ask you to build them this thing. At the back of your head you know that it is never going to work. But its still a 6 months' worth of billing. We say let's just do it and then we will be off.&lt;/p&gt;

&lt;p&gt;But if you look at it again, you want to have the customer succeed. There are 2 ways to look at it. One is, the client comes to you with a budget and you have 6 
month's time to build it and they leave. And the other is to say let's increase the life.&lt;/p&gt;

&lt;p&gt;So, let's give the lifetime revenue of our customers for 6 months. If it fails after 6 months and they have lost the budget, they may or may not come back.&lt;/p&gt;

&lt;p&gt;You instead build a little trust along the way, where you are aligning your interests with theirs. This is where they may come in and in 6 weeks you might do some customer discovery with them and invalidate the idea. You can tell them that it is not going to work in this fashion.&lt;/p&gt;

&lt;p&gt;So, this is where they can now say,“We still have a budget and you just saved us 4.5 months' worth of work.”&lt;/p&gt;

&lt;p&gt;That's the leap of faith. You can deliver transparently measurable impacts along the way. It is risky. You should put yourself in that position where you become confident and you are not just cost centred at the back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy&lt;/strong&gt;: I think we have, to some extent, succeeded in keeping our goal of increasing our revenue through billing hours secondary to let's say asking the customer to test the product. Where we struggle sometimes is to convince the customer to buy into it.&lt;/p&gt;

&lt;p&gt;Like what the LinkedIn founder, Reid Hoffman says, "If you are not embarrassed by the first version of your product, you’ve released the product too late." And most customers find it really hard. Then we are left with only one choice - either you do that or we're going to stop working with you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: There's something in between, you can do some closed usability testing. This is again where there's an extreme between 
full loss to everyone and to roll out to deployment. This is where either they give you their customers or you say, "Hey, we are going to have some usability tests. We just want your permit.” And people will sign to do the stuff that you want to do.&lt;/p&gt;

&lt;p&gt;You are talking about this "enterprise complex". Anytime there's a discussion about challenging the brand or challenging the revenue comes in, people are very very scared. They want to do the full thing.&lt;/p&gt;

&lt;p&gt;And this is where you can do the usability testing anonymously. There could be some intermediate. And the idea here is to build a little trust. And I find that whenever we bring the customer's [end user's] voice in the discussion, it's very powerful.&lt;/p&gt;

&lt;p&gt;I want to share this story because I think it's kind of related. I was in Finland working on my workshop, and we had this team coming who were working in a major bank there and they were applying Lean. I asked if they were doing a side project. They said it was a core profit to the company and most executives had visibility into this. I was really surprised. A bank was the last place to see this being applied - very high risk and they are technically very conservative.&lt;/p&gt;

&lt;p&gt;I asked them how they pulled it off. And they told me that in Finland they have very strong labour laws and they knew they couldn't get fired. What they did is, they went out and applied running Lean process.&lt;/p&gt;

&lt;p&gt;They said they went to their local branch offices and told the customers who were coming out that they had to interview them [they did this without the permission of their branch managers]. They started showing their wireframes and mobile apps and in Finland they showed they can do more mobile services in banking. They showed it to people and got them to commit that they would buy the app.&lt;/p&gt;

&lt;p&gt;An interesting thing is that they recorded all these interviews and reported them. Then they went their managers and the executives and played it. So, instead of getting 
fired, they got   the resources.&lt;/p&gt;

&lt;p&gt;Again, its not us saying we have a great idea so give us money, but rather saying that we found a very creative way to test it. More customers, or our customers want it, so you should give us money and visibility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy&lt;/strong&gt;: I guess at the end of the day it depends on how badly you want do it. If you 
really really want to do it, you will figure out a way.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Most Difficult Job - Building Trust, Huh?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/10/difficult-job-building-trust-huh/"/>
    <id>http://www.multunus.com/blog/2014/10/difficult-job-building-trust-huh/</id>
    <published>2014-10-07T21:32:12+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="http://s3.amazonaws.com/multunus-website/uploads/2014/09/3-JSFoo-MLR-Entrance.jpg" alt="3-JSFoo MLR Entrance" /&gt;
&lt;img src="http://s3.amazonaws.com/multunus-website/uploads/2014/09/3-JSFoo-MLR-Entrance.jpg" alt="3-JSFoo MLR Entrance" /&gt;&lt;/p&gt;

&lt;p&gt;We all know building trust is very difficult. Now what’s more difficult than that? Take a minute to silently wonder. Now that you have an answer in your mind, read on to know what we think -&lt;/p&gt;

&lt;p&gt;We have existed for a little more than 6 years now. During this time, we have done our bit (a few events like the &lt;a href="http://www.multunus.com/ajde_events/coderetreat-at-multunus-july-12-2014/"&gt;CodeRetreat&lt;/a&gt; and &lt;a href="http://www.multunus.com/ajde_events/open-hack-multunus-may-2014/"&gt;OpenHack&lt;/a&gt;) to give back to the community. A few are never enough, right? So, we thought we could get a lot of value learning from the ones who have been involved in building a significantly large Indian Software Community for a while now.&lt;/p&gt;

&lt;p&gt;Hence, I decided to volunteer with &lt;a href="https://hasgeek.com/"&gt;Hasgeek&lt;/a&gt; for &lt;a href="https://jsfoo.in/"&gt;JSFoo 2014&lt;/a&gt;. Once I decided to volunteer, the next steps were quite simple - I had to just drop an email to &lt;a href="https://twitter.com/zainabbawa"&gt;Zainab&lt;/a&gt; enquiring her about the same. The conversations happened in frequent cycles and before I  knew I was one of the volunteers.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/10/logo-300x292.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Initially, I thought I would just make this post about my experience volunteering at JSFoo 2014, but then I realized it won’t add any value to anyone, including me if I wouldn’t put down some learning. Simply put, the learnings can be categorized under -
&lt;strong&gt;Craft, The Golden Trifecta and Values&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;FYI, * I'll come to the "toughest job" part soon after I finish describing the above categories.*&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Craft&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Doing our job well brings us success. Here, “well” is a subjective term.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Making it objective*  - If a speaker is knowledgeable in the field he is speaking about and also has a great way to keep the audience interested in the talk till the end by really empathizing with them, then he is a craftsperson.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/10/1-Speaker-2-300x199.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/10/2-Speaker-300x199.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Same goes with everyone else. Its about striving towards the outcome of the event - creating the best user experience for the community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/zainabbawa"&gt;Zainab&lt;/a&gt;, &lt;a href="https://twitter.com/jackerhack"&gt;Kiran&lt;/a&gt;, &lt;a href="https://twitter.com/rajeefmk"&gt;Rajeef&lt;/a&gt;, &lt;a href="https://twitter.com/priynag"&gt;Priyanka&lt;/a&gt;, &lt;a href="https://twitter.com/Basavaraj_BB"&gt;Basavaraj&lt;/a&gt;, &lt;a href="https://twitter.com/tonysimon90"&gt;Tony&lt;/a&gt; and every single person at JSFoo was constantly working towards making the event a successful one.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Food for thought*  What if we define Craft as an impact that we want to create and Craftsmanship as the skill to create the desired impact? Any community event is aimed at making an impact, to help it grow.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The Golden Trifecta&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://book.personalmba.com/golden-trifecta/"&gt;Appreciation, courtesy and respect&lt;/a&gt; - with this you can make anything happen and everyone at JSFoo somehow had it in their culture. Period.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Values - Extreme Programming Values&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Feedback, communication, simplicity, courage and respect, keeping this constant, if we can move forward towards doing what we want to do, embracing the change and tweaking processes we follow is enough to make an impact out there. JSFoo again, was a typical example of this kind of a mindset.&lt;/p&gt;

&lt;p&gt;The intent behind volunteering at JSFoo was to learn how to make an event successful, step by step. Did I get the steps? No. What I did get was the formula to make anything successful.&lt;/p&gt;

&lt;p&gt;The formula is to strive towards craft, using the golden trifecta with a strong belief in our values - developing a mindset of craftsmanship. JSFoo is a commitment made to hundreds of Javascript enthusiasts - to create value in the world of a Javascript programmer and we as a team did it.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/09/2-Group-Discussion-300x199.jpg" alt="Group Discussion" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coming to The Toughest Job&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the end, I agree that building trust is a tough thing but what’s tougher is to * maintain*  that trust.&lt;/p&gt;

&lt;p&gt;Volunteering at JSFoo 2014 made me realize that without a mindset of craftsmanship, its very difficult for organizations such as HasGeek to repeatedly pull off successful events such as JSFoo, month after month, year after year. And its that kind of consistency that's required to maintain trust.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Why, How and What of UX Research - Part 2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/09/the-why-how-and-what-of-ux-research-part-2/"/>
    <id>http://www.multunus.com/blog/2014/09/the-why-how-and-what-of-ux-research-part-2/</id>
    <published>2014-09-22T04:42:31+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the Part II in the series &lt;a href="www.multunus.com/blog/2014/09/why-how-and-what-of-ux-research-part-1/"&gt;The Why, How and What of UX Research&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post will help you get acquainted with the popular UX research methods. Knowing about them will help you choose the right method for the job and make your research more effective.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/09/user-research-methods-2dandqs-1.png" alt="User Research Methods" /&gt;
 &lt;/p&gt;

&lt;p&gt;The User Experience Research Methods can be broadly classified based on the &lt;a href="http://www.nngroup.com/articles/which-ux-research-methods/"&gt;stage of product development&lt;/a&gt;:&lt;/p&gt;

&lt;h2 id="strategy"&gt;1. Strategy&lt;/h2&gt;

&lt;p&gt;At the strategy phase, your focus is on validating your ideas and looking for inspiration to proceed towards a solution. Either that, or you are exploring for new opportunities.&lt;/p&gt;

&lt;p&gt;At this stage, you should be looking for a combination of &lt;strong&gt;Qualitative &lt;/strong&gt; and &lt;strong&gt;Quantitative&lt;/strong&gt; research methods.&lt;/p&gt;

&lt;h3 id="in-depth-user-interviews"&gt;In-depth User Interviews&lt;/h3&gt;

&lt;p&gt;In Early stages of your product, there is no substitute for talking to users directly. * Is the problem you are trying to solve even a real problem?
Who are the people facing the problem?*  Nailing these down are keystones for your project.&lt;/p&gt;

&lt;p&gt;Start with &lt;a href="http://uxmag.com/articles/using-proto-personas-for-executive-alignment"&gt;Proto-Personas&lt;/a&gt; and recruit users who match the personas. As you talk to more users, keep refining the persona.&lt;/p&gt;

&lt;p&gt;I would highly recommend a &lt;strong&gt;&lt;a href="www.youtube.com/watch?v=f84LymEs67Y"&gt;Jobs To Be Done&lt;/a&gt; style of interviews with at least 3 People&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Remote Calls: &lt;a href="https://plus.google.com/hangouts"&gt;GoogleHangout (Free)&lt;/a&gt;, &lt;a href="http://www.skype.com/"&gt;Skype (Free)&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Recording: &lt;a href="http://audacity.sourceforge.net/"&gt;Audacity - Audio only (Free)&lt;/a&gt;, &lt;a href="http://www.techsmith.com/camtasia.html"&gt;Camtasia - Audio/Video (Paid)&lt;/a&gt;, &lt;a href="http://www.techsmith.com/jing.html"&gt;Jing&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Scheduling: &lt;a href="http://www.trybetty.com/assistantto/"&gt;AssistantTo&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Tip: Use &lt;a href="http://cycling74.com/products/soundflower/"&gt;SoundFlower (Free)&lt;/a&gt; to be able to record both sides of the call.*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Update: We tried Google Hangout on Air for the interviews and found it to work quite well for remote interviews. You can do away recording mess too.
&lt;a href="www.multunus.com/blog/2014/09/using-google-hangouts-air-remote-usability-testing/"&gt;Read more here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="contextual-inquiry"&gt;Contextual Inquiry&lt;/h3&gt;

&lt;p&gt;When you ask people about something that's not straight out of past experience - that requires analysis and imagination - you'll find that
&lt;strong&gt;what they say is different from what they would actually do.&lt;/strong&gt; They don't want to lie to you. They just aren't in the context.&lt;/p&gt;

&lt;p&gt;Contextual Inquiry often involves stalking the user (legally, of course) and collecting notes throughout the day. If your product is targeting a team and not a single user, you could be part of the team and get a clearer picture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://boxesandarrows.com/remote-contextual-inquiry-a-technique-to-improve-enterprise-software/"&gt;Remote Contextual Inquiry: A Technique to Improve Enterprise Software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="experience-sampling"&gt;Experience Sampling&lt;/h3&gt;

&lt;p&gt;Similar to Contextual Inquiry is the Experience Sampling or the Daily  method. It involves interrupting the participant multiple times a day, asking them to make note of their observations or answer a questionnaire in real time. Instead of you making inferences, you are relying on the user to make note of his thoughts.&lt;/p&gt;

&lt;p&gt;Watch how Google used this method to improve their search experience in &lt;a href="http://vimeo.com/84689123"&gt;Don't Listen to Users, Sample Their Experience&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="https://quantifiedself.appspot.com/main.jsp"&gt;PACo (Private Beta)&lt;/a&gt;, &lt;a href="https://metricwire.com/"&gt;MetricWire (Paid)&lt;/a&gt;, &lt;a href="https://itunes.apple.com/us/app/mema/id593566606?ls=1&amp;amp;mt=8"&gt;mEMA (Paid)&lt;/a&gt;, &lt;a href="http://www.otago.ac.nz/psychology/otago047475.pdf"&gt;More Tools…&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tip: If you are relying on questionnaire, remember to keep it short. The more time the participant has to invest, the less participation you'll have.*&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="surveys"&gt;Surveys&lt;/h3&gt;

&lt;p&gt;A survey is a questionnaire on a random sample of your target population. Surveys help you make inferences quantitatively and see patterns on a much larger sample as compared to interviews.&lt;/p&gt;

&lt;p&gt;The success of the survey depends largely on how you sample your users and the framing of your questions. Here are a few tips:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Keep it short.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use multiple choice questions. Aim for accuracy not precision.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keep questions granular and try not to combine measures.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you end up with more questions, cycle questions with different users.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="http://wufoo.com"&gt;Wufoo (Freemium)&lt;/a&gt;, &lt;a href="http://surveymonkey.com"&gt;SurveyMonkey (Freemium)&lt;/a&gt;, &lt;a href="http://www.typeform.com/"&gt;TypeForm (Freemium)&lt;/a&gt;, &lt;a href="http://www.google.com/google-d-s/createforms.html"&gt;Google Forms (Free)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="optimization"&gt;2. Optimization&lt;/h2&gt;

&lt;p&gt;Once you have figured out that the problem you are trying to solve is worth solving, you can start optimizing the granular details of your design. This will help you arrive at an optimal solution and reduce risks of getting it wrong.&lt;/p&gt;

&lt;h3 id="card-sorting--tree-testing"&gt;Card Sorting / Tree Testing&lt;/h3&gt;

&lt;p&gt;Card Sorting is process for figuring out the optimal Information Architecture - how users would * expect*  to find content or functionality. This knowledge is especially useful if you have a large number of categories and menu items.&lt;/p&gt;

&lt;p&gt;This involves your content to be laid out in cards and having your user sort them in order or lay them in hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="http://usabilitytools.com/"&gt;UsabilityTools&lt;/a&gt;, &lt;a href="http://www.optimalworkshop.com/optimalsort.htm"&gt;OptimalSort&lt;/a&gt;, &lt;a href="http://www.optimalworkshop.com/treejack.htm"&gt;TreeJack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://boxesandarrows.com/card-sorting-a-definitive-guide/"&gt;Boxes And Arrows has a great Guide on Card Sorting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="paper-prototyping"&gt;Paper Prototyping&lt;/h3&gt;

&lt;p&gt;Paper Prototyping is one of the cheapest and quickest way to iterate towards an optimal flow and user interface.&lt;/p&gt;

&lt;p&gt;You quickly sketch screens of the product on paper and conduct usability testing on them. To simulate the working of the prototype, just keep swapping the paper-screens manually as and when the user interacts with it or you can use the below mentioned tools to create a interactive digital prototype.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.smashingmagazine.com/2010/03/29/free-printable-sketching-wireframing-and-note-taking-pdf-templates/"&gt;Printable Templates&lt;/a&gt; you can use for faster prototyping.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Easily make the paper prototypes interactive using &lt;a href="https://marvelapp.com/"&gt;MarvelApp&lt;/a&gt; or &lt;a href="http://invisionapp.com/"&gt;InvisionApp&lt;/a&gt; or &lt;a href="https://www.flinto.com/"&gt;Flinto&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://speckyboy.com/2010/06/24/10-effective-video-examples-of-paper-prototyping/"&gt;10 Effective Video Examples of Paper Prototyping&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="assess"&gt;3. Assess&lt;/h2&gt;

&lt;p&gt;At this stage, you've built the solution and your users are already using it. It's now only a matter of verifying your decisions quantitatively and making continuous smaller improvements. That said, you may still have to combine methods from earlier stages to get insights.&lt;/p&gt;

&lt;h3 id="usability-test"&gt;Usability Test&lt;/h3&gt;

&lt;p&gt;Usability Testing is a technique of testing your designs directly on your users. This requires that the user complete a few pre-determined tasks and follow to a think-aloud protocol, while you take note of your observations.&lt;/p&gt;

&lt;p&gt;As product-creators you will always know how your product is supposed to work, but your users won't. Usability testing is one of the best methods to escape this Curse of Knowledge.&lt;/p&gt;

&lt;p&gt;Most often you'll find your most important usability issues by testing on just 3 users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="http://usertesting.com"&gt;UserTesting&lt;/a&gt;, &lt;a href="http://www.userzoom.com/"&gt;UserZoom&lt;/a&gt;, &lt;a href="https://usabilla.com/"&gt;Usabilla&lt;/a&gt;, &lt;a href="http://www.loop11.com/"&gt;Loop11&lt;/a&gt;, &lt;a href="https://lookback.io/"&gt;Lookback for iOS&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="heuristic-evaluation"&gt;Heuristic Evaluation&lt;/h3&gt;

&lt;p&gt;Heuristic Evaluation differs from Usability Testing in that, the test is done by an usability
expert instead of a user.&lt;/p&gt;

&lt;h3 id="ab-testing"&gt;A/B Testing&lt;/h3&gt;

&lt;p&gt;Many times you find yourself with alternative solutions and a good way to test them is in comparison. In A/B Testing, you show different versions to different users at random. You then measure their performance through analytics.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="https://www.optimizely.com/"&gt;Optimizely&lt;/a&gt;, &lt;a href="https://vwo.com/"&gt;Visual Web Optimizer&lt;/a&gt;, &lt;a href="http://leanstack.io/mobile-a-b-testing"&gt;Mobile A/B Testing Tools…&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="second-test"&gt;5 Second Test&lt;/h3&gt;

&lt;p&gt;It's all about the first impressions! The test involves showing your design to the participant for only 5 seconds and getting feedback on the salient features. Asking users what they remembered is a good way to confirm if your design is communicating the right message or if the Call-to-Actions are prominent enough.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="https://usabilityhub.com/"&gt;UsabilityHub&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="first-click-testing"&gt;First Click Testing&lt;/h3&gt;

&lt;p&gt;From the same train of thought as the 5 second test, the * first click*  testing is about getting the actions right the first time.&lt;/p&gt;

&lt;p&gt;Given a certain task, will the user know where to click without having to probe through?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tools:&lt;/strong&gt;&lt;a href="http://www.optimalworkshop.com/chalkmark.htm"&gt;ChalkMark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Further Reading:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.gerrymcgovern.com/new-thinking/vital-importance-first-click"&gt;The vital importance of the first click&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.measuringusability.com/blog/first-click.php"&gt;First Click Testing&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Based on what stage you are at and what questions you are trying to answer, choose one or a combinations of these methods to conduct your research.&lt;/p&gt;

&lt;p&gt;If you have a question, need help conducting UX research or improve an existing product, I'd love to help. Just choose a time that works for you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The Why, How and What of UX Research - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/09/why-how-and-what-of-ux-research-part-1/"/>
    <id>http://www.multunus.com/blog/2014/09/why-how-and-what-of-ux-research-part-1/</id>
    <published>2014-09-17T17:59:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Whether knowingly or unknowingly, you've used qualitative feedback in the past. After reading this article, you will do it &lt;strong&gt;knowingly&lt;/strong&gt;, using the &lt;strong&gt;right methods&lt;/strong&gt; and leverage the &lt;strong&gt;right tools&lt;/strong&gt; to do it effectively.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;UX Research&lt;/strong&gt; is a * systematic study*  into the overall experience of a person using your product or service, establish * facts*  and reach a * conclusion* .&lt;/p&gt;

&lt;p&gt;With the advent of * just-throw-in-a-few-lines-of-javascript*  analytics tools like &lt;a href="http://analytics.google.com"&gt;Google Analytics&lt;/a&gt; and &lt;a href="https://heapanalytics.com"&gt;Heap Analytics&lt;/a&gt;, many are increasingly relying on Analytics. Sure, it can be a good starting point but let's look at a few cases when you would want to rely on qualitative feedback:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Your app boasts a kick-ass UI, but your analytics shows a 90% drop-off after sign-up. It's great that analytics was able to point that out to you, but the 'why?' is something best answered using qualitative research.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you have a large user base, analytics enjoys reduced risks due to large sample size. But it's mostly lagging and you wouldn't know until your new awesome feature has reached your audience. If you have a reputation to protect, you might want to get early feedback using qualitative research methods.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When you are researching about a new idea, it pays to dig deeper into the problem you are trying to solve and know the target customer segment better.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="quantitative-vs-qualitative"&gt;Quantitative Vs. Qualitative&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Qualitative&lt;/strong&gt; methods are much better suited for answering question about * why*  or * how to fix a problem* , whereas &lt;strong&gt;quantitative&lt;/strong&gt; methods do a much better job answering 
* how many*  and * how much type*  of questions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From NNGroup Blog: 
&lt;a href="http://www.nngroup.com/articles/which-ux-research-methods/"&gt;When to Use Which User Experience Research Methods&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You sit with a participant and observe how he uses your product. You take notes as he follows a think-aloud protocol. * Qualitative Feedback.*&lt;/p&gt;

&lt;p&gt;You do that with 30 people and conclude that 80% of the participants faced a problem in the on-boarding process. You've now turned the test into * Quantitative in nature* .&lt;/p&gt;

&lt;p&gt;Ideally, a combination of both are required to make effective decisions. Take a look at the image below:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://media.nngroup.com/media/editor/alertbox/user-research-methods-2dandqs.png" alt="how Attitudinal vs. Behavioral affect the types of questions that can be asked" /&gt;&lt;/p&gt;

&lt;p&gt;To know more, read &lt;a href="http://www.nngroup.com/articles/which-ux-research-methods/"&gt;When to Use Which User Experience Research Methods&lt;/a&gt;&lt;/p&gt;

&lt;h3 id="user-research-vs-user-testing"&gt;User Research Vs. User Testing&lt;/h3&gt;

&lt;p&gt;If done before or during the design phase, these techniques are collectively known as &lt;strong&gt;User Research&lt;/strong&gt;; if after, they’re known as &lt;strong&gt;User Testing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Research&lt;/strong&gt; attempts to answer questions like * “who will use this design?”*  and * “how does this concept work in the context of our users’ workflow,”*  whereas &lt;strong&gt;user testing&lt;/strong&gt;seeks to answer: * “how effective is this design?”*&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From UX Booth: &lt;a href="http://www.uxbooth.com/articles/complete-beginners-guide-to-design-research/"&gt;Complete Beginner’s Guide to Design Research&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="workflow"&gt;Workflow&lt;/h2&gt;

&lt;p&gt;Now that you know what UX research is all about and why it is important, let's look at how to conduct the research.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Identify Customer Segment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Form Hypothesis&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Choose a Method&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Recruit Users&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Conduct Test and Analyse Results&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rinse and Repeat&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you've put enough thought into who you have been talking to and how the testing goes, talking to just 5 people can go a long way. &lt;a href="http://www.nngroup.com/articles/why-you-only-need-to-test-with-5-users/"&gt;Read more on NNGroup&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="good-resources"&gt;Good Resources:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.amazon.in/Rocket-Surgery-Made-Easy-Do-It-Yourself/dp/0321657292"&gt;Book: Rocket Surgery Made Easy - Steve Krug&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.amazon.com/Lean-UX-Applying-Principles-Experience/dp/1449311652"&gt;Book: Lean UX - Jeff Gothelf&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://shop.oreilly.com/product/0636920028253.do"&gt;Book: Lean Customer Development - Cindy Alvarez&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.nngroup.com/articles/"&gt;Blog: NNGroup Articles&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.uxbooth.com/"&gt;Blog: UXBooth&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;In the next few articles we'll go over the steps in detail. &lt;strong&gt;Also, If you would like help with Lean UX and Usability Testing, &lt;a href="https://www.sohelpful.me/manishrc"&gt;schedule a free call with me now&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>Using Google Hangouts on Air for Remote Usability Testing</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/09/using-google-hangouts-air-remote-usability-testing/"/>
    <id>http://www.multunus.com/blog/2014/09/using-google-hangouts-air-remote-usability-testing/</id>
    <published>2014-09-17T17:17:18+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/09/6963131702_a1037a4a0f_b-e1410934533354.jpg" alt="Remote Usability Testing" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Convenience&lt;/em&gt;  is one of the key advantages of Remote Usability Testing. You don't need to get the participant in-house and it works especially well when your users are spread across different locations.&lt;/p&gt;

&lt;p&gt;But that could just turn around if your tools start to give-up on you. With remote testing, you now have 2 points of failure - participant's and your's. There could be restrictions on installing new software on the participants machine and problems with setting up the microphone and internet issues could easily gobble up the allotted time.&lt;/p&gt;

&lt;h2 id="hangout-on-air"&gt;Hangout on Air&lt;/h2&gt;

&lt;p&gt;For for past couple of tests, we tried &lt;strong&gt;Google Hangout on Air&lt;/strong&gt; and liked it for the following reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Most participants already have it installed and know how to use Google Hangout.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Screen Sharing is just a click away.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Unlike some screen recording solutions, you don't have to worry about recording both the participant's and your voice.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can add as many observers as needed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After you are done, it saves the video on YouTube for you.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Even if you get disconnected, the session continues and you can join where you left.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It's free :) .&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="how-to"&gt;How-to&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure to have your Youtube account connected to your google plus account.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Go to&lt;a href="https://plus.google.com/hangouts/onair"&gt;Google+ Hangouts&lt;/a&gt; and create a new &lt;strong&gt;Hangout on Air&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you don't want the hangout to be publicly available, make sure to remove 'Public' and Add the participant's email.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Though you can schedule start and end times, you will have to manually start the session for it to start recording.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To download the video for offline use, go to &lt;a href="https://www.youtube.com/my_videos"&gt;your videos on Youtube&lt;/a&gt; and you'll find a "Download MP4" in the video drop-down.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="gotchas"&gt;Gotchas&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We found Google Hangout to drain the laptop battery too fast. If you or the participants are on the laptop, being connected to the charger is a must.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Even if you think the test will take only 25 min, keep a buffer of 15-20 minutes to account for Technical Issues and Timezone differences.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;While sharing the screen, the webcam of the participant is turned off. So won't be able to see the participant's face.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="bonus"&gt;Bonus&lt;/h2&gt;

&lt;p&gt;Use this &lt;a href="http://sensible.com/downloads/checklists.pdf"&gt;Usability Checklist (PDF)&lt;/a&gt; to make sure you aren't missing anything and this &lt;a href="http://sensible.com/downloads/test-script.pdf"&gt;Test Script (PDF)&lt;/a&gt; to explain what you are doing to the participants.&lt;/p&gt;

&lt;p&gt;(From Steve Krug, the author of Rocket Surgery Made Easy)&lt;/p&gt;

&lt;h2 id="takeaway"&gt;Takeaway&lt;/h2&gt;

&lt;p&gt;If you are looking for a quick and easy solution to conduct your remote usability tests, give Google Hangout on Air a go and let us know your thoughts -
Did it work for you? Did you find something better?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you need any help with usability testing, feel free to reach out to me - manish.c [at] multunus.com or &lt;a href="https://www.sohelpful.me/manishrc"&gt;schedule a free 30 min call&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
  </entry>
  <entry>
    <title>We made a mistake - end of the story?</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/09/made-mistake-end-story/"/>
    <id>http://www.multunus.com/blog/2014/09/made-mistake-end-story/</id>
    <published>2014-09-05T02:01:22+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;You sow a seed, with an intention that it will one day provide shade to many. You water, nurture and care for it. It grows into a small plant. It becomes your baby. One day, you find that someone has stepped over it! Though not deadly, damage done is very painful. You don’t know if the stepping over was an intentional act or a mistake, but you are pretty upset about the damage itself.*&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;I will explain the above bit in just a little while.&lt;/p&gt;

&lt;p&gt;Our team had chalked down a marketing strategy to spread the word about our hiring campaign. The campaign involved a programming challenge. We had set ourselves a goal that we wanted to achieve everyday. And one of the ways to achieve the goal of spreading the word was to spread the word on various communities - on google groups.&lt;/p&gt;

&lt;p&gt;We emailed the members in the communities on their respective google groups. But here’s what went wrong - the email looked like &lt;strong&gt;spam&lt;/strong&gt;.[Our intention wasn’t to spam, though]&lt;/p&gt;

&lt;p&gt;We realized the mistake in the copy which made it seem so, but it was too late - the emails had been sent. This had its own obvious repercussions. This resulted in members in the communities getting agitated and also public embarrassment to us.&lt;/p&gt;

&lt;p&gt;The first few lines above were written addressed to the creators of the communities. If you were the person who sowed the seed to create the community or you’ve watered, nurtured and cared for it, then we’re sincerely sorry. We understand that you created this group with the intention to foster interactions and growth in people with common interests. We take the ownership of the mistake. Our heartfelt apologies to you and also to the members of the community to have encountered this email.&lt;/p&gt;

&lt;p&gt;Yes, we made a mistake. We apologized. But, is that the end of the story?&lt;/p&gt;

&lt;p&gt;We brainstormed to find the root cause of this problem so that it can be avoided in the future.&lt;/p&gt;

&lt;p&gt;This is not a mistake that one individual is to be held responsible for. Things went unnoticed by the team, as in the whole organization. Categorized below are the things that resulted in something that we pushed out with less than mediocre quality -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mindfulness:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At times, we do tend to get carried away in the flow. We take certain things for granted and sometimes lose our mindfulness. Through the campaign we were busy spreading our attention across many aspects of its marketing. But, we let the fact of every aspect needing equal amount of our attention and care, slip out of our mind.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Questioning the Reason:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We also didn’t question enough why we were doing the thing that we were doing. Be it while creating the template or while sending it to communities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Empathy:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We failed to stand in the shoes of the reader of the content and think about how they would perceive it. This is something that we would definitely look forward to adopt in our culture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Speed over Quality:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the situation of urgency, we sometimes make a choice between speed and quality. We do make a conscious effort in catching ourselves choosing speed over quality, but seems like we failed this time.&lt;/p&gt;

&lt;p&gt;Here’s a checklist of things, which will help us avoid us making similar mistakes:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Does the person forwarding the content have at least 15 mins to spend before hitting “Send”?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does the person have enough knowledge and experience in the organization’s quality standards?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If she does not have enough experience, is she pairing with someone with enough experience?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Has the person gone back in time when she didn’t even know about Multunus and seen the content and analysed how she would perceive us, after having read the post?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every incident, happy, sad or ugly helps us mature as an organization and as individuals as well - and this is one of those which did teach us a lot about empathy, respect and mindfulness.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rohan: "Do something well or not at all"</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/08/rohans-views-on-product-and-multunus/"/>
    <id>http://www.multunus.com/blog/2014/08/rohans-views-on-product-and-multunus/</id>
    <published>2014-08-31T13:11:39+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;A project has a higher probability of success if the “why” is clear to everyone on the team. Learning from a customer about the "why" behind the product and the "why" behind choosing Multunus as a partner was inspiring for the team and the entire company.&lt;/p&gt;

&lt;p&gt;We try hard to focus on the big-picture and knowing the "why" helps us understand the nuances of a customer's product decision. A clear "why" also helps us focus even more on the outcome more than the output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/pub/rohan-mathew/36/140/7b6"&gt;Rohan Mathew&lt;/a&gt; is the President and CEO of The Intersect Fund, a non-profit microfinancer in the New York and New Jersey area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rohan’s TEDx talk on the story behind The Intersect Fund&lt;/strong&gt;&lt;/p&gt;

&lt;iframe src="//www.youtube.com/embed/Slugeo4g_NQ" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;We're proud to say that Rohan has now engaged Multunus to build a loan approval and disbursement system for the fund and eventually plans to build a complete loan processing system from origination to collections.&lt;/p&gt;

&lt;p&gt;Rohan sent our team a note recently - we read it and got goosebumps. We got his permission to repost it on our blog here. Read on:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;“I wanted to start by taking a step back and giving you all a bit more perspective on where I am coming from. I find it's always helpful when you u`nderstand another person's motivation.*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This app is something that we at Intersect have been talking and thinking about for a very long time. The earliest mention I can find is from March 2011, when we wrote and received a grant proposal to start working on it. Since then, we have been steadily improving and streamlining our existing systems, low tech as they may be. I've mostly led this process and gained lots of insight along the way.*&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What's held us back over the past 3 years to get the impetus to start was finding the right partner. Everyone that I came in contact with was either so radically expensive that we could never hope to raise the money to build this thing or just didn't have the skill or inspire the confidence to trust them with a project this big.”*&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;In general, I am a big believer in doing something well or not at all. So we did nothing at all. Until Vanessa found Multunus.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="www.linkedin.com/pub/vanessa-carter/a/7b9/748"&gt;Vanessa Carter&lt;/a&gt; is the Executive Director of Lend for America, a sister non-profit of the The Intersect Fund&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“The feeling I got from observing your team on the LFP (Lend For Philly, a small project Multunus executed for Lend for America) project exceeded my wildest expectations.*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Although we've had some rocky times over the past month, nothing has ever risen to the level that would make me feel we picked the wrong partner.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;So, it would not be hyperbolic for me to say that I've bet the entire company on this app and on Multunus. We are effectively married now. There is no conceivable way we could move to another developer after the investment we've already made. So, although I've technically only signed a contract for Closer[a module within the system], I have effectively agreed to invest hundreds of thousands of dollars and 3-4 hrs of my time per day on this project.*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;It goes without saying this is the largest investment we've ever made in our history”.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rohan, we're humbled by your trust in our team to deliver on something this critical for your business. Thank you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Fireside Chat with Ash Maurya - Understanding Lean Startups - Part 4</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-understanding-lean-startups-part-4/"/>
    <id>http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-understanding-lean-startups-part-4/</id>
    <published>2014-08-26T00:25:03+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/08/1461590_839062349444076_7781934098228004960_n.jpg" alt="1461590_839062349444076_7781934098228004960_n" /&gt;&lt;/p&gt;

&lt;p&gt;This is the fourth part the multipart series: “Fireside Chat With Ash Maurya” (&lt;a href="http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-lean-startups-part-3/"&gt;Read part 3 here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Manoj&lt;/strong&gt;: When somebody hears about the Lean Startup, they hear stories that always peak their interest. And the next day they want to apply it. But, its a change. Initially, the progress comes up and then eventually it goes down.&lt;/p&gt;

&lt;p&gt;According to you, what are the behavioural changes that a customer or a software building team has to go through to get used to the Lean approach?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: That’s a great question. I think, it all comes down to the detachment of ego from the product. For a lot of us we attach too much of our personal self to the product. This is again where I say, we need to have that attachment otherwise we wouldn’t care about what we are building. But, the focus shouldn’t be on the solution box.&lt;/p&gt;

&lt;p&gt;I always draw the picture on the lean canvas and show the solution box (which is a very important one) as a very small part, that we define ourselves by. But, it’s NOT the 
most important thing in the Lean model. That’s going to change over time.&lt;/p&gt;

&lt;p&gt;This is the hardest thing to see happening in real cultures. When it does then, it means that you are being more objective and being more empirical.&lt;/p&gt;

&lt;p&gt;There’s nothing wrong in having strong opinions. But, you are the first one who wants to test it. As fast and in the smallest way possible. You don’t want to be living in this delusional world. You believe it’s true but you are testing it because, what if it’s not? That’s the most fundamental thing. You’d want to build that culture around. If you don’t have that then, you are going to be delaying the learning.&lt;/p&gt;

&lt;p&gt;So, even in the practice of it, some people also latch on to what I call silver bullets or quick tactics. They read something and try to apply it, and there’s some good reward. But people go looking for such tactics everywhere - "
Where can I find something that I can copy very quickly?"&lt;/p&gt;

&lt;p&gt;But, its hard when none of these tactics work for you and you still have to succeed. That’s where you have to dig in deeper. That’s the harder part of it. You have to do the hard work of talking to customers or really analyzing the current situation and seeing what else works.&lt;/p&gt;

&lt;p&gt;In &lt;a href="http://en.wikipedia.org/wiki/Eric_Ries"&gt;Eric’s&lt;/a&gt;book “The Lean Startup” , he talks about having frequent "pivot or persevere" meetings. These are meetings where you come in and take a look at the metrics. You decide if you want to stay the course which is persevere or change your strategy. There’s always the third option of the "reset" button. He doesn’t talk about that, but I bring that in. Because very early on, some ideas are just not going to work.&lt;/p&gt;

&lt;p&gt;You can get that negative feedback very quickly, but it’s still a success in my point of view which saved you 6 months of figuring that out. Probably it took 6 days rather than 6 months. So those are hard. I have a tagline that I'd like to quote to resonate with that. I have this thing that I say- "* Life's too short to build something that nobody wants.* "&lt;/p&gt;

&lt;p&gt;For me, having built a lot of things that I thought are going to be great products and spending sometimes years of my life and putting my soul into it and seeing only a few people use it, was very painful. And that's where that came from. I only build that final solution when I know it's going to work. Even that’s hard to say.&lt;/p&gt;

&lt;p&gt;People sometimes ask me what was the MVP for my book and I say, if I start drawing a picture, it's so recursive. There are many products that came out of it. While I wrote the book, there was the blog which was the 1st product and which is still a product, then there were workshops that I did that were just tests for the book initially (but now I run them as on going basis). It's very hard to say which was the one because all of these things moved in one general direction.&lt;/p&gt;

&lt;p&gt;If you apply the process, say you want to build software but eventually I'd like to say that you want to build a better 
customer. And that may require software, may require content or tutorial or many other things along the way. But you are committed to make that customer the happiest. So as they say, “
Don't build a better axe but build a better user of the axe”. So, whatever it is that you are building, that’s how you should be looking at it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy&lt;/strong&gt;: Yeah, I keep getting reminded of Kathy Sierra - Kathy Sierra is the  lady behind  the JAVARanch and she used to write this really popular blog (but now she has stopped it) - Creating Passionate Users. One of the things that she said was - “* If a user feels smart after they use your product, then your product is successful.* ” They should feel good about themselves and  forget about your product. They don't  know why they are feeling so. There's something inside their brain that tells them to use this product because it makes them feel smart.&lt;/p&gt;

&lt;p&gt;Well, that’s what I understood reading it. It’s a very interesting thing that I remember.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: That's the message of the Customer Factory -  You’re building this system that makes the Rockstar Customers successful. If you make them happy, you make them successful, then the business part takes care of itself. One of our “whys” is helping entrepreneurs succeed. But, that combined with the entrepreneurs being our customers becomes our product.&lt;/p&gt;

&lt;p&gt;So, sometimes they ask , “* This canvas you are building is online but, sometimes with the online stuff there are privacy concerns”* . So I say, we have a printed version and we just give it to them. Then the question is that- doesn’t that reduce the usage of the online tool. To answer that, if I can go back to “* Helping entrepreneurs succeed* ”, the how thing is to give them whatever tools they need.&lt;/p&gt;

&lt;p&gt;It’s not so much about whether your product is this online canvas tool. With everything that we do - we distribute things on the blog and on the content page and many other things - if we have made a better entrepreneur, then we have succeeded. Otherwise, we are just playing games.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Production Outages - Part 2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/08/production-outages-part-2/"/>
    <id>http://www.multunus.com/blog/2014/08/production-outages-part-2/</id>
    <published>2014-08-12T16:44:23+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Read the previous part of this post &lt;a href="http://www.multunus.com/blog/2014/07/production-outages-part1/"&gt;here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyone who has spent sometime in the software industry knows, there is no way to prevent outages completely. What we can do is to keep reducing the probability of outages happening, with better monitoring. The rest of this post talks about methods to equip teams to handle an outage better (in those unfortunate times) when it happens in spite of the prevention mechanisms already put in place.&lt;/p&gt;

&lt;p&gt;As mentioned in my previous post, outages have a human aspect too and it’s critical that we look at that as well, for curing the situation.&lt;/p&gt;

&lt;p&gt;Before jumping into the details, I would like to share an experience we had during an outage that we had a few months back.&lt;/p&gt;

&lt;p&gt;Throughout the outage, which spanned 3 days (thankfully, most of it over a weekend), it was amazing to see the commitment of the team. At Multunus, we believe in the power of self-propelling teams - especially during more trying times such as when outages happen.&lt;/p&gt;

&lt;p&gt;There were no blame games, everyone acted as a team and backed up each other. Many decisions had to be made on the go and team collaborated well together and brainstormed whenever appropriate. That was nice to see. And I’m glad to be leading such an awesome team.&lt;/p&gt;

&lt;h2 id="resilience-engineering"&gt;Resilience Engineering&lt;/h2&gt;

&lt;p&gt;Resilience, as per the dictionary, is the capacity to recover quickly from difficult situations. Resilience Engineering “* is the intrinsic ability of a system to adjust its functioning prior to, during, or following changes and disturbances, so that it can sustain required operations under both expected and unexpected conditions* ”&lt;a href="http://www.amazon.com/Resilience-Engineering-Practice-Ashgate-Studies/dp/1409410358"&gt;&lt;/a&gt;. This is matured engineering where the team continues to do “right things” even under difficult situations.&lt;/p&gt;

&lt;p&gt;Let’s see why this concept is important. Most of the time you find that, human error is the cause of an outage. And in many organisations the Root Cause Analysis ends with blaming humans. These so called “post mortem meetings” make people uncomfortable and demotivated. Ideally the root cause should start from where the human error was made, to find out that how and why the “system” allowed that to happen. And doing that can help make the system more resilient and efficient with these incidents.&lt;/p&gt;

&lt;p&gt;Resilience Engineering was originally introduced in industries such as aviation and healthcare - where human lives are at stake. But it makes sense to apply the same concept in a software failure scenario as well. If you want to read more about Resilience Engineering, do check out 
&lt;a href="http://www.kitchensoap.com/2012/06/18/resilience-engineering-part-ii-lenses/"&gt;John Allspaw’s blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also found the following presentation videos and blog posts useful:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=LdOe18KhtT4"&gt;10 deploys per day dev and ops cooperation at Flickr&lt;/a&gt; [Presentation, 46min]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=tZ2wj2pxO6Q"&gt;Outages, Post Mortems, and Human Error 101&lt;/a&gt; [Presentation, 50min]&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://codeascraft.com/2012/05/22/blameless-postmortems/"&gt;Blameless Postmortems&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="an-unexpected-benefit-of-continuous-delivery"&gt;An unexpected benefit of Continuous Delivery&lt;/h2&gt;

&lt;p&gt;This is debatable, but one of the interesting things we’ve noticed on our team is the link between practicing Continuous Delivery [CD] and building Resilience in the team. This is probably because a team practicing CD is always in a “state of unease” and also has the “awareness of failure” - this kind of mental toughness is especially useful to face difficult situations such as outage much better. The corollary is also probably true: Practicing Continuous Delivery also * requires*  an environment where its “safe to fail” in the first place.&lt;/p&gt;

&lt;h2 id="something-to-try"&gt;Something to try&lt;/h2&gt;

&lt;p&gt;A useful exercise: Secretly schedule a “trial by fire” session - to test the resilience of the team. We’re yet to try this out ourselves, but you can read how 
&lt;a href="http://queue.acm.org/detail.cfm?id=2371297"&gt;Googles and the Amazons of the world do it here&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Fireside Chat with Ash Maurya - Understanding Lean Startups - Part 3</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-lean-startups-part-3/"/>
    <id>http://www.multunus.com/blog/2014/08/fireside-chat-ash-maurya-lean-startups-part-3/</id>
    <published>2014-08-11T16:39:42+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the third part the multipart series: “Fireside Chat With Ash Maurya” (&lt;a href="http://www.multunus.com/blog/2014/06/fireside-chat-ash-maurya-lean-startups-part-2/"&gt;Read part 2 here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Madhuri&lt;/strong&gt;: One thing that I've heard is that most of the business projects fail not because you've not defined the problem properly but because the goals are huge. And even in my previous project we were finding it very difficult to define the goals very objectively. Unless we can measure the goal, it is hard to know whether we're moving in the right direction. Do you have any suggestions on how to define an objective goal?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: Sure. The question was about how to define a goal around the project. In the past, while you were defining goals, were they more revenue numbers or customer numbers?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Madhuri&lt;/strong&gt;: Well, they were not in terms of numbers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: That's the first step. There has to be some number. What I like to do is just do a ballpark of success goals and success milestone. Imagining yourself 3 years into the future. Its not about being accurate, you need to come up with some ballpark. You spend 3 years of your life on this project using all these resources. What would make it worthwhile? What is that minimum success criteria? Some people work through revenue numbers - generating this much revenue per year or per month.&lt;/p&gt;

&lt;p&gt;So, when I released my first book it wasn't about how much revenue I could make. It was more about how many copies I could sell or what kind of distribution I could have. If I can make 10,000 people buy this book, that will make me very happy. So, for me that would make it worthwhile. It needs to be a measure of one of  those things.&lt;/p&gt;

&lt;p&gt;But then, what's more interesting is that those are still big numbers. You know 10,000, what if it were 12,000 or 9,000, is that a failure? Again, that's more of a ballpark estimate. We can then bring that down by an order of magnitude or 2 orders of magnitude and make it something worth measuring. So if I have 3 years to get 10,000 books sold and I can't get 10 people who want my book today, then that's a big problem.&lt;/p&gt;

&lt;p&gt;Lets take that business model working at scale. Its about systems thinking. Business models can be scaled down. What works at scale should also be demonstrated at a smaller scale.&lt;/p&gt;

&lt;p&gt;A good extreme example of this is Facebook. Facebook was able to convince their investors that they could provide good Facebook in every college campus just on the basis of 5 or 6 college campuses. Because, they could get in 30 days, almost the entire college population using Facebook every single day. And they had done this by clock work. They had a whole system in place, that knew what to do. They were just repeating this, one after the other. Finally the investors said that they have cracked it for all the colleges. So the evaluation went up.&lt;/p&gt;

&lt;p&gt;Then, they went to companies and said let’s see if the grown ups will also be interested in Facebook and they did the same thing. They went to a few companies first and demonstrated that they can get pretty much anyone. And, that's what an evaluation chunk is. But the idea in it is that you can take that concept and bring it down. So, you can take that success call and bring it down.&lt;/p&gt;

&lt;p&gt;In the Lean Startup body at work we have a bunch of metrics that are not revenue driven. When you are building a product you may not have, say Facebook did not have any revenue for 7 years, but what they did have were the engagement metrics. They used derivative metrics to serve as leading indicators.&lt;/p&gt;

&lt;p&gt;So, if we have 1000 people in the college campus and about 80% of the people are signing up every single day, that's super valuable to advertisers and if we can grow that number out to billions and billions of people now, that's going to be very very valuable.&lt;/p&gt;

&lt;p&gt;There is innovation metrics that you can use that are not revenue based, but they are more engagement, acquisition and activation based, where you can see if you are moving in the right direction. And if you aren't, magically things are not going to happen and there will be mistakes that will be made. That's the whole process.&lt;/p&gt;

&lt;p&gt;Again with the book example, I did a bunch of tests. I announced the book at my blog, and I said I wanted to sell 10,000 books. So I said if I can't put up with 1000 email addresses in a few months, then there's going to be a problem. Because there is no way that I can reach my goal without a lot of effort. And that was my criteria for moving forward. When I announced it and only when I got a 1000 email addresses, did I say I have the permission to go to the next level.&lt;/p&gt;

&lt;p&gt;So that's where the 10X model also comes in. I would like to say, take your final goal and break it down in orders of magnitude and start demonstrating it and start battling up. The first goal is to get 10 customers and then get a 100 and then get a 1000. And each of those battles is not going to be linear, and it's going to bring in some non-linear challenges and you're going to be casting different risks along the way. That's the way that I see you can work top down and bottoms up to get there.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/08/unnamed-21-300x199.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/08/10270395_839061899444121_6843612531726639725_n-300x199.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt; Its not sexy to think of billions anymore, right? You have to think in terms of trillions. Instagram selling for a Billion is not newsworthy today. What with WhatsApp going for so much more. And now every startup out there seems to be aiming for a Billion. My question is, shouldn’t there be some measure of the quality of the goal? Some kind of a general guideline?&lt;/p&gt;

&lt;p&gt;Where do you draw the line? Yes, it is up to each individual, but there still has to be something which can be used as some kind of feedback for people that it could be a pipe dream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: If you ran into the Google founder back in time, like taking a time machine and going back to the day when they were building their startup and you asked them how big of a company it was then, they wouldn't have thought of a billion out there. When you look around, the way you get those numbers are from analog. So, they would have said, if they were super wildly successful- a million dollars. The best acquisition for a search engine back then was a million dollars. Google even tried to sell themselves for a million dollars. For several years Google didn't make any money. They had a very high engagement but low revenue because they were very minimal, not portal based like Yahoo, not putting ads, their banner ads were not working as well. Yahoo was making more money.&lt;/p&gt;

&lt;p&gt;The number also changes according to time. And so, when I tell people to get their success milestones, there’s nothing wrong in ambition, there are people who say, because WhatsApp is now sold at close to 20 billion I will set my goal to 40 billion or 50 billion. Great! now lets just work backwards and show the same metrics.&lt;/p&gt;

&lt;p&gt;Its something about looking at the analogs. But the other thing that I find is that for most of them its looking at the analogs but its again working grounds up. People don't get the idea of grounds up. Then the project kicks back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt; So, I guess the bottom line is to use the feedback and re-adjust to reality.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash&lt;/strong&gt;: But also, when you are setting your success milestone, I don't tell people. If you want to be overly ambitious, its fine. But I tell people to look at their minimum success criteria.&lt;/p&gt;

&lt;p&gt;Even with entrepreneurs, there's a point where money does not make a difference. So, in Google’s case again their minimum success criteria was a million dollars. At that point, that was a lot of money for them. They would have been happy and Google would have been something else. But that changed over time. So that's the thing to keep in mind.&lt;/p&gt;

&lt;p&gt;You need to say, “in 3-5 years what is that minimum success criteria?” And when you hit that you want your numbers climbing upwards.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Leena's 6th Year Anniversary - Surprise Surprise!</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/07/leena-sixth-anniversary-surprise/"/>
    <id>http://www.multunus.com/blog/2014/07/leena-sixth-anniversary-surprise/</id>
    <published>2014-07-29T22:36:50+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Taking that extra mile to show how much a person means to us is neither an overhead nor is it tiring. Let me start by giving you a little context here. Leena completed her sixth year at Multunus on 2nd June 2014. Special and warm she already is, but 6 years of awesome leadership demanded nothing less than a "Surprise" party :)&lt;/p&gt;

&lt;p&gt;There's something that you should know about Leena, she is very intelligent and can "smell" things cooking up from a mile away. It isn't easy for us to keep secrets from her. So we're kinda proud that we pulled it off this time :)&lt;/p&gt;

&lt;p&gt;Here's a brief on how the whole "Surprise" for Leena took place: We planned a visit to Leena's home on the morning of Sunday, 29th June 2014. Of course, she wasn't expecting us. Fifteen of us met at the office on Sunday and left for her place together. We had included Dev, Leena's husband into our secret plot. He had told her that he was expecting a few of * his*  colleagues that morning only to surprise her later with a bunch of us dropping in "unannounced" at her place.&lt;/p&gt;

&lt;p&gt;We had collected 6 testimonials which also matched her 6 years here, at Multunus. We had 6 envelopes for her of which 4 consisted of letters - written testimonials from an Aarthi (a Multunus alumnus and a great friend), Leena's long time colleague Vaidy, Leena's sister Beena and Leena's brother-in-law Jayadevan. The other 2 envelopes had pen drives in them with a video testimonial from Leena's sister-in-law who is also named Leena (!) and an audio from Rema, another alumnus.&lt;/p&gt;

&lt;p&gt;[gallery ids="5077,5073,5071"]&lt;/p&gt;

&lt;p&gt;She read and listened to all the testimonials and was on the verge of tears (happy ones, we think!). Her family also 
seemed really happy to have us there. We ate and had a jolly good time.&lt;/p&gt;

&lt;p&gt;We'd also written up a * certificate*  for her ;)&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/07/LeenasCertificate.jpg" alt="Leena's Certificate" /&gt;&lt;/p&gt;

&lt;p&gt;At around 1:00 pm we said our goodbyes only to meet each other on Monday :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Production Outages - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/07/production-outages-part1/"/>
    <id>http://www.multunus.com/blog/2014/07/production-outages-part1/</id>
    <published>2014-07-02T03:53:27+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Couple of months back, we had a significant outage in one of the products we are consulting on. This is an application which remotely manages Linux media players which are installed in many cities across the US.&lt;/p&gt;

&lt;p&gt;There was a bug in a library that we were using, which resulted in LOT of exceptions being written to the log file. Adding to the woes, we also had a misconfiguration in our log rotation. Both the above put together resulted in bloating the disk space in the devices.&lt;/p&gt;

&lt;p&gt;The bug affected around 40% of devices in production. Using the remote script execution feature in the remote management service we had built, we ran the scripts to delete the files. We also fixed the log rotation issue.&lt;/p&gt;

&lt;p&gt;That brought back around 50-60% of the devices, but the rest of the devices became completely inaccessible. We created bootable USBs, and sent technicians to the locations where the devices were deployed to bring those back.&lt;/p&gt;

&lt;p&gt;Needless to say, the entire experience was very stressful. Since then, we’ve been doing a lot of thinking and research - to help us to both:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Prevent this kind of situation going forward, and also&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To handle the situation better in future - when we’re unable to prevent them&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="prevention---the-feedback-systems"&gt;Prevention - the feedback systems&lt;/h2&gt;

&lt;p&gt;Feedback systems are important and common feedback systems for programmers are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Test Driven Development [TDD] to get feedback about the correctness while adding, modifying or refactoring code during development.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Continuous Integration [CI] gives you feedback about the correctness of the application whenever a commit is made to the repository.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But once the application is deployed, we need to get feedback about the entire application i.e. how the code, architecture and infrastructure works together. There is a normal tendency to de-prioritise setting up of these feedback systems over new features and thats what exactly happened to us too.&lt;/p&gt;

&lt;p&gt;We had &lt;a href="http://mmonit.com/monit/"&gt;Monit&lt;/a&gt; and &lt;a href="http://newrelic.com/"&gt;New Relic&lt;/a&gt; setup for monitoring our server infrastructure. But because of timeline pressures, the common tendency to give more importance to feature development over monitoring systems is the mistake that we did for the client application [the application deployed to Linux Media Players], and we paid the price for the same. To further highlight the danger of wrong prioritisation, here's another fact that makes us cringe: The outage happened just the week before we were scheduled the set up of Monitoring systems.&lt;/p&gt;

&lt;p&gt;Needless to say, the first thing that we did after the stressful long hours of outage was to setup monitoring and alerting. We evaluated &lt;a href="http://www.nagios.org/"&gt;Nagios&lt;/a&gt;, &lt;a href="http://sensuapp.org/"&gt;Sensu&lt;/a&gt; and &lt;a href="https://collectd.org/"&gt;CollectD&lt;/a&gt; which are the most popular monitoring tools, and opted Sensu because of the following reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Its written in Ruby&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can be easily extended with custom plugins&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Good scalable modern Architecture, built on top of AMQP with RabbitMQ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Great community support&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Has APIs, to create custom reports&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Was strongly recommended by couple of experts in the industry&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We setup Sensu Server and also deployed Sensu Client [with basic System Resource threshold checks] to all the devices along with email alerts. Later we added more checks such as  &lt;a href="http://sensuapp.org/docs/0.12/keepalives"&gt;Keepalives&lt;/a&gt;, &lt;a href="https://github.com/sensu/sensu-community-plugins"&gt;Process checks&lt;/a&gt; etc.&lt;/p&gt;

&lt;p&gt;Apart from the technical aspect, the outage also has a non-technical or rather a psychological aspect. We have recently posted 
&lt;a href="http://www.multunus.com/blog/2014/08/production-outages-part-2/"&gt;Part 2&lt;/a&gt; of Production Outages, reading which you can know our thoughts on the psychological aspect of the outage.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Fireside Chat With Ash Maurya – Understanding Lean Startups – Part 2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/06/fireside-chat-ash-maurya-lean-startups-part-2/"/>
    <id>http://www.multunus.com/blog/2014/06/fireside-chat-ash-maurya-lean-startups-part-2/</id>
    <published>2014-06-07T03:33:02+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the second part the multipart series: "Fireside Chat With Ash Maurya" (
&lt;a href="http://www.multunus.com/blog/2014/04/fireside-chat-ash-maurya-lean-startups/"&gt;Read part 1 here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy: &lt;/strong&gt;
So I have one question. I know that you're building your own product
&lt;a href="http://usercycle.com/"&gt;User Cycle&lt;/a&gt;and it's quite obvious from the flow, even though I haven't actually signed up for it myself, I do keep seeing the 3 or 4 levels of "Are you sure you want to buy this?", you know. You're kind of trying to push customers away rather than actually making it easier for them to come in. You also have the multiple levels of customers, the 10x model that you were talking about. So it is obvious that, you were kind of eating your own dog-food, that you were testing your own principles on products.&lt;/p&gt;

&lt;p&gt;My question is with respect to the customers that you have been working with and the other startups that you've been working with. I've found it extremely difficult to even discipline myself to go through this. How often do you find companies that are willing to cross the bridge and work with you? How often do you see with the folks that you interact with who actually take your idea or have taken your idea so far and who've been like gone, not all the way, but really crossed significant milestones?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 Yeah, and so I would say that maybe I will give some comments on the whole 10x model. I actually recommend raising sign-up friction against lowering sign-up friction. If you ever have a kid, like a 5 year old or something, you can tell her * not*  to go into that room, they want to go into that room even more. So if you actually tell them they can't have the product they actually want it more. I've seen this in the past.&lt;/p&gt;

&lt;p&gt;People start asking me, at a very high level, what I'm doing and offer to be a beta user. We don't want * beta users* . We want just * customers*  and that * changes the conversation* . So I think that's just something to throw out there.&lt;/p&gt;

&lt;p&gt;But, I would say that as far as adoption goes, yes this is definitely at the infancy stage which is why I engage people at many different levels. There are people who just read the book and read the blog and they take what they want out from it and there's a process. So, a lot of stuff sounds very simple and some of the things
are simple, like if you have an idea, instead of spending six months writing an iPhone app, you can actually just build the demo, put up a landing page - see if anyone will even say they're interested.&lt;/p&gt;

&lt;p&gt;So people get very excited when they go through those kind of things. But at some point when you have customers and you think things should get easier when you have customers. But I found out it is the exact opposite because customers start pulling you in different directions and start asking for things. Now if you listen to everyone, you get lost even more. So that's when people usually come back and ask us for something like a framework [to make it easier].&lt;/p&gt;

&lt;p&gt;So I find that there are levels where people come and practise a lot of these things and they'll try different tactics but it's still at that jolting phase. Now there are workshops and camps where the idea is to have a more deliberate process so it's common to understand the concepts, take your startup idea or growth product and have you apply it in every week, design experiments, come back with a learning and if you get stuck talk about how we can get it restarted. So I think that has had a much bigger impact just from the people I work with.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/04/DSC_0085.jpg" alt="DSC_0085" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/04/DSC_0095.jpg" alt="DSC_0095" /&gt;]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 So there is another thing actually. So you said you had a bit of recursion in the first book you wrote wherein you were talking about the process of writing the book itself when writing the book. Was there any similar version in the second at all?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 So that's a great question. So I say that every product that I build has the same process. We definitely eat our own dog-food so we'll have an idea. Furthermore it's like understanding the problems and I throw this out as a hat for everyone, anyone. So if you really want to find problems worth solving you have to first immerse yourself in the world of your customers and really see how they solve their problems.&lt;/p&gt;

&lt;p&gt;I travel around the world but I find that for a typical entrepreneur/intrepreneur the problems are the same. We may speak different languages, we may look different, but fundamentally we all want the same things and feel the same things. So if you take out all those barriers it's the same person whom you are talking to. So through that immersion which I deal with my workshops every month and that's why I go out and it's not for the money but it's more for that exposure to these different entrepreneurs around the world.&lt;/p&gt;

&lt;p&gt;And you can then figure out what the right problems are and then through that process, the entrepreneurial process, you come up with certain solutions. And the way I test that is in this incremental fashion, so I will first introduce an idea in a workshop. So I'm running a workshop tomorrow and there's always some new content there which is almost like a test, so I throw it out there and it'll barely be a five-minute thing, it may be a 30-minute exercise. But the point is that if that doesn't help then I go back and tweak it and that's how I build on that idea.&lt;/p&gt;

&lt;p&gt;So Customer Factory was not a book first, it was really just an idea - a picture I had in a slide somewhere and I talked about it and people really liked the idea and wanted to learn more and that's what encouraged me to learn more. So it usually starts with a small closed-group setting because if you guys don't like what I say then I don't have to say it anymore - no one else has to hear about it.&lt;/p&gt;

&lt;p&gt;But that's this process of incremental validation - if I get encouragement here then I go to the next level, which may be a blogpost, and so I've done some blogposts on Customer Factory and before I even announced the book I just shared the idea as a business model, as a system, and that got a lot of positive feedback and then I will come out and decide, okay, I'm gonna write this product and let's see - will people even want a second book?&lt;/p&gt;

&lt;p&gt;So it's very much the same exact process and so I'm going through the same process of &lt;a href="http://runninglean.co/"&gt;Running Lean&lt;/a&gt;, but in some ways on a different scale, because now, and this is where some of the bigger companies always ask - well we have a brand to protect and lean stuff makes us look like fools if we don't build the right product. That's where this kind of incremental reveal and also not committing to doing something before you are ready to do it helps. So it's the same thing but I'm being a little bit more deliberate in how I'm releasing the content this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 Yes, yes…It's not the same as the "
free" running lean days.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash: &lt;/strong&gt;
Exactly. Yeah, I mean those easier days. I'd be happy if people hadn't even heard of this [Running Lean]. :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 Has there been a time when, like in the recent past, the last couple of years, where you've actually been really fascinated by a certain idea that you thought would work, but it didn't?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 Oh yeah, that happens a lot. It probably happens more often because that's again where I talked about this incremental reveal. Many things are just killed very very quickly before they can get too far. So most people don't even know - they just see that this guy is just writing a good blogpost that has a lot of the stuff that happens in the back.&lt;/p&gt;

&lt;p&gt;So even like I would talk about this Lean Stack thing. So we have this Lean Canvas which is a simplified business model, but we knew that we wanted to be able to better track experiments so you bring it up on kanban boards, but if you look at the journey of the blogposts and even the products, there are lots of innovations there and we all thought those were all awesome ideas but I look at them now and I say these were just really bad.&lt;/p&gt;

&lt;p&gt;The current one is the better version, so right now we have a latest version that we like, but from experience I would say that may not be the one that's going to stay there. So I talk about this late-finding - I talk about having a big vision but you wanna late-find a solution to it as late as possible so as to understand the problem really well, throw out a few possible solutions, and you're gonna iterate on that till you come up with that final solution.&lt;/p&gt;

&lt;p&gt;So if you've an idea as the lean stack, if you were in software we would say it's faster to build this thing in software so let's just build it, and inevitably in software it * always*  takes longer than you expect. So it took us two months to build instead of a month and after we built it it was the wrong thing so we ended up killing that feature. This stuff doesn't really work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 So this was actually built on top of the lean canvas. You had the lean canvas earlier and you added some things to it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 Right, but the lesson there for us is that…so we had the lean canvas and we had us some new screens for these boards, but then we eventually took that out in the next iteration and said we're not gonna build them with software, we're just going to build the poster.&lt;/p&gt;

&lt;p&gt;So we actually had a designer sketch out this thing which I had drawn on my board and I thought I'd do a poster and I took it to my workshops and even that wasn't really much, but through that process of iteration we came up with one that we liked and we sold the poster for a while, so if you want this experiment board you can buy it as a poster and we sold that for a while and then we turned it into a keynote template and a powerpoint template which we sold.&lt;/p&gt;

&lt;p&gt;I think you may have seen some of those, we even sold those for a while. And then now we're building it into a software product. So it goes to say that even though you think software can be fast and almost always is a fast way to test something, there are other ways to launch an idea.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>API Versioning using Versionist</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/04/api-versioning-using-versionist/"/>
    <id>http://www.multunus.com/blog/2014/04/api-versioning-using-versionist/</id>
    <published>2014-04-15T05:51:10+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;A couple of months back, we implemented versioning in one of our projects. There are many tools available for versioning APIs like &lt;a href="https://github.com/intridea/grape" title="grape"&gt;grape&lt;/a&gt;, &lt;a href="https://github.com/fabrik42/acts_as_api" title="acts_as_api"&gt;acts_as_api&lt;/a&gt;, &lt;a href="https://github.com/Sutto/rocket_pants" title="rocket_pants"&gt;rocket_pants&lt;/a&gt; and of course &lt;a href="https://github.com/bploetz/versionist" title="versionist"&gt;versionist&lt;/a&gt;. After a bit of research, we went ahead with versionist and so far its been working well for us.&lt;/p&gt;

&lt;h2 id="why-do-you-need-versioning"&gt;Why do you need Versioning?&lt;/h2&gt;

&lt;p&gt;The reasoning behind API versioning is simple - to avoid breaking existing clients. Once you publish your API, people are going to start writing software that depends on your API. And every time you make a change in your API, there is a chance of breaking their software. For example, consider an API which gives user profile details. Let's say it has an attribute called &lt;code&gt;created_on&lt;/code&gt; which returns the date on which the profile was created. Suppose you have to also return the time along with the date, and hence you rename the column to &lt;code&gt;created_at&lt;/code&gt;. This will break any application that uses this API, especially if it uses the &lt;code&gt;created_on&lt;/code&gt; attribute. Hence, once an API is published, it’s frozen. You can’t change that code, or else you’ll mess up the working of all those who are using that API. The solution for the above problem is to create new versions of API and introduce your changes there and not in the already published ones. Hence there will be two versions of the API say v1 and v2, where v1 is the original API and v2 is the new API where the latest changes are made. But you may have to do some tweaks in the old APIs in order to ensure that they still function the same way. For instance in the above example, after renaming the column to &lt;code&gt;created_at&lt;/code&gt;, it will break the old api. So you need to tweak your old api to support the &lt;code&gt;created_on&lt;/code&gt; attribute.&lt;/p&gt;

&lt;h2 id="versioning-using-versionist"&gt;Versioning using Versionist&lt;/h2&gt;

&lt;p&gt;Versionist is a Rails plugin for versioning Rails-based APIs. After installing the Versionist gem, you can version your current API and set it as the default by using the Versionist generators. &lt;strong&gt;&lt;em&gt;Versionist supports 3 versioning strategies:&lt;/em&gt;&lt;/strong&gt; 1) HTTP header - This strategy uses an HTTP header to request a specific version of your API.&lt;/p&gt;

&lt;pre&gt;Accept: application/vnd.mycompany.com; version=1,application/jsonGET /foos&lt;/pre&gt;

&lt;p&gt;2) Request parameter - here request parameter is used to request a specific version of your API.&lt;/p&gt;

&lt;pre&gt;GET /foos?version=v2&lt;/pre&gt;

&lt;p&gt;3) Path - This uses a URL path prefix to request a specific version of your API.&lt;/p&gt;

&lt;pre&gt;GET /v3/foos&lt;/pre&gt;

&lt;p&gt;In this post, I'll go through the &lt;em&gt;path based method of _versioning of APIs using Versionist. &lt;strong&gt;STEPS to version your current API using the path based versioning strategy:&lt;/strong&gt; _STEP 1&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;rails generate versionist:new_api_version v1 V1 --path=value:v1 --default&lt;/pre&gt;

&lt;p&gt;This will create all the necessary directory structures. &lt;em&gt;STEP 2&lt;/em&gt; Now, move all the controller files into the new folder and do not copy the application controller. For specs, only the controller specs need to be moved, there will already be a new folder for the specs in the controller directory. &lt;em&gt; STEP 3&lt;/em&gt; Manually create a folder with the same version (v1) for  the views and  move all the files related to the controllers into that folder. &lt;em&gt; STEP 4&lt;/em&gt; Modify all the controller class names to use namespacing and to reference the respective base controllers.&lt;/p&gt;

&lt;pre&gt;#Controller:
class V1::MyController &amp;lt; V1::BaseController
	...
end&lt;/pre&gt;

&lt;h2 id="subsequent-versioning"&gt;Subsequent Versioning&lt;/h2&gt;

&lt;p&gt;Now if you want create version 2 from version1: &lt;em&gt;STEP 1&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;rails generate versionist:copy_api_version v1 V1 v2 V2&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; This will duplicate the existing version to create the starting point for the next version. There is one thing that gets duplicated which shouldn't be i.e the default version setting &lt;code&gt;{:default =&amp;gt; true}&lt;/code&gt; in &lt;code&gt;config/routes&lt;/code&gt;. So we have to remove this as there cannot be two default versions. &lt;em&gt;STEP 2&lt;/em&gt; The views will not be duplicated by this command, so create a copy of the folder and name it appropriately&lt;/p&gt;

&lt;h2 id="further-steps"&gt;Further Steps&lt;/h2&gt;

&lt;p&gt;API versioning is a nice way to introduce changes in your application without affecting existing clients. However, an API is not going to be completely stable, inevitable changes will always come in your way. Hence, it is very important you are prepared for such changes. Below are a couple of best practices that helps you in that direction:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Document your APIs&lt;/li&gt;
  &lt;li&gt;Have a deprecation schedule i.e give sufficient time for the users of your API to migrate to new version.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://railscasts.com/episodes/350-rest-api-versioning"&gt;http://railscasts.com/episodes/350-rest-api-versioning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/bploetz/versionist"&gt;https://github.com/bploetz/versionist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Fireside Chat With Ash Maurya - Understanding Lean Startups - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/04/fireside-chat-ash-maurya-lean-startups/"/>
    <id>http://www.multunus.com/blog/2014/04/fireside-chat-ash-maurya-lean-startups/</id>
    <published>2014-04-08T09:00:14+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/04/DSC_0107.jpg" alt="Ash's Autograph" /&gt;&lt;/p&gt;

&lt;p&gt;We had a very special &lt;a href="http://www.multunus.com/ajde_events/fireside-chat-ash-maurya/"&gt;date&lt;/a&gt; with Ash Maurya on February 26, 2014 to understand more about lean startups. Ash was in Bangalore for the Agile India Conference 2014 and had accepted &lt;a href="https://twitter.com/_vaidy"&gt;Vaidy's&lt;/a&gt; invitation for a fireside chat with the Multunus team at our office in JP Nagar.&lt;/p&gt;

&lt;p&gt;We ended up spending a long evening learning more about the Lean Startup philosophy, Running Lean and the Customer Factory. We also learnt a fair but about Ash, the father, the husband and his roots in India, Nigeria and the US.&lt;/p&gt;

&lt;p&gt;The Fireside Chat is a feature at Multunus, where we invite customers, technology pundits, business gurus and all kinds of luminaries for a free form discussion with the team.&lt;/p&gt;

&lt;p&gt;What follows is series of more than a dozen posts (it was a 90min chat!) where we'll publish the whole transcript of our chat with Ash. The series is formatted as a Q &amp;amp;A session followed by further discussion.&lt;/p&gt;

&lt;p&gt;Keep running lean!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 I can't thank you enough for accepting our invitation to come here and spend the evening for a fireside chat. The format is going to be informal. I have a few questions to kickstart the discussion, then the rest of the team can jump in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 Before I start. How many of you have a working knowledge of the Lean Startup or Running Lean?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Team:&lt;/strong&gt;
 Some exposure through the learnings and sharings of Vaidy and &lt;a href="https://twitter.com/manishrc"&gt;Manish&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt;
 You have written Running Lean which is one of the most popular books in the &lt;a href="http://theleanstartup.com/"&gt;Lean Startup&lt;/a&gt; space. Eric Ries came up with the theory and you have added the practical angle to the philosophy - the HOW. Can you talk through the journey up to &lt;a href="http://runninglean.co/"&gt;Running Lean&lt;/a&gt; and on to &lt;a href="http://practicetrumpstheory.com/2013/07/new-book-the-customer-factory/"&gt;The Customer Factory&lt;/a&gt;? &lt;/p&gt;

&lt;p&gt;[gallery link="file" ids="4783,4781,4782"]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ash:&lt;/strong&gt;
 I have been building products for many years now. I come from an engineering background. I went to school for electrical engineering and then moved to software since I loved software and I wasn’t very good at hardware stuff. I was working for companies and then I started my own business, built many products along the way, some were successful, some were not. I realized that whether I was going to keep the product or not, it took me a year, year and half to figure out if the product would work or not.&lt;/p&gt;

&lt;p&gt;I wasn't getting any younger and I had to spend time. So that's when I began looking for faster and better ways to vet these ideas. First tried a few things on my own but then I was reading about Eric Ries and Steve Blank where they were talking about some of the mistakes they had made which they got to learn while building products. It is the same kinds of things we all have experienced, but we just [continue] do it our own way. This was an inspiration and I thought let me also start joining the conversation.&amp;gt;There is a chapter in the book on how I wrote the book using the book itself.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is a chapter in the book on how I wrote the book using the book itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I took one of my products and began applying a lot of the techniques to it and also blogging about it. I was sounding crazy at the time but I started an open lab experiment. If I am not doing things right, other people would tell me and help correct me back on course. As part of my products, I started to apply these techniques and thats how the early ideas were set about in motion.&lt;/p&gt;

&lt;p&gt;How can you go and apply this to a small team? That's where I think I grabbed a lot of attention because other people were in the same camp - where a lot of these ideas sound very simple but when you go to apply them there are a lot of complexities and that sort of thing and you don't know what to expect and that makes it hard.&lt;/p&gt;

&lt;p&gt;So that was the initial attraction, that's how I went on to writing the first book. So I had no plans of writing a book. There is a chapter in the book on how I wrote the book using the book itself. It was pretty much that. I was learning as well as writing and teaching at the same time. I spotted the way things were going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[About his new book, The Customer Factory]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So I looked at going back to this idea that a lot of the stuff we talk about Running Lean which is go and find customers that will buy your product before you build your product. They are all simple to say but are hard to actually put into practice. So the second book is an answer to a lot of other questions how do we really model customer behavior and how do we build experiments because we talk about experimentation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you can build happy customers sustainably and repeatedly, the business model takes care of itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But I found that people understood a concept but they didn’t apply it better because they don't know how to structure an experiment, when to declare an experiment a success or a failure. The second book will answer a lot of those questions using a simple framework.&lt;/p&gt;

&lt;p&gt;The idea of a customer factory - no matter what business you are in, whether you are an NGO or a for-profit, B2B, B2C, consumer app, they all have a same goal: * That is to create a happy customer.*  If you can build happy customers sustainably and repeatedly, the business model takes care of itself. If you have repeatability and sustainability, then you can make that business model work.&lt;/p&gt;

&lt;p&gt;The factory metaphor isn't only a cute metaphor or only for manufacturing customers. We can go back to the manufacturing world from where a lot of the lean ideas came from and take a look at things that like Theory of Constraints and other things that power the manufacturing of physical goods and apply them to the customer funnel then that reveals better insights.&lt;/p&gt;

&lt;p&gt;Come back to learn more about Running Lean and Customer Factory :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>My Experience at RubyConf India 2014</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/03/experience-rubyconf-india-2014/"/>
    <id>http://www.multunus.com/blog/2014/03/experience-rubyconf-india-2014/</id>
    <published>2014-03-31T15:30:18+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/03/ii_14507c4d213f194a.jpeg" alt="Jerry During Lightning Talk" /&gt;&lt;/p&gt;

&lt;p&gt;A congregation of Rubyists would be a great place for any Ruby programmer to be. Have the same by the beach, and it becomes a dream. It was like a dream come true when it was announced that &lt;a href="http://rubyconfindia.org/2014/"&gt;RubyConf India of 2014&lt;/a&gt; would be held in beach resort town of &lt;a href="http://en.wikipedia.org/wiki/Goa"&gt;Goa&lt;/a&gt;. Before we move on, please allow me to apologize for the poor image quality of some of the images.&lt;/p&gt;

&lt;p&gt;The conference was scheduled for the weekend of March 22, 2014. We arrived in Goa on Friday and were checked in at 
&lt;a href="http://www.tripadvisor.in/Hotel_Review-g306996-d299125-Reviews-The_LaLiT_Golf_Spa_Resort_Goa-Canacona_Goa.html"&gt;The LaLiT Golf &amp;amp; Spa Resort&lt;/a&gt;, a true delight indeed. The ambience was serene and the rooms were grand.&lt;/p&gt;

&lt;p&gt;Networking, one of the major aspects of any conference, started during the dinner. It was a pleasure meeting acquaintances and making new friends. We retired early since it had been a long day.&lt;/p&gt;

&lt;p&gt;Most participants woke up late the next morning; an expected outcome on a Saturday morning in Goa. Breakfast was still hot and the talks had not started. The organizers had done a brilliant job of planning for the eventuality that nobody would be up early!&lt;/p&gt;

&lt;p&gt;The registration was uneventful except that we got not one, not two, but three different t-shirts! There were also a few other goodies to choose from, including the password to the wifi!&lt;/p&gt;

&lt;p&gt;The event kicked off with a welcome note from the organizing committee followed by the keynote. There were speakers from all over the world who had come together to share their knowledge on different aspects of Ruby.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/03/@headius.jpg" alt="A moment of silence for Jim Weirich" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A moment of silence for Jim Weirich*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There were a couple of interesting talks during the day. One of my favorites was a &lt;a href="https://speakerdeck.com/aspleenic/ruby-groups-act-locally-think-globally"&gt;presentation&lt;/a&gt; by PJ Hagerty on Ruby groups. He put on a pleasant combination of facts and humor that managed to pull in everyone from the audience, or at least me for that matter, into the essence of his talk. His talk was about regional Ruby groups, his experiences, his opinion on diversity of the members participating and his thoughts on events hosted by the groups.&lt;/p&gt;

&lt;p&gt;Another interesting &lt;a href="https://speakerdeck.com/keithpitt/keith-and-marios-guide-to-fast-websites"&gt;presentation&lt;/a&gt; was by Mario Visic, a senior developer at &lt;a href="http://www.envato.com"&gt;Envato&lt;/a&gt;. He talked about how to get websites to load faster and walked us through a sample step-by-step procedure on how to achieve the same. It was informative and easy to follow given his approach on stage.&lt;/p&gt;

&lt;p&gt;Several other talks followed and at the end of the day came the lightning talks. I was one of the speakers and I spoke about &lt;a href="http://www.rubymotion.com/"&gt;RubyMotion&lt;/a&gt; and our project on animation libraries - &lt;a href="http://www.multunus.com/open_source/rubymation-series-animation-libraries-rubymotion/"&gt;RubyMation&lt;/a&gt;. There were few iOS developers and only 2 RubyMotion developers. So I had the pleasure of introducing RubyMotion, &lt;a href="http://www.multunus.com/open_source/rubymation-series-animation-libraries-rubymotion/"&gt;RubyMation&lt;/a&gt; and the awesome community working on it to the uninitiated.&lt;/p&gt;

&lt;p&gt;The lightning talks were followed by the most interesting part of the day - the beach party. There was great food and great beverages. The beach, the party and a congregation of geeks made it an awesome evening.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/03/@mariovisic_2.jpg" alt="The Hotel" /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The Hotel*&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of the participants turned up late the next morning due to obvious reasons. But once again, seemingly miraculously, someone had predicted the scenario and the day was set to begin only at 10.00 AM.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/03/@mariovisic_1.jpg" alt="RubyConf India 2014" /&gt;&lt;/p&gt;

&lt;p&gt;Except the keynote, the day was uneventful. The crowd started to thin out as the day progressed since people had to catch flights, trains and buses. By evening, we had less than half the population in the auditorium.&lt;/p&gt;

&lt;p&gt;All things must come to an end, and so when Sunday evening came, the hotel hosted a celebration to mark the end of RubyConf as they happily showed the Rubyists the door! There were drums and lots of celebrations to mark the occasion. Just kidding :D. Actually, there was a wedding scheduled for the night, and so things were quite noisy.&lt;/p&gt;

&lt;p&gt;To round it up, RubyConf India 2014 was an interesting conference to attend.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TDD in Android using Robolectric Part.3</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/03/tdd-android-using-robolectric-part-3/"/>
    <id>http://www.multunus.com/blog/2014/03/tdd-android-using-robolectric-part-3/</id>
    <published>2014-03-27T23:11:32+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This is the final part of the 3-part series [ 
&lt;a href="http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/"&gt;Part 1&lt;/a&gt;,
&lt;a href="http://www.multunus.com/blog/2014/03/tdd-android-robolectric-part-2/"&gt;Part 2&lt;/a&gt; ] on Robolectric. In Part 2, I had gone through the Robolectric set up and a simple example showing how to write unit test using Robolectric.&lt;/p&gt;

&lt;p&gt;In this post, I'll go through a couple of  tests, where with the help of Shadows we can test certain use cases which otherwise wouldn't have been possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why do you need Shadows in your tests?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shadows exist to add additional methods that can be used in tests to inspect the state of the underlying Android object. For example, many Android objects have setters for certain values, but no getters. We can add getters to the shadows and use them in test to assert on the underlying object. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Robolectric built-in Shadows&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Robolectric  has defined many shadow classes, which modify or extend the behavior of classes in the Android OS. When an Android class is instantiated, Robolectric looks for a corresponding shadow class, and if it finds one it creates a shadow object to associate with it. Every time a method is invoked on an Android class, Robolectric ensures that the method corresponding to the shadow class is invoked first (if there is one), so that it can work its magic.&lt;/p&gt;

&lt;p&gt;Robolectric has provided
Shadows for most of the Android classes, but it lets you create your own
Shadows as well just in case you need a Shadow that is not there in the Shadows provided by Robolectric.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples using Robolectric's built-in Shadows&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1) To test whether the next
Activity has started using Intent object@RunWith(RobolectricTestRunner.class)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class MyActivityTest {
    @Test
    public void shouldShowLogoWhenButtonIsPressed() throws Exception {
    Activity activity = new MyActivity();
    activity.onCreate(null);
    Button button = (Button) activity.findViewById(R.id.button);
    button.performClick();
    Intent intent = Robolectric.shadowOf(activity).peekNextStartedActivity();
    assertEquals(SecondActivity.class.getCanonicalName(), intent.getComponent().getClassName());
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The tests starts from line 5, where we are creating an instance of our activity class MyActivity. It is followed by the lines 6 and 7 where basically we are setting up the test. We are performing the click action on the button in line 8. In line 9, we are getting hold of the instance of next activity using the peekNextStartedActivity method of ShadowActivity class. And finally in the last line we are asserting that the next activity - SecondActivity, is started on click of the button.&lt;/p&gt;

&lt;p&gt;2) To test our application code which uses Android system services like Alarm&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class ResetAlarm {
    AlarmManager alarmManager;
    public ResetAlarm(Context context) {
    setupAlarmManager(context);
    }

    private void setupAlarmManager(Context context) {
    Intent intent = new Intent("com.cmh.RESET_ALARM");
    PendingIntent sender = PendingIntent.getBroadcast(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT);
    alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);
alarmManager.setRepeating(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() + 1000 , checkFrequency(), sender);
    }

    private int checkFrequency() {
    return 1000 *  60 *  30;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above example the application code uses the Android class AlarmManager which provides access to system alarm services and
&lt;a href="http://developer.android.com/training/scheduling/alarms.html"&gt;schedules a repeating alarm&lt;/a&gt;. When the alarm fires the pending intent is triggered. We can test this using one of Robolectric's
Shadows - ShadowAlarmManager. Below is the corresponding test:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(RobolectricTestRunner.class)
public class ResetAlarmTest {
    ShadowAlarmManager shadowAlarmManager;
    AlarmManager alarmManager;

    @Before
    public void setUp() {
       alarmManager = (AlarmManager) Robolectric.application.getSystemService(Context.ALARM_SERVICE);
       shadowAlarmManager = Robolectric.shadowOf(alarmManager);
    }

    @Test
    public void start_shouldSetRepeatedAlarmWithAlarmManager() {
Assert.assertNull(shadowAlarmManager.getNextScheduledAlarm());
    new ResetAlarm(Robolectric.application.getApplicationContext());
    ScheduledAlarm repeatingAlarm = shadowAlarmManager.getNextScheduledAlarm();
    Assert.assertNotNull(repeatingAlarm);
    }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The setup for this test is straight forward and has just two lines - lines 8 and 9. In the first line, through Robolectric's magic we are getting handle to an instance of AlarmManager which is an Android class. In the second line, we are getting hold of the Shadow of the AlarmManager through Robolectric's static method.&lt;/p&gt;

&lt;p&gt;In the test - line 14 to 18, first we make sure that no alarm is scheduled, then we instantiate the actual class - ResetAlarm which schedules the alarm. In line 16, we get hold of the scheduled alarm by using the shadow - ShadowAlarmManager. And finally, we assert that the scheduled alarm that we got from the shadow is not null.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The above examples will just get you a glimpse of what kind of tests you can write using Robolectric's
Shadows. There are many more use cases where these Shadows come in very handy. For example, you can use Shadows to test the resource id in an ImageView, to test whether audio file is present in raw folder and others. Also, you can create your own Shadows as well, to cover use cases where you cannot use Robolectric's built-in ones or it is not sufficient.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TDD in Android with Robolectric Part.2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/03/tdd-android-robolectric-part-2/"/>
    <id>http://www.multunus.com/blog/2014/03/tdd-android-robolectric-part-2/</id>
    <published>2014-03-13T01:34:52+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In Part 1 of this three-part series [ 
&lt;a href="http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/"&gt;Part 1&lt;/a&gt;,
&lt;a href="http://www.multunus.com/blog/2014/03/tdd-android-using-robolectric-part-3/"&gt;Part 3&lt;/a&gt; ], I had talked about problems involved in doing TDD when developing Android applications, and how
&lt;a href="http://robolectric.org/"&gt;Robolectric&lt;/a&gt; helps you overcome those problems. In this post, I will go into the details of Robolectric framework along with an example.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation &amp;amp; setup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Robolectric setup requires the
&lt;a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.robolectric%22"&gt;robolectric (with its dependencies&lt;/a&gt;) JAR and the 
&lt;a href="http://sourceforge.net/projects/junit/files/junit/"&gt;JUnit 4&lt;/a&gt; JAR in the classpath. You also need to add the
android.jar from your Android SDK installation directory to the classpath of the test project. You will find a very detailed description of Robolectric setup here: 
&lt;a href="https://github.com/thecodepath/android_guides/wiki/Robolectric-Installation-for-Unit-Testing"&gt;Robolectric Installation for Unit Testing&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing Tests&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;Once Robolectric setup is done, you can start writing your tests. Let's take a look at a Robolectric test sample:@RunWith(RobolectricTestRunner.class)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class MyActivityTest {
  @Test
  public void shouldShowLogoWhenButtonIsPressed() throws Exception {
      Activity activity = new MyActivity();
      activity.onCreate(null);
      ImageView logo = (ImageView) activity.findViewById(R.id.logo);
      Button button = (Button) activity.findViewById(R.id.button);
      assertThat(logo.getVisibility(), equalTo(View.GONE));   
      button.performClick();
      assertThat(logo.getVisibility(), equalTo(View.VISIBLE));      
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In line 1, the test class MyActivityTest is annotated with a JUnit annotation called 
&lt;a href="http://junit.sourceforge.net/javadoc_40/org/junit/runner/RunWith.html"&gt;@RunWith&lt;/a&gt;, it invokes the class it references to run the tests in that class instead of the runner built into JUnit. Since Android code is used in the test, we need to use Robolectric as the test runner which is achieved using the above annotation. This is the starting point of a Robolectric test.&lt;/p&gt;

&lt;p&gt;Setup&lt;/p&gt;

&lt;p&gt;Next, let's go through the each of the lines in the test . The test code starts at line 5, and here the MyActivity class is instantiated which is an Android activity, so the test would have thrown an exception right here if Robolectric was not used. Just a reminder!&lt;/p&gt;

&lt;p&gt;In line 6, one of the life cycle methods of any Android activity "onCreate" is called and this will set the user interface layout for this Activity. So, if our layout had a logo or a button on it we could use
findViewById method and get references to these objects, which is done in lines 7 and 8. In line 9, it is asserted that the logo is not there in the layout, this is just to ensure that the test is in correct state before and with this setup for the test is completed.&lt;/p&gt;

&lt;p&gt;Action &amp;amp; Assertion&lt;/p&gt;

&lt;p&gt;In line 10, a click action is performed on the button using Android's
performClick method, this will cause the click listeners registered on the button to fire and that will cause the application code to run. Lastly, the visibility of the logo is asserted to be true in line 11.&lt;/p&gt;

&lt;p&gt;Next Steps&lt;/p&gt;

&lt;p&gt;The above example will get you started on doing Unit Testing with Robolectric, but Robolectric framework has many other features which help you to test most of the use cases you come across in unit testing Android applications. For example, we can use
Shadow objects in our tests. Shadows are like mocks or stubs, but not quite the same.&lt;/p&gt;

&lt;p&gt;Shadows exist to add additional methods that can be used in tests to inspect the state of the underlying Android object. For example, many Android objects have setters for certain values, but no getters. We can add getters to the shadows and use them in test to assert on the underlying object.&lt;/p&gt;

&lt;p&gt;I will share some examples on using Shadows in tests in my next post.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rendering JSON responses using Jbuilder</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/03/using-jbuilder-instead-erb-rendering-json-response/"/>
    <id>http://www.multunus.com/blog/2014/03/using-jbuilder-instead-erb-rendering-json-response/</id>
    <published>2014-03-07T19:56:15+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;When building JSON APIs for Rails applications, we used to build it using the following methods:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;respond_toblock and 
as_json in the controller or model&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;By hand crafting the JSON response in our ERB view templates&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But as these applications grew, the JSON APIs used in these applications became complex and we found these methods to be inefficient. Hence we started looking for alternatives and that is when we considered &lt;a href="https://github.com/rails/jbuilder"&gt;Jbuilder&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In this post, I have shed some light on the problems involved in these methods and how Jbuilder can help you overcome those problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems in rendering JSON&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1) using respond_to block and as_json&lt;/p&gt;

&lt;p&gt;This is probably the simplest way to build JSON APIs, all you have to do here is to use 
respond_to block in the controller action and render the appropriate model. For example, if your application has many articles and you want a JSON representation of a particular article, then you would probably have this code in the 
show action of articles controller:&lt;/p&gt;

&lt;p&gt;def show
  @article = Article.find(params[:id])
  respond_to do |format|
    format.html
    format.json { render json: @article }
  end
end&lt;/p&gt;

&lt;p&gt;But the JSON returned includes all of the article's attributes and you cannot customize it. This is where 
as_json comes in - 
as_json is used to create the structure of the JSON as a hash, and the rendering of that hash into a JSON string is left up to 
&lt;a href="http://api.rubyonrails.org/classes/ActiveSupport/JSON/Encoding/Encoder.html"&gt;ActiveSupport::json.encode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can use
as_json on the article and customize the response. So if you wanted only 
id, 
name and 
content fields from the article, you can do something like this:&lt;/p&gt;

&lt;p&gt;def show
  @article = Article.find(params[:id])
  respond_to do |format|
    format.html
    format.json { render json: @article.as_json(only: [:id, :name, :content]) }
  end
end&lt;/p&gt;

&lt;p&gt;This is still fine but the moment the complexity of your customization increases, the code starts getting ugly. For example, apart from the three fields shown in the above example, if you also wanted the author of the article and three fields from comments of the article to be included in the JSON response, you could do something as follows:&lt;/p&gt;

&lt;p&gt;def show
  @article = Article.find(params[:id])
  respond_to do |format|
    format.html
    format.json { render json: @article.as_json(only: [:id, :name, :content], include: [:author, {comments: {only:[:id, :name, :content]}}]) }
  end
end&lt;/p&gt;

&lt;p&gt;You can use 
as_json in the model instead of controller but it wouldn't be much better there either. It's like trasferring the ugly code from controller to model.&lt;/p&gt;

&lt;p&gt;2) using ERB templates&lt;/p&gt;

&lt;p&gt;Here, we have to manually create or craft the JSON in the ERB template to be rendered and it becomes pretty hard to manage it when the structures are huge. When there are conditionals involved while rendering then also it becomes difficult to maintain. Also, when you are looping a collection you have to ensure that there is no comma after the last element. And certainly, you don't want to be doing things like these.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using Jbuilder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/rails/jbuilder"&gt;Jbuilder&lt;/a&gt; is a template engine for rendering JSON responses. It gives you a simple DSL for declaring JSON structures that simplifies managing giant hash structures. You can have Jbuilder in your applications through its 
&lt;a href="http://rubygems.org/gems/jbuilder"&gt;gem&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just to demonstrate how Jbuilder helps solve the problems discussed so far:&lt;/p&gt;

&lt;p&gt;In the 
articles controller you can remove the 
respond_to call and revert to the default behavior which is to look for a template of the requested format. In this case it will look for a template named 
show.json.jbuilder, and the show action in the 
articles controller becomes:&lt;/p&gt;

&lt;p&gt;def show
  @article = Article.find(params[:id])
end&lt;/p&gt;

&lt;p&gt;Next, you can create the view template 
show.json.jbuilder. In this view template, you can use Ruby code to define the JSON output. You will have access to the json object on which you can define attributes.&lt;/p&gt;

&lt;p&gt;json.id @article.id
json.name @article.name
json.name @article.content&lt;/p&gt;

&lt;p&gt;Instead of listing out each attribute separately, we can call 
extract! on the JSON object and pass in the object and a list of the methods or attributes we want to call against it:&lt;/p&gt;

&lt;p&gt;json.extract! @article, :id, :name, :content&lt;/p&gt;

&lt;p&gt;There's also an alternative syntax which works in Ruby 1.9 or later:&lt;/p&gt;

&lt;p&gt;json.(@article, :id, :name, :content)&lt;/p&gt;

&lt;p&gt;Now, in order to include author of the article and comments of articles, it is as simple as:&lt;/p&gt;

&lt;p&gt;json.(@article, :id, :name, :content)
json.(@article.author, :id, :name)
json.comments @article.comments, :id, :name, :content&lt;/p&gt;

&lt;p&gt;Jbuilder allows you to do more complex things than just listing down the attributes. For example if you want to assign a URL to the author, you can just pass a block to the author and call helper methods inside the block:&lt;/p&gt;

&lt;p&gt;json.(@article, :id, :name, :content)
json.author do |json|
    json.(@article.author, :id, :name)
    json.url author_url(@article.author)
end
json.comments @article.comments, :id, :name, :content&lt;/p&gt;

&lt;p&gt;That's not all - some of the other useful features of Jbuilder are as follows: rendering partials, rendering collection of partials, 
&lt;a href="http://guides.rubyonrails.org/caching_with_rails.html"&gt;Fragment caching&lt;/a&gt; and Key formatting. Key formatting can be used to convert keynames from the standard ruby format to camel case.&lt;/p&gt;

&lt;p&gt;All these make Jbuilder a very good alternative to some of the traditional methods especially if the JSON representation in your APIs are complex. i.e, it involves a high degree of customization, it has a lot conditionals or nesting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://github.com/rails/jbuilder"&gt;https://github.com/rails/jbuilder&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://railscasts.com/episodes/320-jbuilder?view=asciicast"&gt;http://railscasts.com/episodes/320-jbuilder?view=asciicast&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Sponsoring a Tech Conference - Our Experiments</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/02/sponsor-tech-conference-experiments/"/>
    <id>http://www.multunus.com/blog/2014/02/sponsor-tech-conference-experiments/</id>
    <published>2014-02-25T20:52:52+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We recently sponsored the &lt;a href="https://metarefresh.in/2014/"&gt;Meta Refresh 2014&lt;/a&gt; conference in Bangalore. The primary audience of the conference were front end geeks and business decision makers with a stake on the success of front end engineering.&lt;/p&gt;

&lt;p&gt;We had already completed a workshop on test-driven-development in Angular.js in the &lt;a href="https://metarefresh.in/2014/angularjs-miniconf"&gt;Angular.JS Miniconf&lt;/a&gt; and were keen to carry the same momentum into MetaRefresh, which followed a couple of days later. Our goal was to enhance our engagement with the community and build a consistent brand image.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/wp-content/uploads/2014/02/12608783504_a05379511e_o.jpg" alt="Meta Refresh 2014" /&gt; Meta Refresh 2014 &lt;/p&gt;

&lt;h1 id="why-sponsor-a-conference"&gt;Why Sponsor a Conference?&lt;/h1&gt;

&lt;p&gt;We sponsored the conference to continue our interaction with the community and strengthen our brand by building awareness about the company, about our strong engineering culture and about continuous delivery, our core differentiator.&lt;/p&gt;

&lt;p&gt;We wanted to connect with our customers and communicate our core values and differentiators. Our customer group included potential customers, potential partners and potential hires were identified.&lt;/p&gt;

&lt;h1 id="our-campaign"&gt;Our Campaign&lt;/h1&gt;

&lt;p&gt;Rather than wax eloquent about ourselves in posters and pamphlet inserts, we chose instead to engage with the audience through the following activities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 Competitions:
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;Twitter Puzzle&lt;/strong&gt;: Designed to appeal to the algorithmic geek, and&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Help us improve our website&lt;/strong&gt;:  Designed to appeal to the front end evangelist&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Pair Programming in Javascript on Angular.js/Backbone.js with a focus on Test Driven Development&lt;/li&gt;
  &lt;li&gt;A demo of our Continuous Delivery infrastructure&lt;/li&gt;
  &lt;li&gt;A couple of mini-puzzles&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's dive into each of the above.&lt;/p&gt;

&lt;h2 id="competition-1-the-twitter-puzzle"&gt;&lt;strong&gt;Competition 1: The Twitter Puzzle&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id="what-was-it"&gt;What was it?&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_2617.jpg" alt="Twitter Puzzle Standee" /&gt;&lt;/p&gt;

&lt;p&gt;The puzzle's challenge was to identify the pattern in a set of tweets, design the algorithm and code the solution. On solving the puzzle the winner would receive a t-shirt.&lt;/p&gt;

&lt;p&gt;We designed the standee on the right - and just hung the T-Shirt over it :). The copy was designed to be action oriented with few words and more images.&lt;/p&gt;

&lt;h3 id="why-did-we-do-it"&gt;Why did we do it?&lt;/h3&gt;

&lt;p&gt;The winner had to have an understanding of using APIs, understanding of problem solving and a great sense of logic. The puzzle was designed to appeal to the algorithmic geek giving a sense of camaraderie without knowing many details of our company.&lt;/p&gt;

&lt;h3 id="did-it-work"&gt;Did it work?&lt;/h3&gt;

&lt;p&gt;During the first break many people were trying to access the Twitter puzzle on their phones. At Multunus, we advise customers on the importance of a mobile compatible website. But our puzzle page was not mobile optimized!  I am sure this is a lesson we wouldn't forget soon. 🙁&lt;/p&gt;

&lt;p&gt;By numbers, we had a 30% spike in daily unique visitors and a 75% spike in daily page views during the conference. But those are just vanity metrics.&lt;/p&gt;

&lt;p&gt;In terms of actual conversions, we received a grand total of….&lt;strong&gt;just 1 complete submission 😐&lt;/strong&gt;. But the solution worked perfectly and we've thankfully parted with a t-shirt because of that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competition 2: Help us improve our website&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_2614.jpg" alt="Improve the Website Standee" /&gt;&lt;/p&gt;

&lt;h3 id="what-was-it-1"&gt;What was it?&lt;/h3&gt;

&lt;p&gt;The challenge was to suggest improvements to our newly designed website and associated branding elements. The best improvement ideas would have the option to chose one book from a set 3 books on design: &lt;a href="http://www.amazon.com/Design-Everyday-Things-Donald-Norman/dp/0465067107"&gt;The Design of Everyday Things&lt;/a&gt;, &lt;a href="http://www.amazon.com/UX-Lean-Startups-Experience-Research/dp/1449334911"&gt;UX for Lean Startups&lt;/a&gt; and &lt;a href="http://www.amazon.com/Dont-Make-Me-Think-Usability/dp/0321344758"&gt;Don't Make Me Think&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="why-did-we-do-it-1"&gt;Why did we do it?&lt;/h3&gt;

&lt;p&gt;Seeking feedback from the participants of MetaRefresh was akin to running a usability test with some of the best front-end minds.&lt;/p&gt;

&lt;p&gt;The 3 books were selected to appeal to the tastes of our target audience. "Design of Everyday Things" is a classical design book, "Don't Make Me Think" is a short primer on Web Usability and "UX for Lean Startups" is of course relevant to anyone who's an Eric Ries fan.&lt;/p&gt;

&lt;h3 id="did-it-work-1"&gt;Did it work?&lt;/h3&gt;

&lt;p&gt;TL;DR:  Some participants &lt;em&gt;spent up to an hour&lt;/em&gt; analyzing our website. Yep, we killed it with this challenge.&lt;/p&gt;

&lt;p&gt;As the first day progressed [it was a 2 day conference], interest in the challenge grew. We were surrounded by front-end evangelists and ideas started pouring in.&lt;/p&gt;

&lt;p&gt;"I just bought the book [the Design of Everyday Things], but I will still want to win one more" said a student from the  National Institute of Design. The feedback was varied and included comments like "You do have a very cool storyline on the website" to "It is very difficult to gauge your services from your website."&lt;/p&gt;

&lt;p&gt;By end of Day 2, we had 130 odd improvement ideas (!) from 20 odd people and a significantly enhanced awareness about our business.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5733-Edit.jpg" alt="Discussing UX Feedback" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5737-Edit.jpg" alt="Discussing improvements to website" /&gt;&lt;/p&gt;

&lt;h2 id="pair-programming-to-experience-tdd-of-angularjs"&gt;&lt;strong&gt;Pair Programming to Experience TDD of Angular.js&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id="what-was-it-2"&gt;What was it?&lt;/h3&gt;

&lt;p&gt;We also planned to have a pair programming session as an extension of the Angular.Js workshop.&lt;/p&gt;

&lt;h3 id="why-did-we-do-it-2"&gt;Why did we do it?&lt;/h3&gt;

&lt;p&gt;The workshop was planned for attendees of MetaRefresh who had missed the Angular.js Mini Conf earlier in the same week.&lt;/p&gt;

&lt;h3 id="did-it-work-2"&gt;Did it work?&lt;/h3&gt;

&lt;p&gt;No. During the entire duration of the conference, no participant showed interest in the Pair Programming Activity. Although a couple of participants wanted to know more about Angular.js, no one was interested in pairing to learn more about TDD. We may have picked the wrong activity for the audience.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5695-Edit-300x198.jpg" alt="Thinking Jerry" /&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5724-Edit-300x171.jpg" alt="Our Kiosk" /&gt;&lt;/p&gt;

&lt;h2 id="demo-of-continuous-delivery-infrastructure"&gt;&lt;strong&gt;Demo of Continuous Delivery infrastructure&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id="what-was-it-3"&gt;What was it?&lt;/h3&gt;

&lt;p&gt;We demoed our &lt;a href="https://s3.amazonaws.com/multunus-website/blog/2011/07/continuous-delivery-part-1-our-jenkins-build-pipeline-setup/" title="Continuous Delivery -- Part 1: Our Jenkins Build Pipeline setup"&gt;Build Pipeline infrastructure&lt;/a&gt; - that is a core (among many others!) aspect of our Continuous Delivery setup.&lt;/p&gt;

&lt;h3 id="why-did-we-do-it-3"&gt;Why did we do it?&lt;/h3&gt;

&lt;p&gt;The activity was designed to share how we build software here at Multunus. The tools that we use are open source and free - and we believe any team with enough persistence can setup a similar system in their environments as well.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5740-Edit.jpg" alt="Leena explaining continuous delivery" /&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5720-Edit.jpg" alt="Vaidy talking about Multunus" /&gt;&lt;/p&gt;

&lt;h3 id="did-it-work-3"&gt;Did it work?&lt;/h3&gt;

&lt;p&gt;The Walkthrough of Continuous Delivery in the Android App was popular on the second day with more business owners attending. Some participants appreciated the complexity the value of Continuous Delivery while a few suggested improvements to the delivery process. On the whole, yet another way to engage with our target audience without being pushy.&lt;/p&gt;

&lt;h2 id="cryptic-jobs-ads"&gt;&lt;strong&gt;Cryptic Jobs Ads&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id="what-was-it-4"&gt;What was it?&lt;/h3&gt;

&lt;p&gt;We also created two job posts on hasjob.co that were cryptic - while the conference was running.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/Screen-Shot-2014-02-25-at-5.04.56-pm.png" alt="Cryptic job ads" /&gt;&lt;/p&gt;

&lt;h3 id="why-did-we-do-it-4"&gt;Why did we do it?&lt;/h3&gt;

&lt;p&gt;Simple job posts don't attract eye-balls nor do they seem attractive to our target audience. So we created the cryptic posts to attract the black swans.&lt;/p&gt;

&lt;h3 id="did-it-work-4"&gt;Did it work?&lt;/h3&gt;

&lt;p&gt;Yep! Kinda. We had good almost 20 folks who solved the mini-puzzle - possibly at least a few of them taking a look at our &lt;a href="http://ofcourseus.com/"&gt;teaser hiring page&lt;/a&gt;. Our hiring process however is a bit involved - so if anyone actually went ahead to level 2 [another puzzle :)], that would have been a bonus.&lt;/p&gt;

&lt;p&gt;The good news? We now have one candidate who seems to be a good fit - and who knows? He may go all the way :).&lt;/p&gt;

&lt;p&gt;[&lt;strong&gt; UPDATE&lt;/strong&gt;: We just heard from that one candidate, that he has future study plans 🙁 ]&lt;/p&gt;

&lt;p&gt;That ~~may not seem like much ~~doesn't much to be happy about right now, but we believe in long term hiring - and we think there's a good chance that the folks who either solved the mini-puzzle and even the ones who attempted it, will recognize our company the next time they see it.&lt;/p&gt;

&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;During the 2 days, our 5 member team had conversations exceeding 5 mins with about 100 conference participants about business, technology, process and design. That kind of engagement was exactly what we were looking for.&lt;/p&gt;

&lt;p&gt;Being a sponsor doesn't have to be about short term conversions for either hiring or sales. Instead the long term value of engaging with the community and the resulting long term recall is priceless.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5729-Edit.jpg" alt="DSC_5729-Edit" /&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/DSC_5699-Edit.jpg" alt="DSC_5699-Edit" /&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>RIP Jim Werich</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/02/rip-jim-weirich/"/>
    <id>http://www.multunus.com/blog/2014/02/rip-jim-weirich/</id>
    <published>2014-02-21T20:18:04+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;It's very sad to hear the passing of
&lt;a href="http://en.wikipedia.org/wiki/Jim_Weirich"&gt;Jim Weirich&lt;/a&gt;, a legend in the Ruby community. Like many others, we have immensely benefited through Jim's open source contributions at Multunus - that includes
&lt;a href="http://rubykoans.com/"&gt;Ruby Koans&lt;/a&gt; and obviously 
&lt;a href="http://rake.rubyforge.org/"&gt;Rake&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While Rake needs no introduction for most Rubyists, Ruby Koans probably does:  It is a tool for learning theRuby programming language through a series of small exercises. We have included it as part of our training program for the newly hired and it has been of great help to our programmers.&lt;/p&gt;

&lt;p&gt;Jim has also influenced us in a big way through his talks at various
&lt;a href="http://confreaks.com/presenters/24-jim-weirich"&gt;conferences&lt;/a&gt;. His talks, especially the ones on 
&lt;a href="http://vimeo.com/16515526"&gt;Testing&lt;/a&gt; and 
&lt;a href="http://www.confreaks.com/videos/185-rubyconf2009-solid-ruby"&gt;SOLID Principles&lt;/a&gt; helped a lot.&lt;/p&gt;

&lt;p&gt;A few of our team members were fortunate enough to meet Jim at&lt;a href="http://rubyconfindia.org/2013/"&gt;Ruby Conf India 2013&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_20130623_163559.jpg"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_20130623_163559.jpg" alt="IMG_20130623_163559" /&gt;&lt;/a&gt;
&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_20130623_163533.jpg"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/02/IMG_20130623_163533.jpg" alt="IMG_20130623_163533" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks a lot Jim for inspiring us, you'll be greatly missed. RIP&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>TDD in Android with Robolectric Part.1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/"/>
    <id>http://www.multunus.com/blog/2014/02/tdd-using-roboelectric/</id>
    <published>2014-02-20T20:32:34+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In the recently concluded 
&lt;a href="https://droidcon.in/2013/home"&gt;Droidcon India 2013&lt;/a&gt;, 
&lt;a href="https://twitter.com/leenasn"&gt;Leena&lt;/a&gt; and 
&lt;a href="https://twitter.com/krikrn"&gt;KP&lt;/a&gt; did a 
&lt;a href="https://funnel.hasgeek.com/droidcon2013/886-unit-test-your-android-application-using-robolectr"&gt;workshop on Robolectric&lt;/a&gt;. But if you missed that, then this post should help to get you started.&lt;/p&gt;

&lt;p&gt;We have been test-driving our Android development using 
&lt;a href="http://robolectric.org/"&gt;Robolectric&lt;/a&gt; for over three months. I will be sharing our experience with Robolectric in a three-part blog post [ 
&lt;a href="http://www.multunus.com/blog/2014/03/tdd-android-robolectric-part-2/"&gt;Part 2&lt;/a&gt;, 
&lt;a href="http://www.multunus.com/blog/2014/03/tdd-android-using-robolectric-part-3/"&gt;Part 3&lt;/a&gt; ]. In this post, which is Part 1 of this series, I will be giving a summary on why we chose Robolectric and how it helps in test-driving Android applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems In Unit Testing Android Applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1) Android framework code has to run on the emulator or on the device&lt;/p&gt;

&lt;p&gt;The android.jar file that you get with the Android SDK does not contain the Android framework code. It just has method stubs that throw a run time exception. The actual implementation lies on the device or on the emulator.&lt;/p&gt;

&lt;p&gt;As a result, tests have to be run on the device or emulator. So, every time you run a test it has go through steps like dexing, packaging and installing on the emulator or device. Needless to say that it will be SLOW!&lt;/p&gt;

&lt;p&gt;2) Mocking the Android framework code is Hard&lt;/p&gt;

&lt;p&gt;One of the approaches to solving the first problem is to mock out the Android classes so that you can run the code in JVM. But the problem with that is this - many methods in the Android framework are declared as final, making them impossible to mock through sub-classing. It also has many utilities that are static methods, which are also difficult to mock.&lt;/p&gt;

&lt;p&gt;Frameworks such as 
&lt;a href="http://code.google.com/p/powermock/"&gt;PowerMock&lt;/a&gt; or 
&lt;a href="https://code.google.com/p/jmockit/"&gt;jmockit&lt;/a&gt; can solve the above problems for you but this will lead to tests that are harder to read and maintain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Roboelectric to the rescue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://robolectric.org/"&gt;Robolectric&lt;/a&gt; is a unit test framework that allows you to test-drive the development of your Android app. Robolectric has replaced all Android classes by so-called shadow objects. Robolectric sits between your code and the Android OS code intercepting calls and redirecting them to shadow objects, making it possible to run your tests inside a regular JVM.&lt;/p&gt;

&lt;p&gt;This effectively means you can run your tests on your desktop, without having to wait for steps like dexing, packaging etc as previously mentioned. This significantly reduces the cycle time for a test and helps you iterate faster and refactor your code with confidence.&lt;/p&gt;

&lt;p&gt;This also means you don't have to take the approach of mocking the Android framework code as discussed previously. This way Robolectric solves both of our problems.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shadow objects&lt;/p&gt;

&lt;p&gt;Robolectric intercepts the loading of Android classes under test. It rewrites the method bodies of Android classes using 
&lt;a href="http://www.csg.ci.i.u-tokyo.ac.jp/~chiba/javassist/"&gt;javassist&lt;/a&gt;. It binds the new shadow objects to new Android objects. Any method calls to the Android object are forwarded to the shadow object's method of same signature, if it exists.&lt;/p&gt;

&lt;p&gt;View and Resource Loading&lt;/p&gt;

&lt;p&gt;Robolectric handles inflation of views, resource loading, and others that have been  implemented in native C code on Android devices. This allows tests to do most things you could do on a real device.&lt;/p&gt;

&lt;p&gt;For example, it parses all the files that are under the resources directory like layout files, and builds a view object tree made of Android view objects and of course their shadows. This allows you to test your code that uses these resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s New in 2.0&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://corner.squareup.com/2013/05/robolectric-two-point-oh.html"&gt;Robolectric 2.0&lt;/a&gt; is dramatically better at emulating the Android OS, because it uses real Android code ( modified so it can run on a JVM ) behind the scenes. Styles and themes are now supported, and system resources are available. The startup time for tests is significantly improved from the 1.x releases.&lt;/p&gt;

&lt;p&gt;With Robolectric getting better with each release you don't have many excuses not to do TDD. Start test-driving your Android applications using Roboelectric. In Part 2 of this series, we will have a much closer look at the Robolectric framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.slideshare.net/leenasn"&gt;http://www.slideshare.net/leenasn&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://robolectric.org/"&gt;http://robolectric.org/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.slideshare.net/tylerschultz/robolectric-android-unit-testing-framework"&gt;http://www.slideshare.net/tylerschultz/robolectric-android-unit-testing-framework&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="https://sites.google.com/site/androiddevtesting/"&gt;https://sites.google.com/site/androiddevtesting/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Moving back from to Jekyll to Wordpress</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/02/migrated-back-wordpress-jekyll/"/>
    <id>http://www.multunus.com/blog/2014/02/migrated-back-wordpress-jekyll/</id>
    <published>2014-02-06T01:17:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Recently, we did a soft launch of our website after it went over a complete revamp. Our revamped website is built on WordPress.&lt;/p&gt;

&lt;p&gt;We were using Jekyll to power our website for the past year or so and back then we had shared our experience with Jekyll in this blog post - 
&lt;a href="http://www.multunus.com/blog/2012/10/our-experience-with-jekyll-and-octopress/"&gt;Our experience with Jekyll and Octopress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jekyll is a simple, blog aware, static site generator that  gives you a clear advantage in performance. Also, it comes with a powerful combination of Ruby, Templating and YAML which makes it a very attractive option for
  creating  websites especially if you are a software development firm using Ruby. So, why did we move back to WordPress?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Reasons: &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Editing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the major drawbacks in  using Jekyll based websites lies in content editing. Posts or Pages should be written in 
&lt;a href="http://daringfireball.net/projects/markdown/"&gt;markdown&lt;/a&gt;, 
&lt;a href="http://en.wikipedia.org/wiki/Textile_(markup_language)"&gt;textile&lt;/a&gt;, or HTML and may also contain 
&lt;a href="http://liquidmarkup.org/"&gt;Liquid templating&lt;/a&gt; syntax. Writing content will be like writing code which  the programmers don't mind, but definitely not appealing for a non-technical person.&lt;/p&gt;

&lt;p&gt;And, it involves a lot more work like manually managing images, copying metadata from an existing post to a new post, then changing that metadata etc. 
&lt;a href="http://prose.io"&gt;Prose.io&lt;/a&gt;  is  a great step forward for content editing in Jekyll powered sites even though it’s limited to Github repositories.
     &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Publishing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can't  publish content from anywhere, unless you have the code with you or have deployment setup like Travis or Jenkins with which you can deploy from anywhere. With WordPress you can write content and publish  from anywhere.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SEO (Search Engine Optimization)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With Jekyll, you need to take care of search engine optimization (SEO) entirely on your own. WordPress and its themes are well designed from a SEO point of view. Plus there are plugins available which can further improve the SEO performance of the site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Managed Platform for WordPress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, with 
&lt;a href="http://onlinebusiness.about.com/od/glossary/g/What-Is-Managed-Wordpress-Web-Hosting.htm"&gt;Managed WordPress Host&lt;/a&gt; like 
&lt;a href="http://wpengine.com/"&gt;WP Engine&lt;/a&gt;, performance, maintenance and security are taken care for you.  Some of the features of WP Engine we found very useful are:&lt;/p&gt;

&lt;p&gt;One-Click Staging&lt;/p&gt;

&lt;p&gt;On click of a button it takes a snapshot of the live website and copies it to a "staging area" where you can test your changes without affecting your live site. So, this adds a layer of safety before doing something risky like upgrading plugins.&lt;/p&gt;

&lt;p&gt;Performance&lt;/p&gt;

&lt;p&gt;WP Engine takes care of your site's speed. They make sure your site loads as fast as possible.&lt;/p&gt;

&lt;p&gt;Daily Backups&lt;/p&gt;

&lt;p&gt;They automatically back up your site every day and you can restore it easily with a few clicks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;At the end of the day if 
collaborating for creating, editing and publishing content is important for you then it is important for you to choose a tool or technology that will help make that process simple and efficient.&lt;/p&gt;

&lt;p&gt;In that respect I feel WordPress definitely does a great job. And, WP Engine helped us further bolster our decision .&lt;/p&gt;

&lt;p&gt;Of course its only been a few days since we launched our new site - so, please do look forward to seeing an update from me [right here] - in a few months from now.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;*&lt;a href="http://www.multunus.com/blog/2012/10/our-experience-with-jekyll-and-octopress/"&gt;http://www.multunus.com/blog/2012/10/our-experience-with-jekyll-and-octopress/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://jekyllbootstrap.com/lessons/jekyll-introduction.html"&gt;http://jekyllbootstrap.com/lessons/jekyll-introduction.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://www.sparklogix.com/super-fast-wordpress-hosting/"&gt;http://www.sparklogix.com/super-fast-wordpress-hosting/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://vitobotta.com/switched-jekyll-back-wordpress/#sthash.Z1YdsXVF.dpbs"&gt;http://vitobotta.com/switched-jekyll-back-wordpress/#sthash.Z1YdsXVF.dpbs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Toyota Kata Contd..</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/01/toyota-kata-contd/"/>
    <id>http://www.multunus.com/blog/2014/01/toyota-kata-contd/</id>
    <published>2014-01-30T01:27:15+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the key learnings from 
&lt;a href="http://www.amazon.com/Toyota-Kata-Managing-Improvement-Adaptiveness/dp/0071635238"&gt;Toyota Kata book&lt;/a&gt; is the importance of word 
&lt;strong&gt;Continuous&lt;/strong&gt;
 in Continuous Improvement. When we say Continuous, it should be happening every day without fail. As mentioned 
&lt;a href="http://www.fourhourworkweek.com/blog/2009/07/28/the-big-question-are-you-better-than-yesterday/"&gt;by Chad Fowler in this post&lt;/a&gt;, improvement at small step has to happen everyday rather than once in a while. Thats what differs from Continuous Improvement from just Improvement.&lt;/p&gt;

&lt;p&gt;As per the book, there are 3 ways which are perceived as Continuous Improvement i.e. 
&lt;strong&gt;Workshops&lt;/strong&gt;
, 
&lt;strong&gt;Value Stream&lt;/strong&gt;
 and 
&lt;strong&gt;Action Item Lists. &lt;/strong&gt;
Those definitely help us to improve, but its never continuous. Lets see them in detail:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Workshops&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Workshops are usually for a certain duration say a couple of days to a week. Usually learnings from the Workshops results in improvements, but its never Continuous. What I meant to say is that the learnings from the improvements cannot give us input for daily improvements and only daily improvements can be considered as Continuous Improvement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Value Stream&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Value stream is also known as optimising the lead time i.e. optimising the time taken from an idea to delivery. But the problem with this approach is that, it usually results in scattering the peace meal. Optimising Value Stream means optimising the different processes of delivery. So the usual struggle is whether to look at value stream as a whole or look at the individual processes beneath that. The first one will be too abstract while the latter has the danger of missing the big picture. I am still trying to understand this point better, so will come back to this later :)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Action Item Lists &lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the most common approach i.e managers coming up with list of improvements and the team working on it. According to the author, the problem with this approach is that the list grows bigger and becomes unmaintainable. Ideally the bigger list should be considered as good thing, because that shows us the areas of improvement, but usually it has the reverse effect i.e the list is perceived as lot of problems which results in a negative impact. Another problem with this approach is that rarely these improvements are considered separately from the daily activity and it misses the big picture of why the improvement is required. As discussed already, Continuous Improvement should be something that everyone should be doing everyday as part of their job without fail, rather than an activity done at a specific time of the day.&lt;/p&gt;

&lt;p&gt;So the summary is continuous improvement is aligning two things i.e. target condition (where we want to be) and current condition (where we are now). Kata, the way of keeping two things in alignment or in synchronisation with one another, will help us to keep the current condition and target condition in alignment.&lt;/p&gt;

&lt;p&gt;The following image should explain the Improvement Kata better.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://www.lean.org/images/katapattern.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Does that mean that we should stop having Workshops or Value Stream or Action Item Lists. Definitely Not. Because those help us improve, but relying on them for Continuous Improvement may not be a good idea.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Toyota Kata for improving Continuous Delivery Maturity</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2014/01/toyota-kata-for-improving-continuous-delivery-maturity/"/>
    <id>http://www.multunus.com/blog/2014/01/toyota-kata-for-improving-continuous-delivery-maturity/</id>
    <published>2014-01-24T17:58:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Everyone knows that making small improvements everyday is good and everyone wants to do that. But the following question arises:* What to improve?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;How to improve?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How will I know am improving?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recently I stumbled upon 
&lt;a href="http://www-personal.umich.edu/~mrother/Homepage.html"&gt;Toyota Kata&lt;/a&gt;, a simple and structured way of cultivating Continuous Improvement culture. As the name suggests, its Toyota’s systematic approach for Continuous Improvement. The Kata has 2 parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Coaching Kata –  coach by asking 5 questions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Improvement Kata – The scientific PDCA cycle [&lt;strong&gt;Plan, &lt;/strong&gt;Do, &lt;strong&gt;Check, &lt;/strong&gt;Act cycle**] for making measurable progress&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Coaching Kata&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coaching Kata is the systematic way to coach Improvement Kata. Kata contains the following 5 questions, to help the coachee(s) to identify the area for improvement or make him/her measure the same. :&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www-personal.umich.edu/~mrother/Materials_to_Download.html"&gt;&lt;img src="http://www.lean.org/images/5Qcard.jpg" alt="" /&gt;&lt;/a&gt;                                              Courtesy: http://www.lean.org/images/5Qcard.jpg&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Improvement Kata&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the process of actual improvement by following the scientific  
&lt;a href="http://en.wikipedia.org/wiki/PDCA"&gt;Plan, Do Check Act or PDCA cycle which is also known as Deming Cycle&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/PDCA"&gt;&lt;img src="http://upload.wikimedia.org/wikipedia/commons/6/6d/Deming_PDCA_cycle.PNG" alt="" /&gt;&lt;/a&gt;                                                             Courtesy: http://goo.gl/q6i5ow&lt;/p&gt;

&lt;p&gt;Its obvious that the Coaching Kata helps to set a clear goal and the Improvement Kata helps us to measure the improvement.&lt;/p&gt;

&lt;p&gt;At Multunus we’ve started using this to improve our 
&lt;a href="http://www.infoq.com/articles/Continuous-Delivery-Maturity-Model"&gt; Continuous Delivery Maturity.&lt;/a&gt; The process we follow is as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Every week the team assess the maturity by doing a retrospective of the previous week. The data we use helps us to focus mainly on the following:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Number of bugs in production&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cycle time&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We grade the maturity in Red, Orange, Yellow and Green using a formulae&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The above helps the team to identify Current Condition&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Team defines the target condition that they need to reach by a certain timeframe which is usually within one or two weeks&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Writes the obstacles for reaching the target condition and take the top most obstacle&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Defines the next step or experiment the team wants to do for removing the obstacle&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The above step (i.e. the PDCA cycle) is followed on a daily basis&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Main things to keep in mind are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;While coming up with the  target condition or goal, keep in mind the  Goldilocks Principle i.e. it should not be Not too hard, nor too easy Just Right.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;50% of the experiments fail. Its ok to fail. Keep the duration of the experiment short, a day to a week is suggested, so that we can learn faster.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Each PDCA cycle should be a learning from the previous PDCA cycle.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a 
&lt;a href="https://docs.google.com/spreadsheet/ccc?key=0ApUPwJdQvqT_dC1Hd2NpTVVRSmptcGx0UENKWXBEbEE&amp;amp;usp=sharing"&gt;sample metrics sheet&lt;/a&gt; we use for our Toyota Kata. It still does not contain the following even though its suggested in Toyota Kata:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Recoding each PDCA cycle&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Keeping the List of Obstacles&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Myself, and the team as well, are thrilled that its indeed working. Needless to say its not the perfect way, there is lot of scope for improvement, and we can use Toyota Kata itself for improving the same :). I will write more about our experience with Toyota Kata in coming weeks.&lt;/p&gt;

&lt;p&gt;Apart from 
&lt;a href="http://www.amazon.com/Toyota-Kata-Managing-Improvement-Adaptiveness/dp/0071635238"&gt;the book&lt;/a&gt;, which I’ve started reading, I found the following references useful as well:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://blog.crisp.se/2012/09/19/anderslaestadius/from-therapy-to-continuous-improvements"&gt;http://blog.crisp.se/2012/09/19/anderslaestadius/from-therapy-to-continuous-improvements&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://hakanforss.wordpress.com/tag/toyota-kata/"&gt;http://hakanforss.wordpress.com/tag/toyota-kata/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href="http://hakanforss.wordpress.com/2013/02/07/stop-doing-retrospective-and-start-your-toyota-katajfokus-2013/"&gt;http://hakanforss.wordpress.com/2013/02/07/stop-doing-retrospective-and-start-your-toyota-katajfokus-2013/&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>What is Agile Design</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/09/what-is-agile-design/"/>
    <id>http://www.multunus.com/blog/2013/09/what-is-agile-design/</id>
    <published>2013-09-16T02:03:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Agile recommends to do design continuously and emerge your design instead of doing a &lt;a href="http://c2.com/cgi/wiki?BigDesignUpFront"&gt;Big Design UpFront&lt;/a&gt; (BDUF). This post is an attempt to explain how to achieve the same.&lt;/p&gt;

&lt;h2 id="start-with-simple-design"&gt;Start with Simple Design&lt;/h2&gt;
&lt;p&gt;Extreme Programming recommends you to &lt;a href="http://www.xprogramming.com/Practices/PracSimplest.html"&gt;Do The Simplest Thing That Could Possibly Work&lt;/a&gt;, known with the acronym (DTSTTCPW). &lt;/p&gt;

&lt;p&gt;&lt;a href="http://xprogramming.com/classics/expemergentdesign/"&gt;As mentioned by Ron Jeffries&lt;/a&gt;, the code is simple if it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run all the tests&lt;/li&gt;
  &lt;li&gt;Contain no duplicate code&lt;/li&gt;
  &lt;li&gt;Express all the ideas the author wants to express&lt;/li&gt;
  &lt;li&gt;Minimize classes and methods&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first 3 rules are self explanatory but the fourth one is confusing and contradictory especially with related to SOLID principles and design patterns. But it conveys the principles &lt;a href="http://en.wikipedia.org/wiki/You_aren't_gonna_need_it"&gt;YAGNI&lt;/a&gt; and &lt;a href="http://www.codinghorror.com/blog/2006/10/the-last-responsible-moment.html"&gt;Last Responsible Moment&lt;/a&gt; i.e. don’t do anything assuming that it might be required in future.&lt;/p&gt;

&lt;h2 id="design-incrementally"&gt;Design Incrementally&lt;/h2&gt;
&lt;p&gt;The following is the excerpt from XP Explained Book by Kent Beck on Incremental Design.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;XP teams can meet their human need for immediate and frequent success as well as their economic need to defer investment to the last responsible moment. Some of the teams who read and applied the first edition of this book didn’t get the part of the message about the last responsible moment. They piled story on story as quickly as possible with the least possible investment in design. Without daily attention to design, the cost of changes does skyrocket. The result is poorly designed, brittle, hard-to-change systems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The question is not whether or not to design, the question is when to design. Incremental design suggests that the most effective time to design is in the light of experience.&lt;/p&gt;

&lt;p&gt;If small, safe steps are how to design, the next question is where in the system to improve the design. The simple heuristic I have found helpful is to eliminate duplication. If I have the same logic in two places, I work with the design to understand how I can have only one copy.&lt;/p&gt;

&lt;h2 id="emergent-design-and-continuous-design"&gt;Emergent Design and Continuous Design&lt;/h2&gt;
&lt;p&gt;Emergent Design, popularised by Neal Ford the design emerges by following Last Responsible Moment and Idiomatic Patterns. Refer to his 
&lt;a href="http://www.ibm.com/developerworks/java/library/j-eaed1/index.html"&gt;15 article series&lt;/a&gt;, which talks about the same. I will write about the same, especially about the Idiomatic Patterns, in another post.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.martinfowler.com/ieeeSoftware/continuousDesign.pdf"&gt;Continuous Design&lt;/a&gt; was the term given by James Shore. He explains the same as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I prefer the term continuous design because it emphasizes the core of the process: continuously taking advantage of opportunities to improve your design. When you discover a design flaw, you fix it. When a new feature doesn’t fit, you update the design.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;Instead of doing a big bang Design phase initially, refactor the code meticulously by applying the principles &lt;a href="http://www.artima.com/intv/dry.html"&gt;DRY&lt;/a&gt; and &lt;a href="http://c2.com/xp/OnceAndOnlyOnce.html"&gt;Once and Only Once&lt;/a&gt;. Improve the code further by using tools to identify
&lt;a href="http://c2.com/cgi/wiki?AbcMetric"&gt;Cyclomatic Complexity&lt;/a&gt; and &lt;a href="http://www.ibm.com/developerworks/library/j-eaed6/"&gt;Afferent Coupling&lt;/a&gt;. Follow Test Driven Development which helps to do enough design required for the current requirement. Test coverage gives confidence to re factor the code without fear.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://c2.com/cgi/wiki?XpSimplicityRules"&gt;http://c2.com/cgi/wiki?XpSimplicityRules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://c2.com/cgi/wiki?DoTheSimplestThingThatCouldPossiblyWork"&gt;http://c2.com/cgi/wiki?DoTheSimplestThingThatCouldPossiblyWork&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.netobjectives.com/blogs/primer-emergent-design"&gt;http://www.netobjectives.com/blogs/primer-emergent-design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://martinfowler.com/articles/designDead.html"&gt;http://martinfowler.com/articles/designDead.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://wirfs-brock.com/blog/2011/01/18/agile-architecture-myths-2-architecture-decisions-should-be-made-at-the-last-responsible-moment/"&gt;http://wirfs-brock.com/blog/2011/01/18/agile-architecture-myths-2-architecture-decisions-should-be-made-at-the-last-responsible-moment/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.codinghorror.com/blog/2007/03/curlys-law-do-one-thing.html"&gt;http://www.codinghorror.com/blog/2007/03/curlys-law-do-one-thing.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://tobeagile.com/2012/10/16/seven-strategies-for-doing-emergent-design/"&gt;http://tobeagile.com/2012/10/16/seven-strategies-for-doing-emergent-design/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Pleasure And Peril Of Being A Polyglot Programmer - A Summary</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/07/pleasure-and-peril-of-being-a-polyglot-programmer-a-summary/"/>
    <id>http://www.multunus.com/blog/2013/07/pleasure-and-peril-of-being-a-polyglot-programmer-a-summary/</id>
    <published>2013-07-12T08:03:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Recently, we happened to watch a couple of videos from this year’s &lt;a href="http://http//2013.agileindia.org/"&gt;Agile India Conference&lt;/a&gt;. The 
&lt;a href="http://http//2013.agileindia.org/"&gt;Agile India Conference&lt;/a&gt; is presenting 50GB of HD quality video recordings of all 95 Sessions packed in 13 DVDs. That’s a lot of great content waiting to be consumed!!&lt;/p&gt;

&lt;p&gt;So we decided to write a series of blog posts covering some select topics, where we will be giving the summary of the video/talk. This is the first of those. Below is the summary of the talk given by &lt;a href="http://www.nofluffjuststuff.com/conference/speaker/venkat_subramaniam"&gt;Dr.Venkat Subramaniam&lt;/a&gt; founder of &lt;a href="http://www.agiledeveloper.com/"&gt;Agile Developer Inc.&lt;/a&gt; and the one who has trained and mentored thousands of software developers around the world.&lt;/p&gt;

&lt;p&gt;One of the best ways to write better code is to read better code, not just the code but also books, articles, blogs and even hanging out with like-minded geeks. All these would influence our minds. So what we read is really something to think about.&lt;/p&gt;

&lt;p&gt;Our thoughts are influenced by the languages we use. One important thing to think about is how many languages you use on a daily basis. The reason as to why this is important can be explained based on the sapir-whorf hypothesis which says that “Whatever you think is influenced by the language you speak” which is counter-intuitive to our thought that “We express what we think through our language”.&lt;/p&gt;

&lt;p&gt;But as it turns out languages are deeply tied to cultures and cultures lead to idioms. Idioms are formed by connotations, history and some stories in the past. When you work with people speaking in that particular language they have an idiomatic style of using that language. It is the same in the case of Programming Languages as well.&lt;/p&gt;

&lt;p&gt;Programming languages are not general-purpose anymore. We need to use different languages to solve different problems.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;files =&amp;gt; use xml&lt;/li&gt;
  &lt;li&gt;data =&amp;gt; use big data&lt;/li&gt;
  &lt;li&gt;concurrency =&amp;gt; many languages support&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nowadays, all the machines come with multi-cores. So in order to fully utilize these, the programming languages should support concurrency.&lt;/p&gt;

&lt;p&gt;There is another side to concurrent programs, that is, handling shared mutability of resources. We tend to use or create objects in most languages. However, to support concurrency, we should use objects which are mutable, sharable or shared-mutable. But shared mutability is an evil when you have threads since the resultant errors are hard to track as compilers do not throw any errors or warnings. These programs first behave and then misbehave in most unpredictable ways, which is very hard to track or reproduce. So be careful and think twice before using shared mutability.&lt;/p&gt;

&lt;p&gt;There is a myth where all corporate programmers believe that their language of choice can solve all kinds of problems, that is the heights of optimism they have! Let’s take the example of Java. How did the Java language come into existence? Everyone said it is “simple”. It is actually simpler than C++ language. They said there are no pointers in Java, but it had references. So Java language is actually a subset of C++. So it is better not stick to with one language and keep the option to use the right languages to solve problems in a simpler way.&lt;/p&gt;

&lt;p&gt;There has been an explosion of new languages in the recent years. We have to choose or pick languages that make sense, but why? They give productivity and flexibility and they are fun! How are they fun? For example, creating a class and initializing its attributes needs separate getter and setter methods in Java, which will automatically be taken care of in Scala. Less typing, less code, but still getting the same job done.&lt;/p&gt;

&lt;p&gt;It seems very restricted or limited if we are using only one language for everything we do. But what are the benefits of programming in multiple languages? Neal Ford coined the term “Polyglot Programmer”. The idea behind this is to use the sharpest tool that is available for doing what we do.&lt;/p&gt;

&lt;p&gt;But why we want to use different tools is better explained by Ola Bini. He says we should use different languages for different levels of programs to achieve different results. In Lower Levels where you need infrastructure code or when you are writing a server or a service which requires very tight coupling and integration, you want languages that are “Statically typed”. In Middle Levels, where you need a little flexibility, “Dynamically typed” languages are your choice.&lt;/p&gt;

&lt;p&gt;Below are a few examples that illustrate the Productivity Gain in different languages:&lt;/p&gt;

&lt;h2 id="delegation"&gt;Delegation&lt;/h2&gt;
&lt;p&gt;### Java&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
public class Manager {
    private Worker worker = new Worker();
    public void work() {
worker.work();
    }
    public void document() {
worker.document();
    }       
}
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="groovy"&gt;Groovy&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
class Manager {
    @Delegate Worker worker = new Worker()  
}
def bob = new Manager()
bob.work()
bob.document()
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="reading-a-file"&gt;Reading a File&lt;/h2&gt;
&lt;p&gt;### Java&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
private static String readFromFile(String filePath) {
    StringBuilder  builder = new  StringBuilder();
    try {
BufferedReader reader = new BufferedReader(
    new FileReader(filePath));
String aLine = null;
try {
    while((aLine = reader.readLine()) != null) {
        builder.append(aLine + System.getProperty(“line.separator”));
    }
} catch(IOException e) {
    e.printStackTrace();
}       
    } catch(FileNotFoundException e) {
e.printStackTrace();
    }   
    return builder.toString();
}
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="ruby"&gt;Ruby&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
File.open(file_path).read
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="running-a-system-process"&gt;Running a System Process&lt;/h2&gt;

&lt;h3 id="groovy-1"&gt;Groovy&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
println “svn help”.execute().text
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="working-with-lists"&gt;Working with Lists&lt;/h2&gt;
&lt;p&gt;Suppose you have a list of names and you want to print them with comma separated, this is how it can be done in
### Java&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
var names = [“John”, “Smith”, “Michael”];
for(int i =0; i &amp;lt; names.size; i++) {
    var lastElement = names.size;
    if(i != lastElement) {
System.out.print(names[i] + “, ”);
    }   
}
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="ruby-1"&gt;Ruby&lt;/h3&gt;
&lt;p&gt;This is as easy as&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
names.join(“, ”)
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id="conclusion"&gt;CONCLUSION&lt;/h2&gt;
&lt;p&gt;But it could turn into hell as well. Why would this be so, even though these languages support lots of cool stuff? Well, now comes the reality of the world we live in. Content with their present organisation, most programmers never feel the need to learn new languages.&lt;/p&gt;

&lt;p&gt;Even if they do learn, they fail to convince their boss. Here, the problem is we programmers need to get convinced by the language first. The solution is to build lots of prototypes which will show the business value we derive by using these new languages. One should follow this disciplined approach of learning.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GitHub Workflow vs Mainline Development</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/06/github-workflow-vs-mainline-development/"/>
    <id>http://www.multunus.com/blog/2013/06/github-workflow-vs-mainline-development/</id>
    <published>2013-06-22T19:00:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;As mentioned in an &lt;a href="http://www.multunus.com/2012/05/introduction-to-continuous-delivery/"&gt;earlier post&lt;/a&gt;, Continuous Delivery means:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fast, automated feedback on the production readiness of the application - any time the team makes a change to code, infrastructure or the configuration of the application&lt;/li&gt;
  &lt;li&gt;Repeatable and reliable process for releasing software using one step (and perhaps push-button) deployments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To achieve the above we need extensive automation of all possible stages of the delivery process, using something called as 
&lt;a href="http://martinfowler.com/bliki/DeploymentPipeline.html"&gt;Deployment Pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The image below should explain the workflow of continuous delivery:
&lt;img src="https://s3.amazonaws.com/multunus-images/cd_workflow.png" alt="Continuous Delivery Workflow" /&gt;&lt;/p&gt;

&lt;p&gt;To achieve the above, the following are mandatory:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Automated Tests&lt;/li&gt;
  &lt;li&gt;Continuous Integration (which should run all the automated tests whenever any change is made to the codebase)&lt;/li&gt;
  &lt;li&gt;Mainline/Trunk based development - to avoid Merge Issues and Continuous Integration&lt;/li&gt;
  &lt;li&gt;Feature Toggling - ability to turn a feature on/off on a specified environment&lt;/li&gt;
  &lt;li&gt;Automated Deployment Scripts&lt;/li&gt;
  &lt;li&gt;Automated Provisioning of Servers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This blog post is a comparison of GitHub style workflow with Mainline development and how the Review process in the GitHub style workflow affects Continuous Delivery.&lt;/p&gt;

&lt;h2 id="github-workflow"&gt;GitHub Workflow&lt;/h2&gt;

&lt;p&gt;The following is the normal GitHub workflow:&lt;/p&gt;

&lt;p&gt;&lt;img src="http://farm5.staticflickr.com/4012/4702060815_b21642330a_o.jpg" alt="Github Workflow" /&gt;&lt;/p&gt;

&lt;p&gt;The above workflow ensures the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The master is always deployable&lt;/li&gt;
  &lt;li&gt;The Code Review happens for every change&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But inhibits Continuous Delivery because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Apart from setting up Continuous Integration for master, we will have to set it up for each branch, otherwise the “feedback” will not be received.&lt;/li&gt;
  &lt;li&gt;This does not guarantee “production-readiness” of the application because the commits happen to multiple branches in isolation&lt;/li&gt;
  &lt;li&gt;The “review and approval” process can not be automated and will affect the frequency of the deployment if there is a manual dependency.&lt;/li&gt;
  &lt;li&gt;Merge clashes can be more if branch and master does not get merged frequently and these can result in merge “hells”&lt;/li&gt;
  &lt;li&gt;Deployment Pipeline becomes complicated to design because we need to have multiple jobs depending upon how many branches we have&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Does that mean that code review is an anti-pattern for Continuous Delivery? Not Really. Code review is good. Its so good that we should be doing it &lt;strong&gt;continuously&lt;/strong&gt; .The following can help you to achieve that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pair Programming - the code gets reviewed constantly&lt;/li&gt;
  &lt;li&gt;TDD (Test Driven Development which is also called as Test Driven Design) - Tests forces the developers to “Refactor” the code which helps in better code design and more maintainable code&lt;/li&gt;
  &lt;li&gt;Code Quality Analysis Tools - To get feedback on code quality and “Refactor” accordingly. Tests give the confidence for developers to Refactor the code.&lt;/li&gt;
  &lt;li&gt;Review commits by a senior developer. If she finds a bad commit, pair with the person who committed it to help them clean the code up.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above is aligned with the principle &lt;a href="http://java.dzone.com/articles/8-principles-continuous"&gt;Build Quality In&lt;/a&gt;, which emphasises that “Every team member is responsible for Quality”.&lt;/p&gt;

&lt;h2 id="feature-toggles"&gt;Feature Toggles&lt;/h2&gt;
&lt;p&gt;One reason for using Branches is to avoid dependencies on work-in-progress items - when there are expedites, for example. But this problem can also be solved without Branches using what is called &lt;a href="http://martinfowler.com/bliki/FeatureToggle.html"&gt;Feature Toggling&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We’ll go one step further at this point and say that that Feature Toggling is a much better to solve the problem of dependencies - because the toggles can also be used in production - for testing new features with a smaller audience of users - and rolling out the features to a larger audience once the initial feedback has been processed.&lt;/p&gt;

&lt;h2 id="final-note"&gt;Final Note&lt;/h2&gt;
&lt;p&gt;The GitHub style workflow makes perfect sense for Open Source projects - to bring in some amount of rigor to the 
&lt;a href="http://www.catb.org/esr/writings/homesteading/cathedral-bazaar/"&gt;bazaar&lt;/a&gt;. But in a more controlled environment, relying on interdependence within the team itself for code reviews (with pair programming and TDD) makes more sense.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://groups.google.com/forum/?fromgroups#!topic/continuousdelivery/LIJ1nva9Oas"&gt;Continuous Delivery and Code Review&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://continuousdelivery.com/2011/07/on-dvcs-continuous-integration-and-feature-branches/"&gt;Continuous Delivery and Feature Branches&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://paulhammant.com/2013/04/05/what-is-trunk-based-development/"&gt;Trunk Based Development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Optimizing for performance Pipelining</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/06/optimizing-for-performance-a-hrefhttpredis-ioredisa-pipelining/"/>
    <id>http://www.multunus.com/blog/2013/06/optimizing-for-performance-a-hrefhttpredis-ioredisa-pipelining/</id>
    <published>2013-06-17T16:25:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In everyday programming, it is a common tendency to overlook certain parts of the code which may not be implemented in the most efficient way. It is usually not a problem, but this could create a performance bottleneck as the data volume grows. When working with huge data, even the slightest overhead introduced in the code can prove to be too big a bottleneck in performance.&lt;/p&gt;

&lt;p&gt;Having an unwanted line of code which cost 10 milliseconds when multiplied by a million records in DB can easily take 2.5+ hours extra.&lt;/p&gt;

&lt;p&gt;We recently hit one similar problem in one of our project.&lt;/p&gt;

&lt;h2 id="some-background-info"&gt;Some Background Info&lt;/h2&gt;
&lt;p&gt;This project is backed by MongoDB with over 2 million records. We were using Redis to index the query combinations that can be applied to the data in Mongo. This was done to avoid hitting the MongoDB for all the intermediate steps before the final result.&lt;/p&gt;

&lt;p&gt;Our implementation of indexing takes care of picking out the filter combinations which can result in at least one record at the end. This has to be done every time the MongoDB is updated with newer data.&lt;/p&gt;

&lt;h2 id="problem"&gt;Problem&lt;/h2&gt;
&lt;p&gt;Indexing was taking ~4 hours to complete. This was after optimizing the logic used for indexing. After some close inspection, we found a bottleneck in Redis operation that can be optimized.&lt;/p&gt;

&lt;p&gt;Consider the following code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
SurveyData.all.each_with_index do |survey_data, index|
     ….
     $redis.sadd(related_field_id, survey_data.field_id)
     ….
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Redis operation ‘sadd’ is fast, but since Redis is a TCP server the operation has to go through Request/Response cycle of TCP. With the use case mentioned above, the number of redis operations is in the range of millions. This puts us in a dreadful situation of going through the TCP cycle every time. On top of this network latency only adds to the worries. (This entire thing is called as Round Trip Time (RTT)).&lt;/p&gt;

&lt;p&gt;Take an example RTT of 100 milliseconds. Even with the server capable of processing 10k operations/second, the maximum number of requests that can be processed will be 10/second.&lt;/p&gt;

&lt;p&gt;If we can reduce the number of Request/Response cycle. We would greatly benefit from the efficiency of Redis operations. One of the possible solutions - &lt;a href="http://redis.io/topics/pipelining"&gt;Redis Pipelining&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In pipelining mode we send requests without waiting for the response from the server. This makes it possible for us to send more number of requests without any latency. While the requests are being processed, the corresponding responses are queued up in the server. This can be pulled from the server in one single step to the client.&lt;/p&gt;

&lt;p&gt;This is called as pipelining and is not a new idea. It was around for long time. This technique can be used to avoid RTTs to a large extent.&lt;/p&gt;

&lt;p&gt;Support for pipelining is available in almost all versions of Redis.&lt;/p&gt;

&lt;p&gt;Let’s revisit the same code mentioned earlier, but this time with pipelining. The following is the version with redis pipelining.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$redis.pipelined do
    survery_data.each_with_index do |survey_data, index|
       ...
       $redis.sadd(related_field_id, survey_data.field_id)
       ...
    end
  end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The code is self-explanatory and only encloses the redis operations in pipeline block. The execution time then reduced to ~1 hr after this optimization. The recommended batch size for the pipeline is around 10k requests. We sliced the 2.8 million records into batches of 10k records.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Deployment of Octopress Website with Prose.io and Jenkins</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/05/continuous-deployment-of-octopress-website-with-prose-io-and-jenkins/"/>
    <id>http://www.multunus.com/blog/2013/05/continuous-deployment-of-octopress-website-with-prose-io-and-jenkins/</id>
    <published>2013-05-05T00:03:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;As mentioned &lt;a href="http://www.multunus.com/2012/10/our-experience-with-jekyll-and-octopress/"&gt;in this blog post&lt;/a&gt;, we were looking for a simple solution for Live Editing the website created using Octopress and deploy it to Heroku. This post is about how to edit Website using Prose.io and deploy it using Jenkins.&lt;/p&gt;

&lt;p&gt;With &lt;a href="http://prose.io/about.html"&gt;Prose.io&lt;/a&gt;, you can edit any Github files, but you need to run 
&lt;code&gt;rake generate&lt;/code&gt; command for generating the HTML files before deploying them. So you will need the setup to deploy, even if the editing can be done online.&lt;/p&gt;

&lt;p&gt;Follow the following steps to setup &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt; or any &lt;a href="http://en.wikipedia.org/wiki/Continuous_integration"&gt;Continuous Integration&lt;/a&gt; server for deployment:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Add the following in _config.yml
 ```
 #prose.io settings
 prose:
 rooturl: "source"
 metadata:
     "source/_posts": |
 layout: post
 title: "Change Title"
 date: 2013-04-11 02:33
 comments: true
 author:
    &lt;ul&gt;
      &lt;li&gt;author
 categories:&lt;/li&gt;
      &lt;li&gt;All Posts&lt;code&gt;
 &lt;/code&gt;``&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Setup Prose.io - just login with your Github Handle&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a script with as follows:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
 bundle install
 bundle exec rake generate
 git add public/
 git commit -m "Deploying Generated files"
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Install the Heroku gem and setup the git remote and keys for deployment as mentioned &lt;a href="https://devcenter.heroku.com/articles/git"&gt;here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Setup Git Publisher to push the generated files to heroku as shown below.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-images/Git+Publisher.png" alt="Git Publisher" /&gt;&lt;/p&gt;

&lt;p&gt;Thats it. You are done. Just by clicking of a button, the changes gets deployed. With this setup anyone who has access to the Github Repo can make changes and deploy.&lt;/p&gt;

&lt;p&gt;This post is written using Prose.io and deployed through Jenkins.&lt;/p&gt;

&lt;p&gt;Yes, the setup was not as easy I had written above. I got stuck mainly with the following.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I got stuck as the command &lt;code&gt;rake generate&lt;/code&gt; was watching the file changes. It was not getting stopped. The culprit was &lt;code&gt;auto: true&lt;/code&gt; in _config.yml file.&lt;/li&gt;
  &lt;li&gt;If the file extension is .html, Prose.io will not show preview or metadata information. The markdown or md extension would work.&lt;/li&gt;
  &lt;li&gt;Thought of using Travis.io as mentioned &lt;a href="http://www.harimenon.com/blog/2013/01/27/auto-deploying-to-my-octopress-blog/"&gt;here&lt;/a&gt; for the deployment. But had issues with setting up Heroku setup with the same. Didn’t continue on that as we’ve been using Jenkins as our CI server for long.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Estimating to Timeboxing - Our Journey</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/04/estimating-to-timeboxing-our-journey/"/>
    <id>http://www.multunus.com/blog/2013/04/estimating-to-timeboxing-our-journey/</id>
    <published>2013-04-11T08:03:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Estimations are predictions. Unfortunately though, they end up being perceived as 
commitments. And the team in question starts getting unduly pressured when the estimates go wrong. At Multunus this has happened many times in the past.&lt;/p&gt;

&lt;p&gt;Sometime last year we realized there was no point in trying any harder to come up with better estimates - just by relying on our past experience and gut instincts. It was time to look at things from a different perspective.&lt;/p&gt;

&lt;p&gt;We learnt a lot of things from &lt;a href="http://www.jamesshore.com/Agile-Book/"&gt;Art of Agile Development [by James Shore]&lt;/a&gt;. We found it tremendously useful for learning how to get started with Extreme Programming - and making the “prevention rather than cure” mental shift. This in turn resulted in much less waste - and higher efficiency across the team.&lt;/p&gt;

&lt;p&gt;But we were still struggling with estimating. We tried the story points and velocity approach suggested by XP. But we were still unable to deliver things at a predictable pace.&lt;/p&gt;

&lt;p&gt;It was time to look beyond XP’s default practices.&lt;/p&gt;

&lt;h2 id="first-set-of-changes"&gt;First set of changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Keep both &lt;a href="http://www.jamesshore.com/Agile-Book/release_planning.html"&gt;MMFs and Stories&lt;/a&gt; as small as possible.&lt;/li&gt;
  &lt;li&gt;Slice down all stories to the same size. This reduces the margin of error that creeps in during story size estimation.&lt;/li&gt;
  &lt;li&gt;The velocity, then, is simply the number of stories delivered in an iteration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above changes worked well on projects which already had some kind of rhythm. We’d been working with these customer for at least 3 months - so, our knowledge of the system and the customer’s requirements were good.&lt;/p&gt;

&lt;p&gt;However, things still fell apart for new projects and customers. The level of uncertainty is obviously much higher in these cases - and the above modified approach was not sufficient for us to remain predictable enough.&lt;/p&gt;

&lt;h2 id="second-set-of-changes"&gt;Second set of changes&lt;/h2&gt;
&lt;p&gt;During our search for alternative approaches [see references below], we discovered multiple presentations and blog posts - all suggesting the same thing: Estimating can never be accurate 
enough.&lt;/p&gt;

&lt;p&gt;We watched the &lt;a href="http://www.infoq.com/presentations/Embracing-Uncertainty"&gt;Deliberate Discovery video [by Dan North]&lt;/a&gt; - and that hit us. We might be more successful if we flipped things around - and &lt;strong&gt;timeboxed&lt;/strong&gt; the stories and MMF’s.&lt;/p&gt;

&lt;p&gt;Instead of asking the question “How long will it take to build this Feature?”, we instead ask the question “What is the maximum time that should allocate for this feature?”. In addition, we’re also documenting what it is that we’re trying to discover/learn by building that particular feature.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This is subtly different from the “validated learning” approach in the Lean Startup world - because at this stage, we’re only speaking of engineering related risks.&lt;/p&gt;

&lt;p&gt;This is useful to overcome &lt;a href="http://en.wikipedia.org/wiki/Parkinson's_law"&gt;Parkinson’s Law&lt;/a&gt; [“Work expands so as to fill the time available for its completion”]. There’s an additional sense of urgency that prevails on the team. This sense of urgency in turn results in reacting faster when we find ourselves going down “inevitable” rabbit holes.&lt;/p&gt;

&lt;p&gt;We’re also noticing a more ready acceptance of the “fail early” mantra - after shifting to the timeboxing mode.&lt;/p&gt;

&lt;p&gt;We’ve tried the timeboxing approach on two different projects - and in both cases, have found remarkably better results. We were close enough to the original estimates that we’d provided - in terms of both cost and time.&lt;/p&gt;

&lt;h2 id="kanban"&gt;Kanban&lt;/h2&gt;
&lt;p&gt;As mentioned in my &lt;a href="http://www.multunus.com/2013/03/how-we-chose-our-kanban-tool/"&gt;earlier post&lt;/a&gt;, we’ve moved to Kanban, so we’re no longer doing fixed weekly iterations. And hence no calculations of velocity either.&lt;/p&gt;

&lt;p&gt;Instead the focus is on reducing the cycle time for stories - by constantly identifying and eliminating waste in the workflow.&lt;/p&gt;

&lt;p&gt;Of course, tracking the original project plan is still necessary - and allows for an additional level of feedback on how well the team is progressing.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://neilkillick.com/2012/04/12/do-not-estimate-software-projects-at-all"&gt;http://neilkillick.com/2012/04/12/do-not-estimate-software-projects-at-all/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://softwaredevelopmenttoday.blogspot.com.au/2012/01/story-points-considered-harmful-or-why.html"&gt;http://softwaredevelopmenttoday.blogspot.com.au/2012/01/story-points-considered-harmful-or-why.html&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.infoq.com/presentations/Want-Better-Estimates-Stop-Estimating"&gt;http://www.infoq.com/presentations/Want-Better-Estimates-Stop-Estimating&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.industriallogic.com/blog/stop-using-story-points/"&gt;http://www.industriallogic.com/blog/stop-using-story-points/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://dannorth.net/2009/07/01/the-perils-of-estimation/"&gt;http://dannorth.net/2009/07/01/the-perils-of-estimation/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>How we chose our Kanban Tool</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/03/how-we-chose-our-kanban-tool/"/>
    <id>http://www.multunus.com/blog/2013/03/how-we-chose-our-kanban-tool/</id>
    <published>2013-03-10T04:09:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/kanbanpng.png" alt="kanbanpng" /&gt;&lt;/p&gt;

&lt;h2 id="update-we-moved-to-trello"&gt;Update: We moved to Trello&lt;/h2&gt;
&lt;p&gt;We looked at &lt;a href="https://trello.com"&gt;Trello&lt;/a&gt; also initially, but didn't consider as it does not provide features such as WIP limit, cycle and lead time reporting etc. There are extensions available for the same such as 
&lt;a href="https://github.com/NateHark/TrelloWIPLimits"&gt;Trello WIP Limits&lt;/a&gt; for adding WIP limit, but felt those may not be sufficient. But recently we moved to Trello mainly because of its&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simplicity&lt;/strong&gt; and &lt;strong&gt;Low learning curve&lt;/strong&gt; and we are right now very happy with the move.&lt;/p&gt;

&lt;h2 id="heres-ouroriginal-evaluation"&gt;Here's our original evaluation:**&lt;/h2&gt;
&lt;p&gt;We’ve been using &lt;a href="http://www.pivotaltracker.com/"&gt;Pivotal Tracker&lt;/a&gt;[PT] as our Collaborative Project Management Tool for over 2 years now.&lt;/p&gt;

&lt;p&gt;Recently though, we chose to move toward a Kanban style of workflow. PT is however heavily geared toward an iterative form of development - but we’ve now chosen to eschew iterations altogether. We’ve been doing continuous deployment for a while now, and we found the whole process of estimations and sizing of stories a largely wasteful exercise.&lt;/p&gt;

&lt;p&gt;I am not going to talk about “Why Kanban”, because there are many articles and books which talks about the same. But I am instead going to walk you through the process that we used to evaluate and decide upon the online Kanban tool that we finally ended up shifting to.&lt;/p&gt;

&lt;p&gt;The different tools we evaluated were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://leankit.com/"&gt;LeanKit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://kanbanery.com/"&gt;Kanbanery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://kanbantool.com/"&gt;KanbanTool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you’ve ever used PT, you already know what an awesome piece of software it is. The real-time collaboration features, the sheer fluidity of the user interface, the way it all tightly fits together - is amazing. So, our expectations from the Kanban tool were already fairly high - especially in terms of a clutter free, fluid, “don’t-get-in-my-way” user experience.&lt;/p&gt;

&lt;p&gt;So, we came up with a list of criteria for deciding our tool of choice.&lt;/p&gt;

&lt;iframe src="https://docs.google.com/spreadsheet/pub?key=0ApUPwJdQvqT_dEJuS25YZzMwWkJVc0NXWXhIbUhaQ1E&amp;amp;output=html&amp;amp;widget=true" width="700" height="400" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;Here is the &lt;a href="https://docs.google.com/spreadsheet/ccc?key=0ApUPwJdQvqT_dEJuS25YZzMwWkJVc0NXWXhIbUhaQ1E&amp;amp;usp=sharing"&gt;original google spreadsheet&lt;/a&gt;. So which tool did we end up choosing? Well, its a Kanban Tool called 
&lt;a href="http://kanbantool.com"&gt;KanbanTool&lt;/a&gt; :)&lt;/p&gt;

&lt;p&gt;Lastly, I would like to mention those articles which helped us to understand Kanban better.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.agileproductdesign.com/blog/2009/kanban_over_simplified.html"&gt;Kanban Development OverSimplified&lt;/a&gt; by Jeff Patton&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.infoq.com/presentations/Single-Piece-Flow-Kanban"&gt;Single Piece Workflow in Kanban&lt;/a&gt; by James Shore and Arloo Banshee&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.crisp.se/gratis-material-och-guider/kanban"&gt;Kanban&lt;/a&gt; by Henrik Kniberg&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>AgileIndia 2013 Summary</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2013/03/agileindia-2013-summary/"/>
    <id>http://www.multunus.com/blog/2013/03/agileindia-2013-summary/</id>
    <published>2013-03-08T22:37:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/agileindia20131.jpg" alt="agileindia2013" /&gt;&lt;/p&gt;

&lt;p&gt;This is the summary about the recently concluded &lt;a href="http://2013.agileindia.org/"&gt;Agile India Conference 2013&lt;/a&gt;.
This gave me a chance to interact with great legends and leaders of software industry such as Linda Rising, Mary Poppendieck, Henrik Kniberg, Jez Humble, Jeff Patton, Fred George, Craig Larman, Neil Ford, Venkat Subramaniam, Aslam Khan, Karl Scotland, Kenji Hiranabe, Laurent Bossavit, Rebecca Parsons etc. and listen to them multiple times in the span of 4 days. Amazing.&lt;/p&gt;

&lt;p&gt;I am not going to write about each session I attended, am instead summarizing what I learned during those 4 days both by attending the sessions and by interacting with the speakers during those 4 days:* Never stop learning. Experiment continuously.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Experiments may fail, but learn from it and move on.&lt;/li&gt;
  &lt;li&gt;Analyse why am I 
 (whatever it is), and be innovative. If you delay innovation, it becomes worse.&lt;/li&gt;
  &lt;li&gt;Great software can be created only with collaboration. So work as a team and share the responsibilities.&lt;/li&gt;
  &lt;li&gt;Be a good coach rather being authoritative. This will help to implement changes effectively.&lt;/li&gt;
  &lt;li&gt;Optimise the entire delivery process instead of just optimising the development process. Kanban helps to 
 while Scrum helps to optimise only the development.&lt;/li&gt;
  &lt;li&gt;Have tight feedback cycles by applying timeboxing mercilessly. This will help for continuous learning and improvement. Eg: 15 minutes TDD cycles which result in simple design with refactorings, Frequent Retrospectives etc.&lt;/li&gt;
  &lt;li&gt;Apply Last Responsible Moment across, eg: Use practices such as &lt;strong&gt;Emergent Design&lt;/strong&gt; and &lt;strong&gt;Evolutionary Architecture&lt;/strong&gt; instead of doing. The Code complexity reports should help to identify the coding smells which helps to implement these practices.&lt;/li&gt;
  &lt;li&gt;You can defer writing tests until the validation of feature is done. Adding acceptance tests for stability can deferred when you feel that it’s time to have more stability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks a ton to Naresh Jain and team for organising such a wonderful event. Curious to know what’s coming for Agile India 2014. :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our experience with Jekyll and Octopress</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/10/our-experience-with-jekyll-and-octopress/"/>
    <id>http://www.multunus.com/blog/2012/10/our-experience-with-jekyll-and-octopress/</id>
    <published>2012-10-25T14:00:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We recently moved from Wordpress to Jekyll for our website because we found it harder to maintain our site with Wordpress. We also hit performance bottlenecks with Wordpress and were clueless on how to fix those. Jekyll made a lot more sense as it uses Ruby, which we are very comfortable with as compared to PHP. And hardly any performance bottlenecks because the entire site is static, and so no DB tuning required :)&lt;/p&gt;

&lt;h2 id="what-is-jekyll"&gt;What is Jekyll?&lt;/h2&gt;
&lt;p&gt;Jekyll is a simple, blog aware, static site generator created by 
&lt;a href="http://tom.preston-werner.com/"&gt;Tom Preston-Werner&lt;/a&gt;, founder of GitHub. It takes a template directory (representing the raw form of a website), runs it through Textile or Markdown and Liquid converters, and spits out a complete, static website suitable for serving with any of your favorite web server. This is also the engine behind GitHub Pages, which you can use to host your website from GitHub source. We chose to use 
&lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt;, a framework built on top of Jekyll. It comes with lot of features such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A semantic HTML5 template&lt;/li&gt;
  &lt;li&gt;A Mobile first responsive layout (rotate, or resize your browser and see)&lt;/li&gt;
  &lt;li&gt;Built in 3rd party support for Twitter, Google Plus One, Disqus Comments, Pinboard, Delicious, and Google Analytics&lt;/li&gt;
  &lt;li&gt;An easy deployment strategy using Github pages or Rsync&lt;/li&gt;
  &lt;li&gt;Built in support for Rack servers
There are lot of 
&lt;a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes"&gt;3rd party themes&lt;/a&gt; available with Octopress which you can chose. This helped us to convert the existing Wordpress site to Jekyll.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="how-does-it-work"&gt;How does it work?&lt;/h2&gt;

&lt;p&gt;Every page that you create in Jekyll will have the following sections:
- &lt;a href="https://github.com/mojombo/jekyll/wiki/YAML-Front-Matter"&gt;YAML frontmatter&lt;/a&gt; on top of every file which will contain data in the YAML format which is processed by Jekyll. The mandatory ones are “title” and “layout” which decides the title and layout of the page respectively.
- &lt;a href="https://github.com/Shopify/liquid"&gt;Liquid&lt;/a&gt; markup for the templating with the in markdown format or HTML format. There is support for 
&lt;a href="https://github.com/plusjade/mustache-with-jekyll"&gt;Mustache&lt;/a&gt; too.	
- Layouts for the pages.
- Plugins - this is for customizing the content. You can see more details about how to write plugins 
&lt;a href="https://github.com/mojombo/jekyll/wiki/Plugins"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="aha-moments"&gt;“Aha” Moments&lt;/h2&gt;
&lt;p&gt;There were many “Aha” moments throughout the migration, I am putting those top ones which came to my mind while writing.&lt;/p&gt;

&lt;h3 id="responsiveness"&gt;Responsiveness&lt;/h3&gt;
&lt;p&gt;Bootstrap makes it so much easier to do the regular stuff - modals, navigation bar, tooltips, etc. And with a little more effort you get responsiveness for free.&lt;/p&gt;

&lt;h3 id="asides-for-featured-posts"&gt;Asides for Featured posts&lt;/h3&gt;
&lt;p&gt;Asides are the way you can add sidebar to your pages in Octopress. So if you want something to be displayed on the navbar, add a new aside file and include it in your layout. We had the requirement to display certain posts as “featured” and needed to be shown them in all pages. The only thing to do was to add ‘featured: true’ in the YAML front matter of the corresponding posts and create an aside as follows and include it in your layout.&lt;/p&gt;

&lt;h3 id="integrating-with-comments"&gt;Integrating with comments&lt;/h3&gt;
&lt;p&gt;It was as simple adding “comments: true” in the posts which you want the comments to be displayed for.&lt;/p&gt;

&lt;h3 id="keeping-the-blogs-as-unpublished"&gt;Keeping the blogs as unpublished&lt;/h3&gt;
&lt;p&gt;Keep “published: false” in the YAML frontmatter of the post. It won’t show up in the post list.&lt;/p&gt;

&lt;h3 id="permanent-links-for-posts"&gt;Permanent Links for Posts&lt;/h3&gt;
&lt;p&gt;Need to change the way the URL for blogs are being displayed? Just change the permlink in _config.yml&lt;/p&gt;

&lt;h2 id="where-things-can-take-time"&gt;Where things can take time&lt;/h2&gt;

&lt;h3 id="figuring-out-how-jekyll-does-the-magic"&gt;Figuring out how Jekyll does the magic&lt;/h3&gt;
&lt;p&gt;It took a while for us to figure out how Jekyll does the “magic”. Getting a hang of the layouts, YAML Front matter, Liquid Templating, Asides in Octopress can take time. If you need to customize, writing the plugins and what type of plugin to write can also take little time initially.&lt;/p&gt;

&lt;h3 id="learning-curve-for-sass-and-twitter-bootstrap"&gt;Learning curve for Sass and Twitter bootstrap&lt;/h3&gt;
&lt;p&gt;As mentioned earlier, Octopress uses &lt;a href="http://sass-lang.com/"&gt;Sass&lt;/a&gt; and we chose a theme which uses 
&lt;a href="http://twitter.github.com/bootstrap/"&gt;Bootstrap&lt;/a&gt;. There would be a learning curve if you are new to both.&lt;/p&gt;

&lt;h3 id="migrating-content-from-wordpress"&gt;Migrating content from Wordpress&lt;/h3&gt;
&lt;p&gt;There are quiet a few plugins written to &lt;a href="https://github.com/mojombo/jekyll/wiki/Blog-Migrations"&gt;migrate&lt;/a&gt; data from other blogging platforms including Wordpress. This worked well for blogs, but will not take care of downloading the related images and also the pages other than blogs. We used the tool &lt;a href="https://github.com/thomasf/exitwp"&gt;exitwp&lt;/a&gt;, which will try to migrate as much data as possible including downloading of images. But it does not take care of updating the posts with the new URL for the images, so that was a task that we had to take up manually.&lt;/p&gt;

&lt;h3 id="contact-us-form"&gt;Contact Us Form&lt;/h3&gt;
&lt;p&gt;There are Wordpress plugins that can help you create a contact us form or a suggestion box. But how can you do that for a static website? You’ve two options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an app with an API for saving the contact details&lt;/li&gt;
  &lt;li&gt;Use some existing services which can persist form data
We went with the second option and after a lot of shopping around, we finally settled for none other than 
&lt;a href="http://www.google.com/google-d-s/forms/"&gt;Google Forms&lt;/a&gt;. This automatically took care of getting an email notification for every form submission. Some of the issues that we fixed or workarounds we had done are:&lt;/li&gt;
  &lt;li&gt;We followed the instructions mentioned 
&lt;a href="http://morning.am/tutorials/how-to-style-google-forms/"&gt;here&lt;/a&gt; to customize the look and feel of the form.&lt;/li&gt;
  &lt;li&gt;Added a hidden iframe to not to show the page from google form on submit&lt;/li&gt;
  &lt;li&gt;Added front end validations for mandatory fields, to ensure that if and when the form is submitted, the submission would be successful.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="team-page"&gt;Team Page&lt;/h3&gt;
&lt;p&gt;As any company’s website, we also needed a team page - A visual index of people and also separate pages of individual profiles. We found an excellent &lt;a href="https://github.com/flatterline/jekyll-plugins#company-team"&gt;plugin&lt;/a&gt;, that seemed to do just what we wanted. But since we had used Octopress, the directory structure was slightly different from what the plugin had expected. So we had to fiddle around with the plugin to understand how it worked and modify it to work for us. In the end, adding a new person to the team was as easy as adding a new yml file for that person.&lt;/p&gt;

&lt;h2 id="our-contribution-back"&gt;Our contribution back&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/multunus/jekyll-author-plugin"&gt;We’ve created a plugin&lt;/a&gt; for listing posts by a certain author.&lt;/p&gt;

&lt;h2 id="things-i-felt-missing"&gt;Things, I felt, missing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Debugging - I found it extremely tough to debug Jekyll. Tried both 
&lt;a href="http://bashdb.sourceforge.net/ruby-debug.html"&gt;ruby-debug&lt;/a&gt; and 
&lt;a href="http://pryrepl.org/"&gt;pry&lt;/a&gt;, but somehow both does not seem to be working. The tough part I found was how it suppresses exceptions. If there is an error in any generator, it just continues without even logging it.&lt;/li&gt;
  &lt;li&gt;Live Editor for Octopress using which you can write the blog and automatically publish it. If you are using only Jekyll with GitHub pages, 
&lt;a href="http://prose.io/"&gt;prose.io&lt;/a&gt; would work for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="summary"&gt;Summary&lt;/h2&gt;
&lt;p&gt;I would highly recommend Jekyll and/or Octopress for creating a company website especially if you are a software development firm comfortable with Ruby. It combines the power of Ruby, Templating and YAML using which it generates a static web site for you. Octopress helps you to quickly layout the foundation for your website on top of which you can easily build. A huge thanks to the awesome Ruby community and GitHub community without whom the entire project might not have been possible.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://vitobotta.com/how-to-migrate-from-wordpress-to-jekyll/"&gt;http://vitobotta.com/how-to-migrate-from-wordpress-to-jekyll/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I’ve written &lt;a href="http://www.multunus.com/blog/2013/05/continuous-deployment-of-octopress-website-with-prose-io-and-jenkins/"&gt;another post&lt;/a&gt; about how to use Prose.io and Jenkins for Live Editing and Continuous Deployment.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Web Application Security</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/10/web-application-security/"/>
    <id>http://www.multunus.com/blog/2012/10/web-application-security/</id>
    <published>2012-10-11T15:25:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Now a days we, programmers are really obsessed with test driving our application and automating. We automate our unit tests and integration tests. We do continuous integration. But what about security testing ? Many organization hire security professionals to test the web application security when the complete product is built and most often to test production environment. But most of the vulnerabilities that is present in the system could have fixed very easily and cheaply when found during the development phase. Also since the application is in the production environment hired security consultants will not be able to conduct an attack against the system and verify the vulnerability. Hiring a security consultant is very costly as well as :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We will not be supplied with a security test suit.&lt;/li&gt;
  &lt;li&gt;We will not have list of passing test cases and failing tests instead we get a list of vulnerabilities&lt;/li&gt;
  &lt;li&gt;After fixing the vulnerabilities we might have to hire them again to make sure that all the vulnerabilities are fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The truth is developers can identify and fix many of such vulnerabilities during the development itself. Moreover we can write automated security testing with the help of integration testing tools. There are two approaches for testing our web application security&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Black box testing.&lt;/li&gt;
  &lt;li&gt;White box testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In black box testing we analyse the security of our application through the web  front-end of our application. Vulnerability scanners is an example for black box scanning. In white box testing we use static code analysis to find the vulnerabilities in the system. 
For automated security analysis many tools are available. ROR developers can use any of the following.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://brakemanscanner.org/"&gt;Brakeman&lt;/a&gt; for White box testing.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;Zed Attack Proxy&lt;/a&gt; for Black box testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Brakeman is a static code analyzer whereas ZAP is a vulnerability scanning tool. Both serves different functionalities. Note that ZAP is not dependent on any programming language. Now regarding which method to follow for security testing I would like to quote the following from this &lt;a href="http://jeremiahgrossman.blogspot.in/2009/10/black-box-vs-white-box-you-are-doing-it.html"&gt;blog&lt;/a&gt; : “Black box vulnerability assessments measure the hackability of a website given an attacker with a certain amount of resources, skill, and scope. We know that bad guys will attack essentially all publicly facing websites at some point in time, so it makes sense for us to learn about the defects before they do.&lt;/p&gt;

&lt;p&gt;As such, black box vulnerability assessments are best defined as an outcome based metric for measuring the security of a system with all security safeguards in place. White box source code reviews, on the other hand, measure and/or help reduce the number of security defects in an application resulting from the current software development life-cycle. In the immortal words of Michael Howard regarding Microsoft’s SDL mantra, “Reduce the number of vulnerabilities and reduce the severity of the bugs you miss.” Software has bugs, and that will continue to be the case.&lt;/p&gt;

&lt;p&gt;Therefore it is best to minimize them to the extent we can in effort to increase software assurance.” We can run Brakeman against our application and after assessing the written code Brakeman will report the possible vulnerabilities. It will help us improve our code. But the downside is, it  may not be zen percentage in finding the possible vulnerabilities because it checks for typical coding errors which opens the doors for security breaches. ZAP is a really good web app security analysis tool. It is a proxy which sits between the web application and the web browser constantly analysing all the HTTP traffic. But for the same reason, we need to walk through all the web features so that ZAP can analyse the traffic.&lt;/p&gt;

&lt;p&gt;We were thinking we  should try to  automate this process and once we find any issue, write a test to reproduce the same issue and go ahead and fix the problem. This will help us in making sure that the problem got fixed. If you want to automate the security testing using ZAP, it can be used done by integrating it with Web application testing tools such as &lt;a href="http://seleniumhq.org/"&gt;Selenium&lt;/a&gt;. Regarding how to configure ZAP and analyze the security vulnerabilities, I will cover it in a separate blog post. I also will be writing about how to integrate it with Selenium for creating automated security testing suite.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Setting up Development Environment using Vagrant</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/10/setting-up-development-environment-using-vagrant/"/>
    <id>http://www.multunus.com/blog/2012/10/setting-up-development-environment-using-vagrant/</id>
    <published>2012-10-03T16:25:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;h2 id="problem"&gt;Problem&lt;/h2&gt;
&lt;p&gt;We have some projects which takes lot of effort to set up. As with every projects setting up development environment includes installing git, curl, apache, mysql-server, ruby, rvm, ruby-gems for the app, etc. and also the project specific configurations.&lt;/p&gt;

&lt;p&gt;Doing all these every time when you need to setup the development environment will be time consuming and takes a lot of effort.&lt;/p&gt;

&lt;h2 id="solution"&gt;Solution&lt;/h2&gt;
&lt;p&gt;Setting up the development environment in VM using Vagrant.&lt;/p&gt;

&lt;p&gt;Vagrant helps to build development environment for projects and rebuild them when needed. And this environment can be shared among the team easily.&lt;/p&gt;

&lt;h2 id="how-"&gt;How ?&lt;/h2&gt;
&lt;p&gt;Vagrant is primarily a driver for Oracle VirtualBox virtual machines. You can download and install Vagrant from &lt;a href="http://downloads.vagrantup.com/"&gt;here&lt;/a&gt; or you can install it as a ruby gem for the rails projects. Vagrant uses a “base box” which is a base install (an OS) for the system you are going to use.&lt;/p&gt;

&lt;p&gt;Different flavours of base boxes can be downloaded from &lt;a href="http://www.vagrantbox.es/"&gt;http://www.vagrantbox.es/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First step is to mark the root directory and setup the basic required files using the following command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant init
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will create a file called &lt;strong&gt;Vagrantfile&lt;/strong&gt; this will contain the configuration details for the VM.&lt;/p&gt;

&lt;p&gt;After the project initailization you can download Vagrant boxes from &lt;a href="http://www.vagrantbox.es/"&gt;http://www.vagrantbox.es/&lt;/a&gt; and add it to your project:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant box add lucid64 lucid64.box
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can also add the box from a remote server using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant box add lucid64 http://files.vagrantup.com/lucid64.box
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To list the boxes that you added you can use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant box list
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you have to edit the Vagrantfile to use the base box that you have added.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Vagrant::Config.run do |config|
config.vm.box = "lucid64" 
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we can start our new VM:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant up
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will start a fully functional VM. To access the VM you have to do ssh:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant ssh
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will log you into the virtual machine. Now you can start setting up the development environment. Once everything is ready we can package this VM to a box. This will help us to share the virtual environment that we created with the other team members.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant package
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will create a vagrant box with the entire dev environment setup. Now to use this any machine, you have to install Virtualbox and Vagrant. Then add this box using:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
vagrant box add lucid64_with_dev_setup package.box
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can create a VM with this box and all the dev environment setup will be available with this VM.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CSS3 animations versus Javascript animations</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/09/css3-animations-versus-javascript-animations/"/>
    <id>http://www.multunus.com/blog/2012/09/css3-animations-versus-javascript-animations/</id>
    <published>2012-09-27T16:25:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Layout engines in major browsers, like gecko, webkit or trident now have many optimization functions for animations. But these will simply cease to function if you’re using jQuery animations because in reality jQuery is not “animating” anything. However, in the case of CSS3, the browser optimizes animations using the GPU’s resources to give a much more polished effect. Go in for CSS3 whenever possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The long version:&lt;/strong&gt; jQuery is an excellent js framework to do a lot of things, but is it what you need for blazing fast performance with animations for your website? Lets dig a little bit deeper into the actual implementations, by considering these two examples,&lt;/p&gt;

&lt;h3 id="jquery-animation"&gt;jQuery animation&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
$(".onclick").toggle(
      function(){
$(".children").animate({height:'50'});
      },
      function(){
$(".children").animate({height:'0'});
      }
  );
&lt;/code&gt;&lt;/p&gt;

&lt;iframe style="width: 100%; height: 272px;" src="http://jsfiddle.net/midhun_k/aq9gq/embedded/" height="240" width="320" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;In this case the drop down menu is implemented using jquery animate method.&lt;/p&gt;

&lt;h3 id="css3-animation"&gt;CSS3 animation&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
.children{
   height: 0px;
   border-bottom: 1px solid grey;
   -webkit-transition: height .3s ease-in-out;
}
.children-onhover{
   height: 50px;
}
$(".onclick").click(function(){
    $(".children").toggleClass("children-onhover");
});
&lt;/code&gt;&lt;/p&gt;

&lt;iframe style="width: 100%; height: 272px;" src="http://jsfiddle.net/midhun_k/kANVs/embedded/" height="240" width="320" frameborder="0"&gt;&lt;/iframe&gt;

&lt;p&gt;In this case the drop down menu is done using css3 transitions using ease-in-out transition effect.&lt;/p&gt;

&lt;p&gt;Lets analyze what’s going on with the css3 animation for sliding down the menus. Both of these menus progressively increase the height of each of the containing submenus, but in case of css3, the height is progressively updated from the old value to the new value over time, which is done by the layout engine of the browser internally, as it is described in the "http://www.webkit.org/blog/138/css-animation/"&amp;gt;surfin’ safari blog.&lt;/p&gt;

&lt;p&gt;In case of jQuery, inside the animate of each property, an fx Object is created.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
jQuery.each( prop, function( name, val ) {
  var e = new jQuery.fx( self, opt, name );
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This return a javascript object instance.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
fx: function( elem, options, prop ) {
  this.options = options;
  this.elem = elem;
  this.prop = prop;
  if ( !options.orig ) {
      options.orig = {};
  }
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After that, the start and end values is set. In our case:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
start = 0;
   end = 50;
   unit = 'px';
   e.custom( start, end, unit );
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The above snippet calls the custom function:&lt;/p&gt;

&lt;p&gt;```
custom: function( from, to, unit ) {
  this.startTime = now();
  this.start = from;
  this.end = to;
  this.unit = unit || this.unit || "px";
  this.now = this.start;
  this.pos = this.state = 0;&lt;/p&gt;

&lt;p&gt;var self = this;
  function t( gotoEnd ) {
      return self.step(gotoEnd);
  }&lt;/p&gt;

&lt;p&gt;t.elem = this.elem;&lt;/p&gt;

&lt;p&gt;if ( t() &amp;amp;&amp;amp; jQuery.timers.push(t) &amp;amp;&amp;amp; !timerId ) {
      timerId = setInterval(jQuery.fx.tick, 13);
  }
}
```&lt;/p&gt;

&lt;p&gt;As you can see above, a call to step method is made every every 13 milliseconds. As of jQuery 1.8 this interval is called JQuery.fx.interval.&lt;/p&gt;

&lt;p&gt;That is for a height increase of 50px over a time period of 400ms (default JQuery animation interval), it does 31 steps of 13 ms each.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
jQuery.fx.speeds = {
  slow: 600,
  fast: 200,
  // Default speed
  _default: 400 
};
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As of jQuery 1.8 the step function is replaced, but the same logic is applied:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
step: function( gotoEnd ) {
  var t = now();
  var n = t - this.startTime;
  this.state = n / this.options.duration;
  pos = jQuery.easing['swing'](this.state, n, 0, 1, this.options.duration);
  this.now = this.start + ((this.end - this.start) *  this.pos);
  this.update();
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can dig deeper into jQuery effects at: &lt;a href="https://github.com/jquery/jquery/blob/master/src/effects.js#L124"&gt;https://github.com/jquery/jquery/blob/master/src/effects.js#L124&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also make sure to check out the relevant webkit source: &lt;a href="https://github.com/WebKit/webkit/tree/master/Source/WebCore"&gt;https://github.com/WebKit/webkit/tree/master/Source/WebCore&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Anuroop: "We're now confidently speaking of going to market"</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/07/anuroop/"/>
    <id>http://www.multunus.com/blog/2012/07/anuroop/</id>
    <published>2012-07-30T14:44:33+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;CogKnit is a Semantic Web company based out of Bangalore. Their first product is in the education space and is called Nimit.&lt;/p&gt;

&lt;p&gt;Here's Anuroop [co-founder @ CogKnit] speaking about his vision at the Unreasonable Institute:&lt;/p&gt;

&lt;iframe src="//player.vimeo.com/video/13877812?title=0&amp;amp;portrait=0" width="500" height="281" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Multunus was hired to build Nimit's front end -&lt;/strong&gt; to consume the web service API’s exposed by its back end.&lt;/p&gt;

&lt;p&gt;I had a chat with Anuroop to share his thoughts on their experience working with us. Here's a transcript of our chat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy:&lt;/strong&gt; Hi Everyone, This is Anuroop. I'm Vaidy. I'm the founder of Multunus. Anuroop is one of our clients. We're geographically very close. Our offices are one floor apart :).  They're actually on the first floor and we're on the second.&lt;/p&gt;

&lt;p&gt;We've been working together for about 5 months. I asked Anuroop whether he could actually share his experience working with Multunus over the last 5 months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anuroop:&lt;/strong&gt; Lemme sum it up this way. If I were to just sum up in one line what has been the greatest value addition that Multunus has made to us:Given that our background - we're a product development company who've been in existence for the last 3 years. We started active product development in the last one and a half years. We're essentially back-end people with deep expertise in Web 3.0.&lt;/p&gt;

&lt;p&gt;We do not have front end expertise. Given our experiments that we did, we evaluated a few vendors. And we went with Multunus.&lt;/p&gt;

&lt;h2 id="business-value"&gt;Business Value&lt;/h2&gt;
&lt;p&gt;The greatest value add that this team has done for the product and us is that they've brought us to a point where &lt;strong&gt;we're now confidently speaking of going to market&lt;/strong&gt;. So, &lt;strong&gt;for a product company - that is very very big milestone. &lt;/strong&gt;I think that's really where the greatest achievement - you guys have helped us to a stage where we can now speak about "going to market".&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anuroop Iyengar: "We're now confidently speaking of going to market"&lt;/strong&gt;&lt;/p&gt;

&lt;iframe src="//www.youtube.com/embed/NAMGHISmWH8?rel=0" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;

&lt;h2 id="architecture"&gt;Architecture&lt;/h2&gt;
&lt;p&gt;The technology components, the features of the product and what it is supposed to do has been fairly complex. So the requirement was that we have a codebase which can work seamlessly across multiple platforms. Given mobile computing, how much mind space it has taken in the space of end consumers - we wanted a codebase and a platform which can be technology agnostic - which can work on Windows, which can work on Android, which can work on iOS.&lt;/p&gt;

&lt;p&gt;In terms of &lt;strong&gt;the choice of the technology solution that your architects have made - that's been phenomenal.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is has done is that we were able to make the right technology choices for some pretty critical issues. So now we're looking at a codebase - though HTML5 is still evolving - I think it still has a maturity curve - we're looking at a situation wherein we have a codebase which can work across these platforms.&lt;/p&gt;

&lt;h2 id="continuous-delivery"&gt;Continuous Delivery]&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Once certain thing that stands out which was not really a part of the contract :)&lt;/strong&gt; - is the addition that your architect has made in setting up the &lt;strong&gt;CD [Continuous Delivery] pipeline&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We're a platform as a service company. So we will keep improving features, adding new features - so it becomes imperative that such a kind of infrastructure exists.&lt;/p&gt;

&lt;p&gt;Given the nature of a startup where things are chaotic - it helped that today we have a fairly functional Continuous Delivery pipeline. Thank you for that.&lt;/p&gt;

&lt;p&gt;It took lot of work between the two teams to get this up - and we're there.&lt;/p&gt;

&lt;h2 id="design-thinking"&gt;Design Thinking&lt;/h2&gt;
&lt;p&gt;Commenting on your team's ability, I think the team has capability for design thinking. And the ability to convert some of those - being the product owner, I was the guy who was giving the design thoughts. They were able to convert those design thoughts into actual specifications and implement them. Which was I would say, pretty good.&lt;/p&gt;

&lt;h2 id="quality"&gt;Quality&lt;/h2&gt;
&lt;p&gt;And robust delivery. Whatever is promised, will work at the end of the week - it works. So, I think that's what a customer needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vaidy&lt;/strong&gt;: Thank you Anuroop. I think that was very useful. And we've been working with Cogknit - Anuroop is one of the founders at CogKnit. We've been working with CogKnit in the Extreme Programming mode for about 5 months now.&lt;/p&gt;

&lt;p&gt;Its been a fantastic experience for us as well - to try and get the maximum value out of the process. We've learnt a lot as well in terms of how to improve.&lt;/p&gt;

&lt;p&gt;Hopefully we're gonna be working together in the future as well. Thank you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anuroop&lt;/strong&gt;: Yup. Thanks.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery of iOS apps using Jenkins and TestFlightApp</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/05/continuous-delivery-of-ios-apps-using-jenkins-and-testflightapp/"/>
    <id>http://www.multunus.com/blog/2012/05/continuous-delivery-of-ios-apps-using-jenkins-and-testflightapp/</id>
    <published>2012-05-21T16:33:21+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;As mentioned in &lt;a href="http://www.multunus.com/blog/categories/continuous-delivery/"&gt;earlier posts&lt;/a&gt; we’ve been doing Continuous Delivery for both Webapps and Android apps for quite sometime. This post is about setting up Continuous Delivery for iOS apps using Jenkins and 
&lt;a href="http://testflightapp.com"&gt;TestFlightApp&lt;/a&gt;. TestFlightApp is a free service which helps to do closed beta testing without putting into AppStore. Using their APIs, the process of delivering new versions of the app can be automated.&lt;/p&gt;

&lt;p&gt;Setting up Continuous Delivery mainly involves the following steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup Mac Machine as Jenkins Node&lt;/li&gt;
  &lt;li&gt;Setup Jenkins Xcode plugin&lt;/li&gt;
  &lt;li&gt;Configure Distribution profile&lt;/li&gt;
  &lt;li&gt;Integrate with TestFlightApp API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets see those steps in detail.&lt;/p&gt;

&lt;h2 id="setup-mac-machine-as-jenkins-node"&gt;Setup Mac Machine as Jenkins Node**&lt;/h2&gt;
&lt;p&gt;Setting up a node with Jenkins is very easy . You can either control the slave using SSH or using JWS. Each node will have a label name associated with it, which needs to be mentioned during setting up the job which needs to be run on this node. You can configure the nodes from the Manage Nodes under the Manage Jenkins option. The following screenshot shows how to configure a node using SSH.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/jenkins_node.png" alt="Configure Node using SSH" /&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Step+by+step+guide+to+set+up+master+and+slave+machines"&gt;link&lt;/a&gt; contains step by step instructions on how to configure a node using JavaWebStart.&lt;/p&gt;

&lt;h2 id="setup-jenkins-xcode-plugin"&gt;Setup Jenkins Xcode plugin&lt;/h2&gt;
&lt;p&gt;Jenkins XCode plugin abstracts the xcode commands to run for creating packages for distribution. &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Xcode+Plugin"&gt;Jenkins Wiki&lt;/a&gt; has details about how to configure the same. I encountered one &lt;a href="https://issues.jenkins-ci.org/browse/JENKINQS-12635?focusedCommentId=161518#comment-161518"&gt;issue&lt;/a&gt; while configuring the same, i.e. ipa generation was failing when the “Build output directory” was configured with relative path. It got resolved by giving the full path as 
&lt;strong&gt;${WORKSPACE}/build&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id="configure-distribution-profile"&gt;Configure Distribution profile&lt;/h2&gt;
&lt;p&gt;For distributing applications, an ad-hoc distribution profile needs to be created using the this &lt;a href="https://developer.apple.com/ios/manage/provisioningprofiles/create.action?type=2"&gt;link&lt;/a&gt;. The Development Provisioning Profile will not work with TestFlightApp. It took me sometime to figure out the same. The following video gives detailed instructions on how to create the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=XVO0tIHmQTg&amp;amp;feature=relmfu"&gt;http://www.youtube.com/watch?v=XVO0tIHmQTg&amp;amp;feature=relmfu&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="integrate-with-testflightapp-api"&gt;Integrate with TestFlightApp API&lt;/h2&gt;

&lt;p&gt;TestFlightApp provides &lt;a href="https://testflightapp.com/api/doc/"&gt;API&lt;/a&gt; which can be integrated with Jenkins to upload the IPA after successful build. I used curl command, as given as sample in the document, to upload the IPA. You can create support groups to be notified on each new upload of the app, and installation of the app is very simple i.e. just a click of link in the email. No iTunes and no sharing of IPA through emails.&lt;/p&gt;

&lt;p&gt;One issue I was stuck during the setup was the configuration of the profile with the Xcode plugin. The plugin has the option “Embed Profile”, but even if you give the path of the profile file, it was using the wrong profile for the IPA. The problem resolved when the profiles were refreshed in Xcode. You can get the Refresh option in the Organizer menu as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/refresh_profiles_xcode.jpg" alt="Refresh profiles - Xcode" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This post is mainly about integrating Jenkins with TestflightApp, hence not talking about testing tools. I am planning to cover about the same in my upcoming posts.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Introduction to Continuous Delivery</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/05/introduction-to-continuous-delivery/"/>
    <id>http://www.multunus.com/blog/2012/05/introduction-to-continuous-delivery/</id>
    <published>2012-05-15T20:19:16+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We’ve been doing Continuous Delivery for sometime and also been writing about how to implement the same. This post is about why Continuous Delivery is required and what problems does it solve.&lt;/p&gt;

&lt;h2 id="what-is-continuous-delivery"&gt;What is Continuous Delivery&lt;/h2&gt;
&lt;p&gt;Continuous Delivery is the process of being able to continuously deliver new versions of a software product to create a tight feedback loop between users and the project team—including the customer or product owner.&lt;/p&gt;

&lt;p&gt;This helps to test new ideas and changes in the product and also measure the effect of changes in the revenue. Continuous Delivery means releasing software very frequently, i.e. multiple times a day, rather than once in months.&lt;/p&gt;

&lt;h2 id="bottlenecks-for-continuous-delivery"&gt;Bottlenecks for Continuous Delivery&lt;/h2&gt;
&lt;p&gt;Lets see the usual challenges for releases. The following are the challenges that we faced before moving to Continuous Delivery. Let me put it in this way i.e. the following are the challenges which got us thinking on how to make releases more predictable and pain free. We already had a Continuous Integration setup at our end, but that was not enough to ease the process.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No tracking on which version was deployed, when and to which environment&lt;/li&gt;
  &lt;li&gt;Different people working on different branches, code merge hell when its ready for deployment.&lt;/li&gt;
  &lt;li&gt;When an urgent bug needs to be fixed, the fix need to be replicated in multiple branches along with the mainline branch&lt;/li&gt;
  &lt;li&gt;No easy way to revert back to the previous stable version&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ve seen even more challenges in teams which do not have a Continuous Integration setup yet. They are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adhoc build processes&lt;/li&gt;
  &lt;li&gt;Too much time spent on manual testing&lt;/li&gt;
  &lt;li&gt;Integration of code happens only during deployment&lt;/li&gt;
  &lt;li&gt;Complexity of build and deployment increases, depending on the complexity of the app.&lt;/li&gt;
  &lt;li&gt;For clustered environments, the deployment needs to be updated to all slaves&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thats when we stumbled upon ”&lt;a href="http://www.informit.com/store/product.aspx?isbn=0321601912&amp;amp;WT.DCSext.w_ptgrevartcl=Continuous+Delivery%3a+Reliable+Software+Releases+through+Build%2c+Test%2c+and+Deployment+Automation_1641923_ISBNTopCover"&gt;Continuous Delivery&lt;/a&gt;” book by Jez Humble and Dave Farley and extended our Continuous Integration setup to Continuous Delivery.&lt;/p&gt;

&lt;h2 id="continuous-delivery-to-the-rescue"&gt;Continuous Delivery to the rescue&lt;/h2&gt;

&lt;p&gt;One of the key principle of Continuous Delivery is &lt;strong&gt;To create a repeatable and reliable process for releasing software.&lt;/strong&gt;. It solves problems by providing fast automated feedback on the &lt;strong&gt;production readiness&lt;/strong&gt; of the application - every time there is a change to the code, infrastructure or the configuration. So in Continuous Delivery, &lt;strong&gt;Done means Released.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A central pattern of Continuous Delivery is called the &lt;strong&gt;Deployment pipeline - &lt;/strong&gt;an automated implementation of the application’s build, deploy, test and release process. The following shows a sample deployment pipeline:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-cdimages/pipeline.png" alt="Deployment Pipeline" /&gt;&lt;/p&gt;

&lt;p&gt;The deployment pipeline includes the following build and deployment process:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creates executable code to verify that the syntax of the source code is valid.&lt;/li&gt;
  &lt;li&gt;Runs the unit tests to check that the code behaves as expected.&lt;/li&gt;
  &lt;li&gt;Runs the acceptance tests to check that the application conforms to its business acceptance criteria—that it delivers the business value that was intended.&lt;/li&gt;
  &lt;li&gt;Run nonfunctional tests which checks that the application performs sufficiently well in terms of capacity, availability, security, and so on to meet its users’ needs.&lt;/li&gt;
  &lt;li&gt;Runs tools which check that the expected code quality criteria such as test coverage and other technology-specific metrics are met.&lt;/li&gt;
  &lt;li&gt;Then in the manual testing environment, exploratory testing is done. In parallel a demonstration to the customer and a selection of users can also be done. This helps the product owner to decide whether there are missing features, or find bugs that require fixing.&lt;/li&gt;
  &lt;li&gt;If any of the above fails, the deployment should be stopped because it is a clear indication that the application is not production ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I will write about the Benefits of Continuous Delivery in the next post.&lt;/p&gt;

&lt;h2 id="references"&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://docs.google.com/a/multunus.com/present/edit?id=0AQj1177vtu0MZHRoM2dmN180NzRneGp2bXRndw"&gt;https://docs.google.com/a/multunus.com/present/edit?id=0AQj1177vtu0MZHRoM2dmN180NzRneGp2bXRndw&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.informit.com/articles/article.aspx?p=1829417"&gt;http://www.informit.com/articles/article.aspx?p=1829417&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://continousdelivery.com/"&gt;http://continousdelivery.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>A round up of our presentations and writings</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/02/a-round-up-of-our-presentations-and-writings/"/>
    <id>http://www.multunus.com/blog/2012/02/a-round-up-of-our-presentations-and-writings/</id>
    <published>2012-02-28T05:29:30+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2012/02/agile-india-2012.jpg" alt="agile india 2012" /&gt;
We started speaking at conferences last year. We’ve also been doing a fair bit of writing. This post rounds up what we’ve up to - along with links to our presentations and some of what we’ve written.&lt;/p&gt;

&lt;h2 id="presentations-in-chronological-order"&gt;Presentations [in Chronological Order]&lt;/h2&gt;

&lt;h3 id="devopsdays-2011"&gt;DevOpsDays 2011&lt;/h3&gt;
&lt;p&gt;Leena gave a lightning talk on “Push Button Deployment with Jenkins”. &lt;a href="http://sliwww.slideshare.net/leenasn/push-button-deployment-using-jenkins"&gt;Here’s the presentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="droidcon-india-2011"&gt;DroidCon India 2011&lt;/h3&gt;
&lt;p&gt;We gave two talks at this conference:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Leena and I co-presented on “Continuous Delivery for an Android application”. Here’s the &lt;a href="http://funnel.hasgeek.com/droidcon/83-continuous-delivery-for-an-android-application"&gt;original proposal&lt;/a&gt; and &lt;a href="http://prezi.com/56ueprf0mkql/continuous-delivery-on-android/"&gt;here’s the link to the prezi&lt;/a&gt;. Here’s a &lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=uNvjNIK1EEU"&gt;short video&lt;/a&gt; where Leena and I describe the talk.&lt;/li&gt;
  &lt;li&gt;Tamil and KP gave an intro to OpenGL on Android. Here’s the &lt;a href="http://funnel.hasgeek.com/droidcon/94-introduction-to-opengl-in-android"&gt;original proposal&lt;/a&gt; and here’s the &lt;a href="http://www.slideshare.net/tamillarasan/introduction-to-openglinandroid?from=ss_embed"&gt;link to the presentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="agile-india-2012"&gt;Agile India 2012&lt;/h3&gt;
&lt;p&gt;: Leena and I spoke there on “Continuous Delivery for a Song”. Here’s the link to the
&lt;a href="http://submit2012india.agilealliance.org/node/8894"&gt;original proposal&lt;/a&gt;. And here’s the
&lt;a href="https://docs.google.com/a/multunus.com/present/view?id=0AQj1177vtu0MZHRoM2dmN180NzRneGp2bXRndw"&gt;link to the presentation&lt;/a&gt;. It was a live demo - and by the comments we got from our audience, we think it went off fairly well.&lt;/p&gt;

&lt;h3 id="recent-writing"&gt;Recent Writing&lt;/h3&gt;
&lt;p&gt;An article I wrote for YourStory.in was published late last year. It was titled &lt;a href="http://yourstory.in/2011/12/a-sneak-peek-into-mobile-app-opportunities-in-2012/"&gt;Mobile App Opportunities in 2012&lt;/a&gt;”.&lt;/p&gt;

&lt;h3 id="blogging"&gt;Blogging&lt;/h3&gt;
&lt;p&gt;Leena has written a lot of articles on Continuous Delivery &lt;a href="http://www.multunus.com/blog/categories/continuous-delivery/"&gt;on this blog itself&lt;/a&gt;. And Akshay &lt;a href="http://akshayatmultunus.wordpress.com/"&gt;has been writing regularly&lt;/a&gt; since he joined us last year.&lt;/p&gt;

&lt;p&gt;I hope you found this round up useful. I expect the Agile India organizers to upload videos of the all the talks soon. Once that happens, I’ll update this post with the link to the video of our talk there.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A sneak peek into Mobile App Opportunities in 2012</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2012/01/a-sneak-peek-into-mobile-app-opportunities-in-2012/"/>
    <id>http://www.multunus.com/blog/2012/01/a-sneak-peek-into-mobile-app-opportunities-in-2012/</id>
    <published>2012-01-27T22:15:13+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2012/01/mobile.png" alt="mobile" /&gt;&lt;/p&gt;

&lt;p&gt;This article was originally written by me for &lt;a href="http://yourstory.in/2011/12/a-sneak-peek-into-mobile-app-opportunities-in-2012/"&gt;yourstory.in&lt;/a&gt;. But this version is more “complete” with all of the original links in place.&lt;/p&gt;

&lt;p&gt;This was originally supposed to be a post on predictions. But as the founder of a mobile app development company myself, my focus is more on specific opportunities that exist for a boutique company such as ourselves in this space.&lt;/p&gt;

&lt;p&gt;We all know that almost no opportunity is exactly what it seems like, but it pays to have good starting points of exploration. And that is what I hope you will leave with, after reading this article.&lt;/p&gt;

&lt;h2 id="first-lets-look-at-somefacts"&gt;First let’s look at some facts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;About 40 per cent of Internet users in India 
&lt;a href="http://www.medianama.com/2011/03/223-google-india-has-100m-internet-40m-mobile-internet-users-india-search-trends/"&gt;access it on their mobile phones&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://googlemobileads.blogspot.com/2011/06/mobile-ize-your-business-with-google.html"&gt;61% users are unlikely&lt;/a&gt; to return to a site that they found were not mobile optimized. What’s worse, 40% of them are likely to go to a competitor’s website.&lt;/li&gt;
  &lt;li&gt;The middle class in the BRIC (Brazil, Russia, India and China) countries together have the  
&lt;a href="http://blog.flurry.com/bid/79595/Kaboom-iOS-and-Android-International-Installed-Base-Expansion"&gt;largest untapped populations&lt;/a&gt; that can now afford a smart phone but are yet to get one.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="now-take-a-look-at-some-majortrends"&gt;Now take a look at some major trends&lt;/h2&gt;

&lt;h3 id="more-platforms"&gt;More Platforms&lt;/h3&gt;
&lt;p&gt;We have Apple to thank - for creating the app economy with the iOS platform, Google for democratizing the smart phone with Android and
&lt;a href="http://www.engadget.com/2011/12/28/windows-phone-marketplace-hits-50-000-app-submission-milestone/"&gt;now Microsoft&lt;/a&gt; for making the life of the “I support all platforms” developer more difficult with Windows Phone 7. If you still want to include Blackberry, despite all of the
&lt;a href="http://www.theaustralian.com.au/business/wall-street-journal/pressure-mounts-on-blackberrys-rim/story-fnay3ubk-1226223581617"&gt;recent gloom&lt;/a&gt;, then that would make it 4 platforms that you’d at least want to consider.&lt;/p&gt;

&lt;p&gt;There are now more a million active apps now available across the major app stores. Apple’s app store and the Android Market currently lead by a large margin. However 2012 will probably bring in at least one more serious contender in the Windows Phone 7 marketplace - it has grown by more than 400% this year alone.&lt;/p&gt;

&lt;p&gt;The following chart shows the distribution of apps across various marketplaces as of Nov 2011 [Sources: 
&lt;a href="http://www.distimo.com/2011_12_distimo-releases-full-year-2011-publication/"&gt;Distimo&lt;/a&gt;, 
&lt;a href="http://www.pcmag.com/article2/0,2817,2395188,00.asp"&gt;PCMag&lt;/a&gt;]&lt;/p&gt;

&lt;h3 id="mobile-optimization-services"&gt;Mobile Optimization Services&lt;/h3&gt;
&lt;p&gt;There are now multiple services available that make it easy for small business owners to “mobili”-ze their websites. Here are 3 such services:
&lt;strong&gt;&lt;img src="http://yourstory.in/wp-content/uploads/2011/12/Mobile-Optimization-Services.jpg" alt="Mobile-Optimization-Services.jpg (419×52)" /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="html5-mobile"&gt;HTML5 Mobile&lt;/h3&gt;
&lt;p&gt;The browsers from&lt;a href="http://www.infoworld.com/d/html5/ios-5s-safari-beats-all-mobile-browsers-in-html5-compatibility-175371"&gt;every&lt;/a&gt; &lt;a href="http://www.winrumors.com/microsoft-benchmarks-windows-phone-browser-against-iphone-4-and-android-wins/"&gt;big&lt;/a&gt; &lt;a href="http://www.sencha.com/blog/galaxy-nexus-the-html5-developer-scorecard/"&gt;player&lt;/a&gt; are getting more powerful. The open source tools are&lt;a href="http://html5boilerplate.com/mobile"&gt;getting&lt;/a&gt; &lt;a href="http://www.sencha.com/products/touch/"&gt;better&lt;/a&gt; and&lt;a href="http://jquerymobile.com/"&gt;better&lt;/a&gt;. And with the Flash war finally having  ended, Adobe is finally &lt;a href="http://mashable.com/2011/11/11/flash-mobile-dead-adobe/"&gt;getting on board&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src="https://lh5.googleusercontent.com/hTW2K0tBVW0aRKezNkI3jOkMcPjIiiqBUUA_GjEsz4RzJasJRNwjeXPnT8u7527IV09hk9RfPuOqfAOr8ipPixskPjUwQohmM8F_trXh_kZOf_WCXBY" alt="" /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;*Cross Platform Tools: &lt;/strong&gt;
These tools make it possible for the app developer to write-once-and-run-on-multiple-platforms. Or at least they try to make that possible.
&lt;a href="http://www.adobe.com/aboutadobe/pressroom/pressreleases/201110/AdobeAcquiresNitobi.html"&gt;Multiple&lt;/a&gt; 
&lt;a href="http://rhomobile.com/blog/motorola-acquires-rhomobile-and-rhoelements-version-1-launched/"&gt;acquisitions&lt;/a&gt; and fairly large
&lt;a href="http://techcrunch.com/2011/11/01/appcelerator-raises-15-million-series-c-round/"&gt;VC investments&lt;/a&gt; have happened in this space.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src="https://lh5.googleusercontent.com/i-qWEO80aZSQqdT1KscQlyi52RZqLFwpuflccTQRXAqlQAI0nx661xJxcBzZWjLDrE31PfmF9Odt2pfz5YgFwN65nfbbgqkrh_wazy-LfzWsBeG8-DM" alt="" /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="hyper-local-mobile"&gt;Hyper-Local-Mobile &lt;/h3&gt;
&lt;p&gt;The early movers in this space are &lt;a href="http://searchenginewatch.com/article/2081107/Foursquare-Hits-10-Million-Users-Yeah-Thats-1000-Annual-Growth"&gt;continuing to grow&lt;/a&gt; or have been &lt;a href="http://www.guardian.co.uk/technology/2011/dec/05/facebook-buys-gowalla-location-sharing"&gt;acquired&lt;/a&gt;. But the &lt;a href="http://socialcommercetoday.com/social-commerce-platform-overview-shopkick-mobile-commerce-on-steroids/"&gt;new players&lt;/a&gt; are doing well as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;img src="https://lh6.googleusercontent.com/-b4IZffxNy08thOITpu51-QB3Da2GhopjubrfZ7DYzHrUwFEQboJNVCfgZl2OHeEUvVsZA2_ClNVEK7Q8aJJlJTeYr4EUDzntcuaWTBVNZHPTfgYcjw" alt="" /&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id="cross-device-testing-as-a-service"&gt;Cross Device Testing as a Service&lt;/h3&gt;
&lt;p&gt;With more than 300 Android handsets now available from various manufacturers, it is next to impossible to manually test an application across all these devices. There are now &lt;a href="http://testdroid.com/"&gt;multiple&lt;/a&gt; [services](http://www.perfectomobile.com/portal/cms/android.html on the cloud that aim to solve this problem for you by automatically testing your Android applications across a wide array of devices.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://yourstory.in/wp-content/uploads/2011/12/Mobile-Cross-Device-Testing-as-a-Service.jpg" alt="Mobile-Cross-Device-Testing-as-a-Service.jpg (327×90)" /&gt;&lt;/p&gt;

&lt;h2 id="keeping-the-above-in-mind-here-are-a-fewopportunitiesfor-2012"&gt;Keeping the above in mind, here are a few opportunities for 2012&lt;/h2&gt;

&lt;h3 id="hybrid-cross-platform-apps"&gt;“Hybrid” Cross Platform Apps&lt;/h3&gt;
&lt;p&gt;The cross platform tools I’ve referred to above, allow for native platform API [Application Programming Interface] calls as well. These are useful when you have an application that has a combination of native components and other “content” components which most likely consume web services [and can be built with HTML5 and CSS3].&lt;/p&gt;

&lt;p&gt;An example of such an application is the 
&lt;a href="http://bits.blogs.nytimes.com/2011/04/01/the-onion-releases-free-html5-ipad-app/"&gt;Onion iPad&lt;/a&gt; app. The application is written in HTML5 for the most part - but uses falls back on native API to play video. This is probably because of 
&lt;a href="http://blog.millermedeiros.com/2011/03/html5-video-issues-on-the-ipad-and-how-to-solve-them/"&gt;some of the issues&lt;/a&gt; related to HTML5 video tag support on iOS. The Onion plans to roll out the app quickly on the Android platform as well - and 
&lt;a href="http://sndstl.com/wp-content/uploads/2011/09/snd-app.pdf"&gt;with mostly the same code&lt;/a&gt; [pdf].&lt;/p&gt;

&lt;p&gt;Main Challenges:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cross Platform Tools are not mature yet:&lt;/strong&gt; - The API documentation is sparse, support is patchy and the community is still nascent. So which platform should you bet on? Unfortunately, the answer is, “it depends” - on multiple factors such as whether you need a native look and feel (which Appcelerator and Rhodes provide - but PhoneGap does not), the number of platforms you need to support, the technical skills of your dev team etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The Mobile Web is Slow(er):&lt;/strong&gt; - Performance optimization is key if you want your site to look pretty and be snappy on mobile devices. There are &lt;a href="http://www.google.co.in/search?q=html5+performance+mobile"&gt;many good resources&lt;/a&gt; available to get you started in the right direction.
 
### Low Cost Solutions for Mobile Optimization
While purely content based sites can choose to rely on the Mobile Optimization Services I’ve mentioned above, there are a lot of other verticals that don’t have such an option - yet. For example, there are a lot of E-Commerce sites out there that are not mobile optimized. Especially those being run by small business owners or startups.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Main Challenges:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The data has to kept in sync with the original systems - in a seamless fashion&lt;/li&gt;
  &lt;li&gt;Mobile payment gateways are still far from mature - 
&lt;a href="http://www.venturewoods.org/index.php/2011/01/19/mobile-payments-shifting-opportunities-for-startups/"&gt;especially in a country like India&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Oh, and the Mobile Web is Slow - but I said that already.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="mobile-presence-for-non-internet-savvy-retailers"&gt;Mobile presence for non-Internet-Savvy retailers&lt;/h3&gt;
&lt;p&gt;I’m going on a limb here - but most small retailers in India don’t have an Internet presence - and what that means is, a certain  high quality trouser shop with very reasonable price tags - is now invisible on your phone.&lt;/p&gt;

&lt;p&gt;Main Challenge:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;With even companies like Google
&lt;a href="http://articles.timesofindia.indiatimes.com/2011-06-20/internet/29679379_1_google-street-view-google-s-street-view-privacy-concerns"&gt;facing stiff resistance&lt;/a&gt; while trying to map our streets, you’re left with the only other option - User Generated Content. And that in turn means, the classic chicken and egg conundrum.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="cross-platform-testing-as-service"&gt;Cross Platform Testing as Service&lt;/h3&gt;
&lt;p&gt;While there are cloud testing services now available for specific platforms, services that take care of automated cross-platform testing are still not available.&lt;/p&gt;

&lt;p&gt;Main Challenge:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You’ve got SDK installations, developer &amp;amp; signing certificates, build chains, and custom project layouts to worry about with each platform. &lt;a href="http://savagelook.com/blog/portfolio/8-things-to-know-about-phonegap"&gt;PhoneGap solves this problem&lt;/a&gt; for you from a deployment perspective, but running automated tests on multiple platforms is a different challenge.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list of opportunities is admittedly short. But I hope you are now motivated to brainstorm more ideas, distill the most interesting opportunities and finally implement a winner in 2012. Happy New Year!&lt;/p&gt;

&lt;p&gt;So what are you waiting for? Start exploring :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our talks at Droidcon 2011, Bangalore</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/12/our-talks-at-droidcon-2011-bangalore/"/>
    <id>http://www.multunus.com/blog/2011/12/our-talks-at-droidcon-2011-bangalore/</id>
    <published>2011-12-02T21:07:00+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2011/12/vaidy-leena.png" alt="vaidy-leena" /&gt;&lt;/p&gt;

&lt;p&gt;We spoke at Droidcon, Bangalore that happened on Nov 18th and 19th. We had two interesting talks on both days.&lt;/p&gt;

&lt;h3 id="continuous-delivery-for-an-android-applicationhttpfunnelhasgeekcomdroidcon83-continuous-delivery-for-an-android-application"&gt;&lt;a href="http://funnel.hasgeek.com/droidcon/83-continuous-delivery-for-an-android-application"&gt;Continuous Delivery for an Android application&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This talk was on First day of the Droidcon conference given by Vaidy and Leena. In this talk, we spoke on what the first step towards moving to a CD setup is. Specifically demonstrated setting up a Push Button deployment system using Ant and Jenkins. &lt;a href="http://funnel.hasgeek.com/droidcon/83-continuous-delivery-for-an-android-application"&gt;More details here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id="introduction-to-opengl-in-androidhttpfunnelhasgeekcomdroidcon94-introduction-to-opengl-in-android"&gt;&lt;a href="http://funnel.hasgeek.com/droidcon/94-introduction-to-opengl-in-android"&gt;Introduction to OpenGL in Android&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src="http://multunus.herokuapp.com/images/tamil-and-kp.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;This talk was on Second day of the Droidcon given by Tamil KP. The objective of talk was to have people get started with OpenGL programming which can seem to be a little heavy but it need not be. The talk started with a brief introduction to OpenGL and then had quick step-by-step tutorial demonstration. &lt;a href="http://funnel.hasgeek.com/droidcon/94-introduction-to-opengl-in-android"&gt;More details here&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery: Building Android Library project</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/11/continuous-delivery-building-android-library-project/"/>
    <id>http://www.multunus.com/blog/2011/11/continuous-delivery-building-android-library-project/</id>
    <published>2011-11-04T20:25:20+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This post talks about how to build an Android Project using ant which depends on an Android Library project.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add default.properties in the library project and add android.library=truein the same.&lt;/li&gt;
  &lt;li&gt;Run the command in the main Android Project &lt;code&gt;android update project –path . –library ../path-to-the-library/&lt;/code&gt; &lt;strong&gt;Note: This always has to be relative path.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Now running ant release should build the library project too.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The android command mentioned in the second step adds an entry in the default.properties file. If you need to override that in different environments, override that in thelocal.properties. Even there, it has to be relative path, the absolute path will not work.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Lessons from interview with Joel Spolsky</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/10/lessons-from-interview-with-joel-spolsky/"/>
    <id>http://www.multunus.com/blog/2011/10/lessons-from-interview-with-joel-spolsky/</id>
    <published>2011-10-17T06:00:36+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;A couple of days back I watched an interview with Joel Splosky on &lt;a href="http://mixergy.com/trello-joel-spolsky-interview/"&gt;Mixergy.com&lt;/a&gt;. &lt;a href="http://www.joelonsoftware.com/AboutMe.html"&gt;Joel Spolsky&lt;/a&gt; recently launched a new product “Trello”, an online collaboration tool. In this interview he explains a few strategies/tips that went into building and launching a new product based on his experience.&lt;/p&gt;

&lt;p&gt;Here are a few takeaways which I think are worth summarizing:&lt;/p&gt;

&lt;h2 id="delivering-continuously"&gt;Delivering Continuously&lt;/h2&gt;
&lt;p&gt;Trello follows a process of continually delivering the product in small, tiny pieces. So instead of big releases that happen every month or so, the product is instead shipped everyday [maybe even multiple times each day]. To achieve this, the pipeline of work starting from the designer to  developer to tester and finally to the customer is always “in motion”.&lt;/p&gt;

&lt;h2 id="pivoting-endlessly-in-the-early-stages"&gt;Pivoting endlessly in the early stages&lt;/h2&gt;
&lt;p&gt;You build something quickly for the first version. Then you try getting real users’ feedback. You can fail early here and this will force you to change direction multiple times while building the product. This is what is called 
Pivoting. By pivoting you’ll eventually take the right direction and get to product-market fit. At this point the product is actually creating great value to your users by giving them what they wanted.&lt;/p&gt;

&lt;h2 id="knowing-your-marketplace"&gt;Knowing your marketplace&lt;/h2&gt;
&lt;p&gt;One of the reasons that most products fail is that they do not fit into the marketplace. They are simply built because it was imagined to be useful and what the customers might actually want would be something very different from your product. Joel says, a product must be created by keeping the “need” in mind. If your product solves a customer’s problem, then you know your marketplace.&lt;/p&gt;

&lt;h2 id="getting-early-feedback-from-the-users"&gt;Getting early feedback from the users&lt;/h2&gt;
&lt;p&gt;One of the best things one could do is getting to use the product internally i.e., within a closed circuit of users in the very early stages of the product. By watching them use the product and getting to know what they think, would be a great way to improve and polish your product.&lt;/p&gt;

&lt;h2 id="launching-your-product-for-free"&gt;Launching your product for free&lt;/h2&gt;
&lt;p&gt;The classic mistake that we often commit while launching a product is that we charge the users from day one. This will actually drive away your customers from using your product.&lt;/p&gt;

&lt;p&gt;Users are not ready to pay for a product if they find that have to pay something for just trying it out even if it is dirt cheap. So it is more important to get the attention of a customer towards your product. And, once the customers find that your product is highly useful, advertising your product becomes easier.&lt;/p&gt;

&lt;p&gt;Joel points out a few reasons for giving away his product for free:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Giving away for free is itself a form of advertising your product.&lt;/li&gt;
  &lt;li&gt;Getting the audience/users to use your product is the most important thing and this can be achieved only by this form of advertising.&lt;/li&gt;
  &lt;li&gt;Later when you make it paid, you’ll still have users who are getting real value out of your product.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You also make it less sweet for others to compete with you and helps you get a longer runway. This particular point was not said by Joel in the interview, but something I saw in the comments. And I think it made enough sense to include here.&lt;/p&gt;

&lt;h2 id="tried-and-tested-by-others"&gt;Tried and Tested By Others&lt;/h2&gt;
&lt;p&gt;Some of the above techniques have been used by others like the team which created 
Pivotal Tracker, an application with some similarity to Trello - but more specific to Agile Software Project Management..&lt;/p&gt;

&lt;p&gt;One of them is what Joel asks every team, that is, to “use your product internally”. The team that built Pivotal Tracker used it within their team members in the early stages of the product. They improved the product based on the early feedback from the users.&lt;/p&gt;

&lt;p&gt;Also, Pivotal Tracker was launched for free initially and later the pricing was included for their product.&lt;/p&gt;

&lt;p&gt;Learning and following what great teams have done is a good way to reduce risk of failure and increase odds of getting it right the first time. Or at least the second :)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Simple Image Filter using OpenGL ES in Android</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/10/simple-image-filter-using-opengl-es-in-android/"/>
    <id>http://www.multunus.com/blog/2011/10/simple-image-filter-using-opengl-es-in-android/</id>
    <published>2011-10-07T21:05:45+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/Opengl.png" alt="Opengl" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: This post assumes some basic knowledge in setting up an OpenGL app in Android. A basic example for rendering a texture on to a surface can be found&lt;/p&gt;

&lt;p&gt;OpenGL is widely adopted as the graphics API of choice for real-time interactive 3D graphics applications. OpenGL is easy to understand, but its simplicity and orthogonality enable many interesting possibilities. One such possibility is image processing.&lt;/p&gt;

&lt;p&gt;Using “OpenGL” for Image Processing enables us to completely utilize the power of Graphics Processing Unit (GPU) hence the image processing will be faster also it reduces the load on CPU. This can be crucial for Image processing applications, especially in mobile environment where the resources available are relatively lesser.&lt;/p&gt;

&lt;p&gt;In this post we will be discussing how to use OpenGL Shader Language to manipulate pixels and create Image filter effects.&lt;/p&gt;

&lt;p&gt;As with any OpenGL app, we will start with setting up the view.&lt;/p&gt;

&lt;p&gt;The next step is to load an image into the texture, This texture can be mapped on to the surface of a square, which will then be drawn on to the screen.For Image processing, we will require only 2 dimensions so we will set up the view in orthographic projection and will also discard z axis by keeping it to 0.0 most of the times.&lt;/p&gt;

&lt;p&gt;But before drawing to the screen, there are many intermediate operations that are done by the graphics hardware, which are now directly programmable in OpenGL ES 2.0 using Shader Language (GLSL). We will be concentrating on Vertex and Fragment processing phases in OpenGL pipeline. We will go through a simple fragment shader program and will explain how it works. Both of these programs are written in GLSL. GLSL is a ‘C’ like language which gives direct control over the  graphics pipeline without having to use assembly language or hardware-specific languages.&lt;/p&gt;

&lt;h2 id="vertex-shader"&gt;Vertex shader&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;uniform mat4 uMVPMatrix;
attribute vec4 aPosition;
attribute vec2 aTextureCoord;
varying vec2 vTextureCoord;
void main() {
  gl_Position = uMVPMatrix *  aPosition
  vTextureCoord = aTextureCoord
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Vertex shader is executed for each vertex that is to be drawn. Here, we are drawing a square and mapping the texture on to that.&lt;/p&gt;

&lt;p&gt;This calculates the transformed coordinates of the square by multiplying the given coordinates with &lt;a href="http://en.wikibooks.org/wiki/OpenGL_Programming/3D/Matrices"&gt;MVPMatrix&lt;/a&gt; [ MVP -  Model *  View *  Projection ]. Other than this we are also storing corresponding texture co-ordinates in variable ’ vTextureCoords’ so that it is available in the fragment shader.&lt;/p&gt;

&lt;h2 id="fragment-shader"&gt;Fragment Shader&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;precision mediump float;
varying vec2 vTextureCoord;
uniform sampler2D sTexture;
void main() {
   vec2 cen = vec2(0.5,0.5) - vTextureCoord.xy;
   vec2 mcen = -0.07* log(length(cen))* normalize(cen);
   gl_FragColor = texture2D(sTexture, vTextureCoord.xy-mcen);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fragment shaders are executed to calculate the color of individual pixels. This is where the actual image transformation happens. Instead of mapping the corresponding texture coordinates to corresponding pixels, we can map different coordinates of the texture to different pixels which will distort the image in some way. In the above example the texture co-ordinate to fill each pixel is chosen based on the calculation in line no 6. The actual movement depends on the distance of the texture coordinate from the center. This creates an effect which is similar to what is shown in the below picture.&lt;/p&gt;

&lt;p&gt;Although this is a very simple effect, the intention here is to just show potential applications of OpenGL in Android apps.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery for Android Apps – Part 2</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/10/continuous-delivery-for-android-apps-part-2/"/>
    <id>http://www.multunus.com/blog/2011/10/continuous-delivery-for-android-apps-part-2/</id>
    <published>2011-10-06T12:21:57+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;This post talks about how to run tests for the build setup as mentioned in &lt;a href="http://www.multunus.com/2011/09/continuous-delivery-for-android-apps-part-1/"&gt;Part 1&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id="generate-the-build-script-for-test"&gt;Generate the build script for test&lt;/h2&gt;
&lt;p&gt;The suggested practice is to have 2 separate projects for android, one the source and the other for the tests. The following command will generate a build.xml for the test project. Replace the with the path of the source path.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
android update test-project -m ../&amp;lt;project-path&amp;gt; -p .
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;One problem I’ve seen is that, it does not break the build even if there are failures in the test. Issue is reported here: &lt;a href="http://code.google.com/p/android/issues/detail?id=14241"&gt;http://code.google.com/p/android/issues/detail?id=14241&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had to override the run-tests target as mentioned below to fix this issue:&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;target name="run-tests" depends="-install-tested-project, install" description="Runs tests from the package defined in test.package property"&gt;
    &lt;echo&gt;Running tests ...&lt;/echo&gt;
    &lt;exec executable="${adb}" failonerror="true" outputproperty="tests.output"&gt;
&lt;arg value="shell" /&gt;
&lt;arg value="am" /&gt;
&lt;arg value="instrument" /&gt;
&lt;arg value="-w" /&gt;
&lt;arg value="-e" /&gt;
&lt;arg value="coverage" /&gt;
&lt;arg value="@{emma.enabled}" /&gt;
&lt;arg value="${manifest.package}/${test.runner}" /&gt;
    &lt;/exec&gt;
    &lt;echo message="${tests.output}" /&gt;
    &lt;fail message="Tests failed!!!"&gt;
&lt;condition&gt;
    &lt;or&gt;
    &lt;contains string="${tests.output}" substring="Error" /&gt;
    &lt;contains string="${tests.output}" substring="Fail" /&gt;
    &lt;/or&gt;
&lt;/condition&gt;
     &lt;/fail&gt;
&lt;/target&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;You can change the ant commands to clean run-tests release in Jenkins to run the tests as part of packaging.&lt;/p&gt;

&lt;p&gt;Next I will be writing about how to start emulator from Jenkins while running the tests.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Confident Estimates</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/09/confident-estimates/"/>
    <id>http://www.multunus.com/blog/2011/09/confident-estimates/</id>
    <published>2011-09-29T14:28:51+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We constantly try to provide accurate estimates that we can defend with confidence. But there are situations where we end up making mistakes. And this post describes one such situation.&lt;/p&gt;

&lt;p&gt;One of our clients asked us to estimate a feature. As usual, we sent back an estimate without much delay.&lt;/p&gt;

&lt;p&gt;After few days, our client asked us to implement this feature. When we started to think about implementing the feature we found that it would take at least double the time that we’d earlier estimated. We’d put ourselves in a bad situation. It would of course be very hard to convince the client as to why there was this much deviation - considering we discovered this even before actually starting to implement the feature. We did the 5 why’s to get to the root of the problem.&lt;/p&gt;

&lt;p&gt;We discovered the following reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We hadn’t gone through the usual process of breaking down the feature to the desired level of granularity. Digging deeper, the following root causes emerged:
    &lt;ul&gt;
      &lt;li&gt;The project had been on ‘pause’ mode for a couple of weeks and we had gotten busy with other things in the meanwhile.&lt;/li&gt;
      &lt;li&gt;The value of the feature [to the end user] was not completely obvious to us.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The solution? We’ve decided to ask ourselves the following question before sending across an estimate to any client in the future:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Is this a &lt;strong&gt;confident estimate&lt;/strong&gt; ? Can we defend the estimate with proper reasoning?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above will force us to think again about the estimate and help us become more consistent.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oh, and one more thing&lt;/strong&gt;. Ask the stakeholder as to what value the feature is going to add - if it is not obvious. Don’t assume that you’re right!&lt;/p&gt;

&lt;p&gt;If you’re curious on what the client’s reaction was, when we sent across the revised [and much larger] estimate. We’d love to hear from you!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery for Android Apps - Part 1</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/09/continuous-delivery-for-android-apps-part-1/"/>
    <id>http://www.multunus.com/blog/2011/09/continuous-delivery-for-android-apps-part-1/</id>
    <published>2011-09-23T16:45:50+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We’ve set up our CI server for building android apps. We use Jenkins as our CI server, but the same steps can be applied to any CI server.&lt;/p&gt;

&lt;h2 id="setup-android-environment-on-ci-server"&gt;Setup Android Environment on CI server&lt;/h2&gt;
&lt;p&gt;You need to first install the android SDK and platform tools on the CI server. The steps are well defined 
&lt;a href="http://developer.android.com/sdk/installing.html"&gt;here&lt;/a&gt;. You can run the command &lt;code&gt;android update sdk --no-ui&lt;/code&gt; if the CI server is in an headless environment.&lt;/p&gt;

&lt;h2 id="generate-build-script"&gt;Generate Build script&lt;/h2&gt;
&lt;p&gt;Using android SDK tool , you can generate build script for the android project which contains the standard steps for building the app such as clean, compile, release, install etc. The following command will generate the build script, replace &lt;appname&gt;, &lt;target&gt; and &lt;project path=""&gt; accordingly.&lt;/project&gt;&lt;/target&gt;&lt;/appname&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
android update project -n &amp;lt;appname&amp;gt; -t &amp;lt;target&amp;gt; -p &amp;lt;project directory&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will create build.xml file under the project directory. You need to create build.properties file with the following contents:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
key.store=path-to-keystore
key.alias=[alias]
key.store.password=[pw]
key.alias.password=[pw2]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can generate the key file using keytoool or you can generate the key file from eclipse. Run the command  ant clean release, which will compile the files, and generate the apk files (it generates signed, unsigned and unaligned files). The signed version can be used for uploading to Android Market or for installing directly on any device. Couple of stuff to be noted here are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ant version has to be 1.8.0 or higher.&lt;/li&gt;
  &lt;li&gt;Put the external libraries in the libs directory. Build script automatically picks up the libraries put under libs directory, otherwise the script need to be changed to look at a different classpath.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Checkin the build.xml, build.properties and the key file into the repository.&lt;/p&gt;

&lt;h2 id="setup-the-ci-server"&gt;Setup the CI server&lt;/h2&gt;
&lt;p&gt;The CI server has to run the ant script for building the app. One more setting what we’ve done in our Jenkins server was to archive the apks as artifacts (available in the post build action). In upcoming posts, I will cover how to do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Running android tests&lt;/li&gt;
  &lt;li&gt;Running code/test coverage tools&lt;/li&gt;
  &lt;li&gt;Actual deployment&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;References: &lt;a href="http://skaug.no/ingvald/2011/09/android-app-with-jenkins/"&gt;http://skaug.no/ingvald/2011/09/android-app-with-jenkins/&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Setup Test Load Balancer using Jenkins</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/09/setup-test-load-balancer-using-jenkins/"/>
    <id>http://www.multunus.com/blog/2011/09/setup-test-load-balancer-using-jenkins/</id>
    <published>2011-09-23T15:10:07+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;The main purpose of a test suite is to give fast feedback about the changes being made to the developer. Ideally the test suite should be really fast and should take no more than 10 mins to complete. But there are times when you end up with a test suit that takes 30 - 40 mins to complete. This can be really frustrating for the developers because they have to wait for 40 mins after checking in his changes to know if he broke something.&lt;/p&gt;

&lt;p&gt;For this problem there are two possible solutions. Take some time from your project schedule to rewrite some part of your test suite. Although this is the ideal solution to the problem, this might not always be an option for you because of delivery deadlines. The other alternative is to throw more hardware at the problem and this is where &lt;a href="http://test-load-balancer.github.com/"&gt;TLB&lt;/a&gt;comes in to picture.&lt;/p&gt;

&lt;p&gt;One approach to solving the problem is to partition your spec suite in to different sets and then run them paralley in different machines. The problem with this approach is that it will take a lot of trial and error before you end up with partitions that takes almost equal time to finish. Also mainting these partition as you add more tests become a head ache. This is the exact problem the &lt;a href="http://test-load-balancer.github.com/"&gt;TLB&lt;/a&gt; fixes.&lt;/p&gt;

&lt;p&gt;A detailed description of how to setup the test load balancer is available &lt;a href="http://test-load-balancer.github.com/doc-0_3_2/getting_started_with_tlb.html"&gt;here&lt;/a&gt;. It should give you a very good idea about how TLB works and also about how do add load balancing to your build.&lt;/p&gt;

&lt;p&gt;We are using jenkins as our CI server, so we will be concentrating on how to setup TLB on Jenkins. I am assuming that you already have the job [ to which you want to add load balancing ] configured in Jenkins.&lt;/p&gt;

&lt;p&gt;The TLB setup has two main two components:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;TLB server&lt;/li&gt;
  &lt;li&gt;Balancer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="setup-tlb-server"&gt;Setup TLB server&lt;/h3&gt;
&lt;p&gt;Download the TLB server and install it on your CI server host [ again for detailed instruction &lt;a href="http://test-load-balancer.github.com/doc-0_3_2/getting_started_with_tlb.html"&gt;look here&lt;/a&gt; ]. Optionally add a service startup script so that the TLB server starts up each time you restart the server.&lt;/p&gt;

&lt;h3 id="add-balancing-to-your-build"&gt;Add balancing to your build&lt;/h3&gt;
&lt;p&gt;For Rspec TLB distribution comes with a ruby gem you can install this. Also the balancer requires a hook in to you build invocation process this too is available as a rake task in TLB docs, add this to your project.&lt;/p&gt;

&lt;h3 id="create-job-partitions"&gt;Create Job Partitions&lt;/h3&gt;
&lt;p&gt;The setup for the jobs which run in different partitions are exactly same, only difference between the partitions are only the subset of test executed in each partition.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rebuilding in Jenkins</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/09/rebuilding-in-jenkins/"/>
    <id>http://www.multunus.com/blog/2011/09/rebuilding-in-jenkins/</id>
    <published>2011-09-22T20:02:49+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One option that might be required after setting up a &lt;a href="http://www.multunus.com/2011/07/continuous-delivery-using-jenkins-build-pipeline/"&gt;build pipeline&lt;/a&gt; is the provision to redeploy an earlier version by click of a button. This can become handy when we find a bug in the production and want to see when the bug got introduced. For that we will have to redeploy the earlier version to the staging/UAT environment and test the same. Jenkins by default does not allow to rerun any of the earlier jobs. But you can achieve this by the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Rebuild+Plugin"&gt;Rebuild&lt;/a&gt; plugin. It allows you to rebuild any job provided its parameterized build. It also allows you override the parameters. It will show the “Rebuild” button at the left side as shown below when you go to specific build page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2014/01/rebuild.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/rebuild.png" alt="rebuild" /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is not a replacement for revert build, because it does not take care of reverting DB. But this can be extended to do the same. Note: It will show the Rebuild button only for those builds which occurred after installing the plugin. I took some time to realize this and it is not very clear in the documentation.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery - Part 4: Rolling back database migrations with Capistrano rollback</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/08/continuous-delivery-part-4-rolling-back-database-migrations-with-capistrano-rollback/"/>
    <id>http://www.multunus.com/blog/2011/08/continuous-delivery-part-4-rolling-back-database-migrations-with-capistrano-rollback/</id>
    <published>2011-08-14T13:52:40+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;According to the book &lt;a href="http://www.amazon.com/gp/product/0321601912?tag=contindelive-20"&gt;Continuous Delivery&lt;/a&gt;, the database also should be under version control, and Rails allows us to achieve this with ActiveRecord Migrations. Even though &lt;a href="http://www.capify.org/"&gt;Capistrano&lt;/a&gt;  can run the migrations automatically with its &lt;code&gt;deploy&lt;/code&gt; command, its &lt;code&gt;deploy:rollback&lt;/code&gt; task does not rollback the DB migrations automatically. I’ve created a small capistrano &lt;a href="https://github.com/multunus/capistrano-db-rollback"&gt;recipe&lt;/a&gt; which can take care of rolling back migrations. The assumptions made are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All the migrations have the down method defined properly. You can check for this by running &lt;code&gt;rake db:migrate:redo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;The schema.rb exists in the repository. This is one of the &lt;a href="http://guides.rubyonrails.org/migrations.html#schema-dumps-and-source-control"&gt;suggested practices&lt;/a&gt; for Rails.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The script is very simple, it extracts the version from the &lt;code&gt;schema.rb&lt;/code&gt; and runs the &lt;code&gt;rake db:migrate&lt;/code&gt; with the same version. The task gets run automatically along with &lt;code&gt;deploy:rollback&lt;/code&gt;. This approach should work for most small and medium complexity Rails apps.&lt;/p&gt;

&lt;p&gt;Continued..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-using-jenkins-build-pipeline/"&gt;Continuous Delivery – Part 1: Our Jenkins Build Pipeline setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-code-metrics-with-metrical/"&gt;Continuous Delivery – Part 2: Code metrics with metrical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-contd/"&gt;Continuous Delivery – Part 3: Running custom rake tasks during deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery - Part 3: Running custom rake tasks during deployment</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/continuous-delivery-part-3-running-custom-rake-tasks-during-deployment/"/>
    <id>http://www.multunus.com/blog/2011/07/continuous-delivery-part-3-running-custom-rake-tasks-during-deployment/</id>
    <published>2011-07-31T21:20:54+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One problem we faced with the pipeline setup what I had mentioned in my &lt;a href="http://www.multunus.com/2011/07/continuous-delivery-using-jenkins-build-pipeline/"&gt;first post&lt;/a&gt; was that - it was not handling how to run the extra tasks that we need to do in some of the deployments. Some examples are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reindex the solr/lucene indexes if any new field has been added to the index&lt;/li&gt;
  &lt;li&gt;Some custom rake tasks , say for eg: task to update values in the DB, which you don’t want to add to migrations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We do have Cap tasks for running the required rake tasks, but again it was done manually. So we’ve to remember to run them after deploying to production.  And also there is no way to track what steps were followed for a certain deployment.&lt;/p&gt;

&lt;p&gt;I used the build parameter again for fixing the above issue i.e. after accepting the extra tasks as parameter for the build for the first job, they will be passed on to the downstream jobs. In this way the same deployment steps will be automatically followed for rest of the jobs in the pipeline.&lt;/p&gt;

&lt;p&gt;The only difference in this case is that - sometimes the parameter can be empty. This check has to be done in the scripts i.e. if the value exists for the parameter, execute the extra tasks along with the normal deployment else just do a normal deployment.&lt;/p&gt;

&lt;p&gt;Continued..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-using-jenkins-build-pipeline/"&gt;Continuous Delivery – Part 1: Our Jenkins Build Pipeline setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-code-metrics-with-metrical/"&gt;Continuous Delivery – Part 2: Code metrics with metrical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/08/continuous-delivery-part-3-rolling-back-database-migrations-with-capistrano-rollback/"&gt;Continuous Delivery – Part 4: Rolling back database migrations with Capistrano rollback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery - Part 2: Code metrics with metrical</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/continuous-delivery-part-2-code-metrics-with-metrical/"/>
    <id>http://www.multunus.com/blog/2011/07/continuous-delivery-part-2-code-metrics-with-metrical/</id>
    <published>2011-07-31T21:14:40+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;a href="http://iain.nl/easier-metricfu-with-metrical"&gt;Metrical&lt;/a&gt; is for easier &lt;a href="http://metric-fu.rubyforge.org/"&gt;metric_fu&lt;/a&gt; setup. You can see the details on why and how &lt;a href="http://iain.nl/easier-metricfu-with-metrical"&gt;here&lt;/a&gt;. Its an awesome tool which allows us to easily use metric_fu without adding any dependency to the project code.&lt;/p&gt;

&lt;p&gt;The steps I followed for setting it up in our Jenkins server are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install the gem. I installed it under our ruby 1.9.2 in RVM.&lt;/li&gt;
  &lt;li&gt;Create a .metrics file under your projects directory with the settings. This is not mandatory, but I had to use this because some configurations do not seem to be working with ruby 1.9.2. I’ve mentioned those below along with the contents of the .metrics file&lt;/li&gt;
  &lt;li&gt;Create a job in Jenkins server, mention the repository details and for build step give the shell command as 
rvm 1.9.2 -S metrical&lt;/li&gt;
  &lt;li&gt;Configure the &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/HTML+Publisher+Plugin"&gt;HTML Publisher plugin&lt;/a&gt; for showing the nice Graphs generated by metric_fu as part of the build report. The default report location is tmp/metric_fu/output under the project directory. You can change the same in .metrics file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As I mentioned above, tools such as flay and flog, which comes as part of metric_fu, have 
&lt;a href="https://github.com/iain/metrical/issues/4"&gt;issues&lt;/a&gt; working with ruby 1.9.2. And the same case with stats graph and syntax highlighting. The same case with &lt;a href="https://github.com/relevance/rcov/issues/8"&gt;rcov&lt;/a&gt; also. So I had to create a &lt;strong&gt;metrics&lt;/strong&gt; file with the following contents and put in the project dir:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
MetricFu::Configuration.run do |config|
config.code_dirs = ['app', 'lib']
config.syntax_highlighting = false
config.metrics  = [:churn,:reek,:roodi,:hotspots,:rails_best_practices]
config.graphs   = [:reek, :roodi, :rails_best_practices]
config.rcov[:test_files] = ['spec/**/* _spec.rb']
config.rcov[:rcov_opts] &amp;lt;&amp;lt; "-Ispec" # Needed to find spec_helper
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For test coverage I’ve used &lt;a href="https://github.com/colszowka/simplecov"&gt;Simplecov&lt;/a&gt; which is easy to setup. It will generate the coverage report whenever you run the tests. This also generated html report which can be integrated easily into Jenkins. As mentioned &lt;a href="https://github.com/colszowka/simplecov/issues/42"&gt;here&lt;/a&gt; in the issue list, it does not generate the report when you are running with 
&lt;a href="https://github.com/timcharper/spork/wiki"&gt;spork&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Continued..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-using-jenkins-build-pipeline/"&gt;Continuous Delivery – Part 1: Our Jenkins Build Pipeline setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-contd/"&gt;Continuous Delivery – Part 3: Running custom rake tasks during deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/08/continuous-delivery-part-3-rolling-back-database-migrations-with-capistrano-rollback/"&gt;Continuous Delivery – Part 4: Rolling back database migrations with Capistrano rollback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Blueprint - reverse engineering your server configuration</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/blueprint-reverse-engineering-your-server-configuration/"/>
    <id>http://www.multunus.com/blog/2011/07/blueprint-reverse-engineering-your-server-configuration/</id>
    <published>2011-07-31T21:05:16+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;There are many tools like &lt;a href="http://wiki.opscode.com/display/chef/Home"&gt;Chef&lt;/a&gt;, &lt;a href="http://projects.puppetlabs.com/projects/puppet"&gt;Puppet&lt;/a&gt; etc. to manage the server configuration, but there are not many which do the reverse i.e. create a configuration from an existing server. &lt;a href="https://github.com/devstructure/blueprint"&gt;Blueprint&lt;/a&gt; does exactly the latter.&lt;/p&gt;

&lt;p&gt;Its a set of python scripts which reverse engineer your server configuration. It stores the configuration locally in its own repository, but you can also:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create Puppet/Chef scripts&lt;/li&gt;
  &lt;li&gt;Convert into a normal shell script&lt;/li&gt;
  &lt;li&gt;Using &lt;a href="https://github.com/devstructure/blueprint-io"&gt;Blueprint I/O&lt;/a&gt;, store the configuration in remote server and pull it when required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It scans all the packages installed on the machine and adds those into the configuration. According to the &lt;a href="https://devstructure.com/docs/tutorial.html"&gt;tutorial&lt;/a&gt;, you can do this on a dedicated server or on virtual servers created using &lt;a href="http://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;etc, or on cloud servers like &lt;a href="http://aws.amazon.com/ec2"&gt;Amazon EC2&lt;/a&gt;, &lt;a href="http://www.rackspacecloud.com/cloud_hosting_products/servers"&gt;Rackspace&lt;/a&gt; etc.&lt;/p&gt;

&lt;p&gt;I’ve tried it on a dedicated server (i.e. our CI server) as well as on an EC2 server. I faced a couple of issues, but with their help (see issues &lt;a href="https://github.com/devstructure/blueprint/issues/71"&gt;71&lt;/a&gt; and &lt;a href="https://github.com/devstructure/blueprint/issues/63"&gt;63&lt;/a&gt;), got those fixed.&lt;/p&gt;

&lt;p&gt;While bringing up the EC2 instance, you can give the shell script created by Blueprint as user data, provided the size of the script is below 16384 bytes.&lt;/p&gt;

&lt;p&gt;Its really an awesome tool. I got the reference to it from &lt;a href="http://ruby5.envylabs.com/episodes/189-episode-186-june-24-2011/stories/1668-blueprint"&gt;Ruby5&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Productivity Enhancement Tools - MailCatcher, Vogue, SpriteCow and RailsWizard</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/productivity-enhancement-tools-mailcatcher-vogue-spritecow-and-railswizard/"/>
    <id>http://www.multunus.com/blog/2011/07/productivity-enhancement-tools-mailcatcher-vogue-spritecow-and-railswizard/</id>
    <published>2011-07-31T20:33:40+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;h2 id="mailcatcherhttpsgithubcomsj26mailcatcher"&gt;&lt;a href="https://github.com/sj26/mailcatcher"&gt;MailCatcher&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A super simple SMTP server which catches any messages sent to it to display in a web interface. Configure the app to deliver to smtp://127.0.0.1:1025, then check out http://127.0.0.1:1080 to see all the mails being sent out of your application.&lt;/p&gt;

&lt;p&gt;This really makes it easy to check emails generated by the application in development environment. Additionally configuring this tool in your development environment makes sure that emails are not being sent to actual users unintentionally - very useful when you are trying to reproduce some issue with production environment data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating:&lt;/strong&gt; Extremely useful&lt;/p&gt;

&lt;h2 id="voguehttpaboutcodenetvogue"&gt;&lt;a href="http://aboutcode.net/vogue/"&gt;Vogue&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Vogue creates a real-time link between your web browser and your file system. When you save a CSS file, used by the HTML page in your browser, Vogue will make the browser reload the stylesheet. Only the stylesheet is reloaded, not the entire page, making it work even for very dynamic/ajax pages.&lt;/p&gt;

&lt;p&gt;A very useful tool, and it does save a lot of time when you are trying to check CSS changes across different browsers.&lt;/p&gt;

&lt;p&gt;To make it work, you just have to install node.js and its package management tool - npm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/joyent/node/wiki/Installation"&gt;Node installation instructions &lt;/a&gt;&lt;a href="http://npmjs.org/"&gt;npm installation instructions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vogue installation [Note: This a forked repo]&lt;/p&gt;

&lt;p&gt;As of this writing there is a compatibility issue with Vogue and the socket.io package it uses, so instead of installing from the official repo use this repo instead [https://github.com/DTrejo/vogue.git].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating:&lt;/strong&gt; Extremely useful&lt;/p&gt;

&lt;h2 id="spritecowhttpwwwspritecowcom"&gt;&lt;a href="http://www.spritecow.com/"&gt;SpriteCow&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Helps you get the background-position, width and height of sprits within a sprite sheet. This tools works really well with sprite-sheets which has a transparent background [which is usually the case].&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating:&lt;/strong&gt; Useful&lt;/p&gt;

&lt;h2 id="railswizardhttprailswizardorg"&gt;&lt;a href="http://railswizard.org/"&gt;RailsWizard&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rails Wizard is a tool from Intridea which makes it easy to create application templates just by specifying the gems that you want to use. It is available as a webapp as well as as stand alone tool.&lt;/p&gt;

&lt;p&gt;Because of an incompatibility with the latest mysql2 gem and rails (3.0.x) this did not work me as expected.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rating&lt;/strong&gt;: Moderately useful&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Issue while installing Java in EC2 Micro instance</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/issue-while-installing-java-in-ec2-micro-instance/"/>
    <id>http://www.multunus.com/blog/2011/07/issue-while-installing-java-in-ec2-micro-instance/</id>
    <published>2011-07-31T19:52:30+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;When I tried to install Java in our 
&lt;a href="http://aws.amazon.com/ec2/instance-types/"&gt;EC2 micro instance&lt;/a&gt;, it stopped responding. There was no luck even after restarting the instance. I thought it might be a specific issue with that particular instance, so tried it again by bringing up a new micro instance and every time it was the same behaviour. I then googled and discovered it as a known 
&lt;a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/634487"&gt;issue&lt;/a&gt; reported back in September 2010. The suggested workaround is:* Bring up a small instance&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install Java&lt;/li&gt;
  &lt;li&gt;Convert it into micro instance.&lt;/li&gt;
  &lt;li&gt;Converting of the instance can be done using &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="http://aws.amazon.com/developertools/351"&gt;API tools&lt;/a&gt;, or from the &lt;a href="http://www.kinlane.com/2011/03/easier-scalability-with-aws/"&gt;AWS Console&lt;/a&gt;. But for me this option was never enabled from the console. I don’t know why. Of course, the API option would still work, I suppose.&lt;/p&gt;

&lt;p&gt;But after looking at the bug in detail, I could see a solution which uses the linux &lt;a href="http://linux.about.com/library/cmd/blcmdl1_nice.htm"&gt;nice&lt;/a&gt; command, and that did the trick for me. You can see the script as the last comment. The script is as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
#!/bin/bash
sudo add-apt-repository "deb 
[http://archive.canonical.com/](http://archive.canonical.com/) natty partner"
sudo apt-get update
#Accept the Java license.
for i in bin jdk jre; do
echo "sun-java6-$i shared/accepted-sun-dlj-v1-1 select true" | sudo debconf-set-selections
done
# convoluted way to install java. this seems to only work some times! Race condition?
# 
[https://forums.aws.amazon.com/message.jspa?messageID=199841#199841](https://forums.aws.amazon.com/message.jspa?messageID=199841#199841)
sudo nice --adjustment=19 apt-get install -y sun-java6-jre
&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Continuous Delivery - Part 1: Our Jenkins Build Pipeline setup</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/07/continuous-delivery-part-1-our-jenkins-build-pipeline-setup/"/>
    <id>http://www.multunus.com/blog/2011/07/continuous-delivery-part-1-our-jenkins-build-pipeline-setup/</id>
    <published>2011-07-07T19:58:55+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;As part of our journey towards implementing &lt;a href="http://continuousdelivery.com/"&gt;Continous Delivery&lt;/a&gt;, I’ve added the 
&lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Build+Pipeline+Plugin"&gt;Build pipeline&lt;/a&gt; for our continous integration server &lt;a href="http://jenkins-ci.org/"&gt;Jenkins&lt;/a&gt;. There are quite a few resources available on the net on how to add the plugin and configure it. This blog is not about how to configure the plugin, but more on how I’ve configured it for one of our projects and issues I faced while doing the same.&lt;/p&gt;

&lt;p&gt;The pipeline we have now is very simple. They are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Run all the RSpec tests&lt;/li&gt;
  &lt;li&gt;Run the Javascript Unit tests&lt;/li&gt;
  &lt;li&gt;Deploy to staging&lt;/li&gt;
  &lt;li&gt;Deploy to production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The problems we had with our earlier approach, and how the current approach solved those problems:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What we had in the past was, simple scripts with the above items. We had a job for running the tests. If the build was successful, we would run 
&lt;a href="https://github.com/capistrano/capistrano"&gt;capistrano&lt;/a&gt; scripts to deploy to staging and once the customer gave the thumbs up, we’d push it to production. There are a series of steps that we had to do for each deployment. For eg: for staging deployment:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Merge the “staging” branch with master&lt;/li&gt;
  &lt;li&gt;Run the cap script&lt;/li&gt;
  &lt;li&gt;Tag the build&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And almost similar steps needed to be followed for production deployment also. The usual problems that we used to face are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is no way we knew what deployment was done on a certain day for what&lt;/li&gt;
  &lt;li&gt;All staging updates would not get pushed to production, so it was a tough task to identify which tag to merge when we were finally ready for a production update&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the current approach, the advantages are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Its a one click deployment, so rare chance of making any kind of mistake&lt;/li&gt;
  &lt;li&gt;We can clearly see when a feature has been moved to staging, and whether it has been pushed to production or not&lt;/li&gt;
  &lt;li&gt;Anyone can do deployment as it is just a click of a button. We may even be able to teach the client how to do this.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the major problems I had faced in the earlier “manual” system - was the inability to pass parameters between builds. For example, once the app would be moved to staging, a tag is created and when its ready to be pushed to production, we’d have to merge that particular tag to production and then push it.&lt;/p&gt;

&lt;p&gt;To achieve the above I used the “parameterized build” option. In Jenkins, the parameters get converted to Environment Variables and got passed to the downstream job. When you fire the build, it prompts for the value of the parameter. Once entered this would be available as an Environment variable for this job and all its downstream jobs.&lt;/p&gt;

&lt;p&gt;For eg: in the pipeline, the downstream project is “Stage deploy”, and it will know the value for TAG and uses that value to create a tag in Git after successful deployment.&lt;/p&gt;

&lt;p&gt;When it is ready for production deployment it merges with the same tag and deploys to production. In the latest version of the plugin, moving to the next step is &lt;strong&gt;not&lt;/strong&gt; triggered automatically and you can retry the failed ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Capturing the parameter will happen &lt;strong&gt;only&lt;/strong&gt; for the first job. So, if the parameterized job is not the first one in the pipeline, the capture of the parameter will not happen.&lt;/p&gt;

&lt;p&gt;So we’ve reached the “one click deployment stage” with this. But we’ve still got the following pending tasks - based on what’s mention in the book &lt;a href="http://www.informit.com/store/product.aspx?isbn=0321601912"&gt;Continuous Delivery&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rolling back the bad builds&lt;/li&gt;
  &lt;li&gt;Add non-functional tests to the pipeline i.e. performance and security tests&lt;/li&gt;
  &lt;li&gt;Feature flags&lt;/li&gt;
  &lt;li&gt;Zero downtime deployment&lt;/li&gt;
  &lt;li&gt;Canary Releases (Something on the lines of A/B testing)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Continued..&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-code-metrics-with-metrical/"&gt;Continuous Delivery – Part 2: Code metrics with metrical&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/07/continuous-delivery-contd/"&gt;Continuous Delivery – Part 3: Running custom rake tasks during deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.multunus.com/2011/08/continuous-delivery-part-3-rolling-back-database-migrations-with-capistrano-rollback/"&gt;Continuous Delivery – Part 4: Rolling back database migrations with Capistrano rollback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://weblogs.java.net/blog/johnsmart/archive/2011/03/10/build-pipelines-jenkinshudson"&gt;http://weblogs.java.net/blog/johnsmart/archive/2011/03/10/build-pipelines-jenkinshudson&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://continuousdelivery.com/patterns"&gt;http://continuousdelivery.com/patterns&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.quora.com/How-does-Etsy-manage-development-and-operations"&gt;http://www.quora.com/How-does-Etsy-manage-development-and-operations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Avoiding the "crunch mode" in the last few weeks of a project</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/06/avoiding-the-crunch-mode-in-the-last-few-weeks-of-a-project/"/>
    <id>http://www.multunus.com/blog/2011/06/avoiding-the-crunch-mode-in-the-last-few-weeks-of-a-project/</id>
    <published>2011-06-29T16:49:52+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We recently launched a product into production. It was a 4 month long project - with 5 full time members on the team. Right from the outset, one of things that we wanted to do, was to set and maintain a rhythm across the entire duration of the project. We set this rhythm to 1 week iterations - with a demo at the end of each iteration. Things went pretty well for most of the project. We had expected to have to hustle a little bit in the last couple of weeks - but in the end we actually ended up working much longer hours than the usual.&lt;/p&gt;

&lt;p&gt;After the launch, we realized that the number of issues reported over the last few weeks of the project were much higher than what we were used to for most of the project. So not only did we have a tired team at launch time, we also had lower quality. In the retrospective that soon followed the launch, we discussed this in great detail and came up with one important conclusion:&lt;/p&gt;

&lt;p&gt;We were missing the forest for trees - by focusing  too much on the individual &lt;strong&gt;practices&lt;/strong&gt;, but not appreciating the 
&lt;strong&gt;overall XP Process&lt;/strong&gt;. Had we been perhaps more aware of the value we were getting by following the practices, we’d probably tried to find or create new practices that would have suited the changing context better.&lt;/p&gt;

&lt;p&gt;Thankfully though, I got this thought that writing to &lt;a href="http://jamesshore.com/"&gt;James Shore&lt;/a&gt; directly might help as well. James is, among many other things, the author of our favorite book - &lt;a href="http://jamesshore.com/Agile-Book/"&gt;The Art of Agile Development&lt;/a&gt;. What follows is the question/answer emails I exchanged with him:&lt;/p&gt;

&lt;p&gt;My Question to James:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We are a team that has transitioned to XP for a while now. We have been following almost everything mentioned in your book “The Art of Agile Development”. We found that the project was more stable than any other project that we’d done in the past. 
But we found recently that we were not able to sustain the pace with which we had started the project. There was this “Crunch Mode” in the last few weeks of the project with everyone in the team putting in long hours of work. 
We really want to avoid to such situations in our future projects. Can you suggest as to how we could achieve that?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And the response I got from him:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Glad to hear it worked for you! It’s hard to know what happened since I wasn’t there, but there are several possibilities:
- You might have overcommitted. In that case, take a second look at the ”
&lt;a href="http://jamesshore.com/Agile-Book/release_planning.html"&gt;Release Planning&lt;/a&gt;” and ”
&lt;a href="http://jamesshore.com/Blog/Use-Risk-Management-to-Make-Solid-Commitments.html"&gt;Risk Management&lt;/a&gt;” practices. You might have been better off reducing scope or delaying the release date.
- You might have had incurred too much technical debt. In that case, remember the maxim that you should always leave the code better than you found it, and take a second look at the
&lt;a href="http://jamesshore.com/Agile-Book/slack.html"&gt;Slack&lt;/a&gt;, 
&lt;a href="http://jamesshore.com/Agile-Book/test_driven_development.html"&gt;TDD&lt;/a&gt;, 
&lt;a href="http://jamesshore.com/Agile-Book/refactoring.html"&gt;Refactoring&lt;/a&gt;, 
&lt;a href="http://jamesshore.com/Agile-Book/simple_design.html"&gt;Simple Design&lt;/a&gt;, and 
&lt;a href="http://jamesshore.com/Agile-Book/incremental_design.html"&gt;Incremental Design&lt;/a&gt; practices. 
- You might have had too many bugs. In that case, take a second look at the ”
&lt;a href="http://jamesshore.com/Agile-Book/no_bugs.html"&gt;No Bugs&lt;/a&gt;” practice and remember that you need to keep things clean and bug-free all the time rather than saving up bug-fixing for the end. Also consider doing the “Exploratory Testing [1]” practice from the beginning of the project, and not saving testing for the end. 
- You might have had a difficult relationship with your key stakeholders. This problem, in particular, can result in excessive schedule pressure, which will lead to all of the other problems I’ve mentioned. In that case, see the ”
&lt;a href="http://jamesshore.com/Agile-Book/trust.html"&gt;Trust&lt;/a&gt;” practice and enlist the help of some politically-savvy people in your organization. You might also be interested in the Rabu project I’ve started (
&lt;a href="http://www.teamrabu.com/"&gt;http://www.teamrabu.com&lt;/a&gt;).Finally, consider that a week or two of crunch mode at the end of a longer project isn’t always a bad thing, so long as that’s all it is.Best wishes,
Jim&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I guess our problem was that we had overcommitted. We also did not consider practices like the Risk Management and Slack.
Now speaking of action items, we’ve come up with the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Commit to deliver features only after following the Risk Management techniques mentioned in the book&lt;/li&gt;
  &lt;li&gt;Introduce Slack as part of every iteration&lt;/li&gt;
  &lt;li&gt;And finally, to ensure we don’t forget to appreciate the process enough, we’ve added one additional item in our Navigator’s[2] checklist.
    &lt;ul&gt;
      &lt;li&gt;[Update] The value of this action item is debatable. Its been about 3 weeks since we put it up on the checklist - but we’ve got the tendency to ignore anything that doesn’t change frequently enough. So we’ll need to come up with a better solution for the “lack of appreciation” problem. Any ideas? Please help us by commenting below. Thanks!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;
[1]This practice is yet to be put online.&lt;/p&gt;

&lt;p&gt;[2]This refers to the role of the Navigator in the context of &lt;a href="http://jamesshore.com/Agile-Book/pair_programming.html"&gt;Pair Programming&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Running tests in parallel using parallel_tests</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/06/running-tests-in-parallel-using-parallel_tests/"/>
    <id>http://www.multunus.com/blog/2011/06/running-tests-in-parallel-using-parallel_tests/</id>
    <published>2011-06-27T16:18:01+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the action items I had mentioned in &lt;a href="http://www.multunus.com/2011/06/takeaways-from-ruby-conf-india-2011/"&gt;an earlier post&lt;/a&gt;, was to setup the  infrastructure for running tests in parallel.&lt;/p&gt;

&lt;p&gt;I tried &lt;a href="http://test-load-balancer.github.com/"&gt;TLB&lt;/a&gt;, but stopped on it because it required cluster setup for our CI server i.e. hudson. I was looking for something which was even simpler than TLB, and tried &lt;a href="https://github.com/ngauthier/hydra"&gt;Hydra&lt;/a&gt;, but could not setup it successfully. Thankfully though, the Hydra committer  &lt;a href="https://github.com/ngauthier/hydra/issues/48"&gt;suggested&lt;/a&gt; that I try out &lt;a href="https://github.com/grosser/parallel_tests"&gt;parallel_tests&lt;/a&gt; - as hydra is not currently being maintained.&lt;/p&gt;

&lt;p&gt;I am yet to try running it parallelly on multiple machines, but I tried it on a dual core machine and can clearly see the difference. The following are the results:&lt;/p&gt;

&lt;h3 id="without-paralleltests"&gt;Without parallel_tests&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
Finished in 451.01 seconds
1089 examples, 20 failures, 1 pending
real    8m14.908s
user    3m4.236s
sys 3m20.061s
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id="with-paralleltests"&gt;With parallel_tests&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
Results:
544 examples, 10 failures, 1 pending
545 examples, 10 failures
Took 330.528104223 seconds
Specs Failed
real    5m35.586s
user    7m3.150s
sys 0m14.269s
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The different is 2-3 minutes which I think is a huge deal.&lt;/p&gt;

&lt;p&gt;I &lt;a href="https://github.com/leenasn/parallel_tests"&gt;forked&lt;/a&gt; parallel_tests to make a change to its default behaviour of running tests only under spec folder. As our app was built using rails engines, we had tests even under our vendor/engines directory.&lt;/p&gt;

&lt;p&gt;The feature, I feel, missing in parallel_tests compared to TLB is the logic it uses to split the tests. TLB is intelligent enough to split the tests into different processes depending upon the time each test takes, so that all the threads finish by the same time. I am not sure whether how exactly parallel_tests works, but looks like it splits the total no of tests among the number of processes because when it started I could see the message:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
"2 processes for 162 specs, 81 specs per process"
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But parallel_tests by default spawns multiple processes depending upon the “core” i.e. on a dual core it starts 2 processes unless you mention otherwise.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>CoffeeScript and Rails 3.0 - Quick setup</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/06/coffeescript-and-rails-3-0-quick-setup/"/>
    <id>http://www.multunus.com/blog/2011/06/coffeescript-and-rails-3-0-quick-setup/</id>
    <published>2011-06-23T19:40:58+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;I have been hearing a lot about CoffeeScript nowadays as you must have as well. Yes, it is built into Rails 3.1 by default. However I’m still working on a Rails 3.0 project, where I’m thinking of starting to use CoffeeScript. So, this blog post concentrates on how to quickly setup CoffeeScript into your existing Rails 3.0 project. For more details refer to the links at the bottom of this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Add these to Gemfilegem 'therubyracer', :require =&amp;gt; false&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
gem 'barista'
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‘barista’ gem takes care of installing coffee-script gem and its dependencies. ‘therubyracer’ is the javascript engine for ruby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Run Bundle Install to install coffee-script gem and other required gems&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
bundle install
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; Generate Barista initializer file config/initializers/barista_config.rb&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
rails generate barista:install
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4(optional):&lt;/strong&gt; Lets configure barista to compile all coffeescript code into public/javascripts/coffeescripts/ folder (this is optional, if not configured compiled code will be placed under public/javascripts folder) config/initializers/barista_config.rb, line 7.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
#Change the output root, causing Barista to compile into public/coffeescripts
c.output_root = Rails.root.join("public", "javascripts", "coffeescripts")
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 5:&lt;/strong&gt; Create a folder ‘coffeescripts’ under app/ to have all your coffeescripts. All file names should end with .coffee
Example: app/coffeescripts/user.coffee&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
jQuery -&amp;gt;
 $('form').validate()
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 6:&lt;/strong&gt; Above code will be complied to JS file under public/javascripts/coffeescripts/user.js. Example code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
/*  DO NOT MODIFY. This file was compiled Thu, 23 Jun 2011 07:13:34 GMT from
 *  /home/manoj/my_rails_app/app/coffeescripts/user.coffee
 * /
 (function() {
  jQuery(function() {
   return $('form').validate();
  });
}).call(this);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 7:&lt;/strong&gt; Include these coffeescript js files in your view/layouts using include tag.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
&amp;lt;%= javascript_include_tag 'application', 'coffeescripts/user'&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And you’re done with setup. As the complied code is neat JS code, your page should continue to work fine :) Going forward you can start using CoffeeScript for writing JS code.&lt;/p&gt;

&lt;p&gt;For deployment we can use the &lt;code&gt;barista:brew rake&lt;/code&gt; task in the Capistrano script using an “after” hook&lt;/p&gt;

&lt;h3 id="references-used-to-create-above-steps"&gt;References used to create above steps&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://jashkenas.github.com/coffee-script/"&gt;http://jashkenas.github.com/coffee-script/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://blog.nicolasblanco.fr/2010/12/13/you-should-already-use-coffeescript-in-your-rails-app/"&gt;http://blog.nicolasblanco.fr/2010/12/13/you-should-already-use-coffeescript-in-your-rails-app/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="convert-existing-js-to-coffeescript"&gt;Convert existing JS to coffeescript&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ricostacruz.com/js2coffee/"&gt;http://ricostacruz.com/js2coffee/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="setting-up-emacs-with-coffee-mode"&gt;Setting up Emacs with coffee-mode&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://ozmm.org/posts/coffee_mode.html"&gt;http://ozmm.org/posts/coffee_mode.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Takeaways from Ruby Conf India 2011</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/06/takeaways-from-ruby-conf-india-2011/"/>
    <id>http://www.multunus.com/blog/2011/06/takeaways-from-ruby-conf-india-2011/</id>
    <published>2011-06-14T19:28:56+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;I know its been almost two weeks since its all over, things may not be fresh in mind. And all of us were very busy with “go live” for one of our client projects. But as its “better later than never”, I am putting my thoughts about the recently concluded RubyConf held in Bangalore on 28th and 29th of May 2011.&lt;/p&gt;

&lt;p&gt;There were quite a few presentations this year which I felt were very useful for me. Those are:
- &lt;a href="http://rubyconfindia.org/2011/presentations/brianGuthrie-RubyPlusRailsPlusAppMinusRails.key"&gt;Ruby Plus Rails Plus Your Application Minus Rails&lt;/a&gt; by Brian Guthrie
- &lt;a href="http://rubyconfindia.org/2011/presentations/janmejay-TLB-rocketBoosterForYourBuild.pdf"&gt;Test Load Balancer: Rocket Booster for your Build&lt;/a&gt; by Janmejay Singh and Pavan
- &lt;a href="http://rubyconfindia.org/2011/presentations/brianGuthrie-ContinuousDelivery.key"&gt;Continuous Delivery&lt;/a&gt; in Ruby by Srushti Ambekallu and Brian Guthrie&lt;/p&gt;

&lt;p&gt;And its needless to say that the keynotes by Yehuda Katz, Chad Fowler, Nick Sieger and Ola Bini were awesome too. Especially
&lt;a href="http://rubyconfindia.org/2011/presentations/chadFowler-service.key"&gt; Chad Fowler’s session&lt;/a&gt; gave a new perspective on “Service” and who should be considered as a “Customer”. And Nick Sieger’s closing note gave a different perspective on how to contribute back to the community by conducting workshops and with &lt;a href="http://kidsruby.com/"&gt;Kidsruby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So whats next? Yes, implement the stuff we learned. So these are the immediate action items for us:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;More automation for the entire release mechanism. We do have a CI server and do have a Cap script for deployment. But we do not have a “one click deployment” process. A ”&lt;a href="http://www.google.com/url?sa=D&amp;amp;q=http://code.google.com/p/build-pipeline-plugin/"&gt;Build pipeline&lt;/a&gt;” plugin for Hudson should help us achieve that.&lt;/li&gt;
  &lt;li&gt;Tools like &lt;a href="http://wiki.opscode.com/display/chef/Home"&gt;Chef&lt;/a&gt;/&lt;a href="http://www.puppetlabs.com/puppet/introduction/"&gt;Puppet&lt;/a&gt; for server configuration management. We’ve tried &lt;a href="https://github.com/wr0ngway/rubber/wiki"&gt;rubber&lt;/a&gt;, but are yet to use it for any production setup.&lt;/li&gt;
  &lt;li&gt;Use &lt;a href="http://test-load-balancer.github.com/"&gt;TLB&lt;/a&gt; to run tests in parallel.  Setup seem to be pretty straightforward. This will be a huge help when you are doing many deployment in a day.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; One talk I missed in the list was &lt;a href="http://rubyconfindia.org/2011/presentations/sherinC-DesigningHighThroughputWebServiceClients.key"&gt;Designing High Throughput Web Service Clients&lt;/a&gt; by Sherin. He was able to convey the problems he faced and how he went ahead and solved those.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Disabling callbacks in Rails 3</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/05/disabling-callbacks-in-rails-3/"/>
    <id>http://www.multunus.com/blog/2011/05/disabling-callbacks-in-rails-3/</id>
    <published>2011-05-01T07:40:17+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;It is common requirement to disable the callbacks like &lt;code&gt;after_save&lt;/code&gt;, &lt;code&gt;after_create&lt;/code&gt; etc while importing/migrating data. One way to avoid this is by directly importing the data into DB using a command like &lt;code&gt;mysqlimport&lt;/code&gt;. But by doing that, the Rails validations etc will not work. We can disable the callbacks using the &lt;code&gt;skip_callback&lt;/code&gt; method.  For eg:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
User.skip_callback("create",:after,:send_confirmation_email)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The above will skip the &lt;code&gt;send_confirmation_email&lt;/code&gt; callback fired on after_create.&lt;/p&gt;

&lt;p&gt;To set the callback back:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
User.set_callback("create",:after,:send_confirmation_email)
&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Planning an Informative Workspace at our New Office</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/04/planning-an-informative-workspace-at-our-new-office/"/>
    <id>http://www.multunus.com/blog/2011/04/planning-an-informative-workspace-at-our-new-office/</id>
    <published>2011-04-26T20:38:43+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2011/04/informativeworkspace.jpg" alt="informativeworkspace" /&gt;&lt;/p&gt;

&lt;p&gt;We’re moving! We’ve been at the current premises for 2+ years now - and the time has come to move out of here - into an office that is a little more &lt;strong&gt;formal&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The new place is larger, has a better facade and is overall, a nice upgrade. Check out the &lt;a href="http://www.homestyler.com/designprofile/58b86389-0d87-4317-b32c-417cc403caf6"&gt;office plan.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The challenge is to have an area which is open, while still keeping our Agile tools like the drawing boards, iteration and release boards and the snack bar within easy reach of each team. So we have planned self-sufficient ‘islands’ around which each team can collaborate, spread out on the office floor. What makes this space really great is the sunlight streaming in through the wall-to-wall window on one side.&lt;/p&gt;

&lt;p&gt;What’s fun is that we get new ideas to make the office better with every visit, much to our interior work contractor’s frustration. But that’s what you get when you sign up with an XP organization.&lt;/p&gt;

&lt;p&gt;The interior work is in full swing and the place is taking shape bit by bit everyday. The whole team is really looking forward to moving in before the end of May [about a month from now].&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Venkat Subramaniam's talk on Code Quality</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/04/venkat-subramaniams-talk-on-code-quality/"/>
    <id>http://www.multunus.com/blog/2011/04/venkat-subramaniams-talk-on-code-quality/</id>
    <published>2011-04-21T15:17:11+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2011/04/Venkat_at_yahoo-300x224.jpg" alt="Venkat_at_yahoo-300x224" /&gt;&lt;/p&gt;

&lt;p&gt;We attended &lt;a href="http://http//www.agiledeveloper.com/presentations/caring_about_code_quality.pdf"&gt;Venkat Subramaniam’s talk on Code Quality&lt;/a&gt; at Yahoo India a couple of days back.&lt;/p&gt;

&lt;p&gt;Venkat is the founder of Agile Developer and the author of several books. Consultant and Adjunct Professor are some of the other hats he wears. It was an inspiring experience. While we were reassured that our current practices are on the right track during most of the talk, there were a some things which caused us to rethink the way we do things.&lt;/p&gt;

&lt;h2 id="why-do-we-need-code-quality-"&gt;Why do we need Code Quality ?&lt;/h2&gt;
&lt;p&gt;One of the first things Venkat asked us to think about was why code quality was necessary in the first place. Most of the audience had reasons like ‘Easy Maintainence’, ‘To make a better product’, ‘Company’s image’ etc. These were reasons which we had on the top of our mind as well. However his reasoning was quite different:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We need Code Quality to be truly Agile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What this means is that rapidly adding new features or quickly changing existing features to incorporate feedback is not possible without clean code.&lt;/p&gt;

&lt;p&gt;We have been focusing on writing cleaner code for quite some time as well. But our approach to improving in this area has been limited to reading books and online articles about better approaches to write clean code and internal discussions with our team. One essential ingredient that we were missing was using an existing sample, something near perfection which we could look at and learn from or at least be inspired by.&lt;/p&gt;

&lt;h2 id="pair-programming-vs-code-review"&gt;Pair Programming Vs Code Review&lt;/h2&gt;
&lt;p&gt;Code Review aims to provide external feedback. But we already do pair programming which tries to achieve nearly the same. The danger lies in the navigator becoming so involved that he is not externalized enough. So the solution is to switch pairs every half a day.&lt;/p&gt;

&lt;h2 id="additional-action-items"&gt;Additional Action Items&lt;/h2&gt;
&lt;p&gt;After having a brainstorming session with the entire team here, we decided to include the following suggestions from Venkat’s talk to our existing practices:&lt;/p&gt;

&lt;h3 id="starting-perspective-based-peer-reviews"&gt;Starting “Perspective” based Peer Reviews&lt;/h3&gt;
&lt;p&gt;This is mandatory for  projects which have only one pair (and hence cannot switch pairs). The reviewer should have enough familiarity(perspective) with the project to be able to make a judgment on the design and quality. This is also useful for projects which can switch pairs - but not mandatory.&lt;/p&gt;

&lt;h3 id="dedicated-time-to-pay-off-technical-debt"&gt;Dedicated time to pay off technical debt&lt;/h3&gt;
&lt;p&gt;While our iterations always have time baked in, to clear technical debt, we often spend that time doing something else instead. More disclipine in paying down our technical debt is something we intend to work on.&lt;/p&gt;

&lt;h3 id="code-quality-metrics-in-the-informative-workspace"&gt;Code Quality metrics in the Informative Workspace&lt;/h3&gt;
&lt;p&gt;While ‘name and shame’ is certainly not something we do, Venkat’s belief in publicising quality metrics as a way to encourage code quality [in our informative workspace] is something we will explore in the coming weeks.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Script to merge two identical MySQL Databases</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/03/script-to-merge-two-identical-mysql-databases/"/>
    <id>http://www.multunus.com/blog/2011/03/script-to-merge-two-identical-mysql-databases/</id>
    <published>2011-03-21T13:13:51+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;For one of the applications what we’re working on, we had a requirement to merge two DBs which have the same structure.&lt;/p&gt;

&lt;p&gt;As tables in both DBs can hold same value for primary keys, we had to offset all the ID fields (including foreign key references). If the data from DB_2 has to be imported to DB_1, the steps we had to follow were as follows.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Increment the ID field value (including the foreign keys). This has to be done across all the tables.&lt;/li&gt;
  &lt;li&gt;Import the Data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is tough to write the script manually especially if you have lot of tables and foreign key references. We used MySQL’s information schema to give us info about the tables and dynamically generated the script to do it across all the tables.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://gist.github.com/875796"&gt;Here&lt;/a&gt; is the SQL script we wrote for the same.&lt;/p&gt;

&lt;p&gt;It worked like charm and saved a lot of time for us.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This will &lt;strong&gt;not&lt;/strong&gt; take care of clashes for unique fields. Luckily though in our case there were no clashes for unique fields.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Using études to continually improve our development process</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/03/using-etudes-to-continually-improve-our-development-process/"/>
    <id>http://www.multunus.com/blog/2011/03/using-etudes-to-continually-improve-our-development-process/</id>
    <published>2011-03-15T15:42:59+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Agile development is an art. Unless each member on the team has the a-ha moment and actually ‘gets’ the &lt;a href="http://agilemanifesto.org/"&gt;core values of the process&lt;/a&gt; - the end result is nothing but a hodge-podge of buggy code delivered after a lot of unnecessary stress.&lt;/p&gt;

&lt;p&gt;So how do we tranform into an agile team and then continually propagate the core values of the process - so that it becomes the culture of the organization?&lt;/p&gt;

&lt;p&gt;One method that we’ve found quite useful is the concept of études - as described in James Shore book. We’re now trying out the 
&lt;a href="http://jamesshore.com/Agile-Book/thinking_intro.html"&gt;thinking études&lt;/a&gt;. Every evening at 6:30PM our team splits up into pairs. Testers pair as well - with programmers.&lt;/p&gt;

&lt;p&gt;Each pair picks up a topic from the book that interests them, reads the chapter for about 7 min, discusses (for about 8 min) how different/similar our actual process is wrt to what’s in the chapter. Any 3 pairs then give 5min presentations on what they learnt and any action items they think need to be implemented to make our processes better.&lt;/p&gt;

&lt;p&gt;This is Kaizen (a little improvement every day) applied to process.&lt;/p&gt;

&lt;p&gt;How do you practice continuous improvement in your company? Any ideas on how we can do better? Don’t be shy - go ahead, comment below.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>HTML Fixtures with Jasmine and JSTestdriver</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/03/html-fixtures-with-jasmine-and-jstestdriver/"/>
    <id>http://www.multunus.com/blog/2011/03/html-fixtures-with-jasmine-and-jstestdriver/</id>
    <published>2011-03-14T20:33:07+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Unit Testing Javascript is great using JSTestDriver and Jasmine, but maintaining HTML fixtures for the same is a pain. One of the approaches for fixing the same issue is by creating the HTML from the controller specs and loading the HTML using AJAX. This approach is mentioned &lt;a href="http://pivotallabs.com/users/jb/blog/articles/1152"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But I could not make it work with JSTestDriver as the server was not able to find the path for HTML fixtures. So I modified the above approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; I’ve created a gem using which you can achieve the same. Click &lt;a href="https://github.com/multunus/js_fixtures"&gt;here&lt;/a&gt; for the same.&lt;/p&gt;

&lt;h2 id="generate-the-fixtures"&gt;Generate the fixtures&lt;/h2&gt;
&lt;p&gt;Create a file fixture_generator.rb and save it in spec/support directory. The contents of the file is as follows:&lt;/p&gt;

&lt;p&gt;```
RSpec::Rails::ControllerExampleGroup.class_eval do
  # Saves the markup to a fixture file using the given name
  def save_fixture(markup, name)
    fixture_path = File.join(Rails.root.to_s, 'spec/javascripts/helpers')
    Dir.mkdir(fixture_path) unless File.exists?(fixture_path)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fixture_file = File.join(fixture_path, &amp;amp;quot;#{name}.js&amp;amp;quot;)

fixture_function = 'function load#{name}Fixture(){   /* :DOC +='+markup+'* /
}'
File.open(fixture_file, 'w') do |file|
  file.puts(fixture_function)
end   end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;# From the controller spec response body, extracts html identified
  # by the css selector.
  def html_for(selector)
    doc = Nokogiri::HTML(response.body)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#remove_third_party_scripts(doc)
content = doc.css(selector).first.to_s

convert_body_tag_to_div(content)   end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;# Recommended that you add all body-level third party scripts inside a div called #third-party-scripts
  # so that they can be removed during testing.
  def remove_third_party_scripts(doc)
    scripts = doc.at('#third-party-scripts')
    scripts.remove if scripts
  end&lt;/p&gt;

&lt;p&gt;# Here we convert the body tag to a div so that we can load it into
  # the document running js specs without embedding a  within a body.
  def convert_body_tag_to_div(markup)
    markup.gsub('&amp;lt;body', '&amp;lt;div').gsub('&amp;lt;/body&amp;gt;', '&amp;lt;/div&amp;gt;')
  end
end
```&lt;/p&gt;

&lt;p&gt;Call the save_fixture within the controller spec as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
describe 'Sign up' do
  it "should show the signup form" do
  get :new
  response.should render_template('new')
  save_fixture(html_for('body'), 'Signup')
  end
end
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The above will create a file Signup.js in the path spec/javascripts/helpers&lt;/p&gt;

&lt;h2 id="load-the-fixtures-in-js-tests"&gt;Load the fixtures in JS tests&lt;/h2&gt;
&lt;p&gt;For this the spec/javascripts/helpers should be added to the load path for JSTD in jsTestDriver.conf.
Then call the method within the test.&lt;/p&gt;

&lt;p&gt;```
describe('Validate registration form', function () {
  beforeEach(function () {
    $(this).ready(function () {
      loadSignupFixture()
    });
  });&lt;/p&gt;

&lt;p&gt;it('should validate the form ', function () {
      form = $('#user-registration-form')
      bindValidationForRegistrationForm()
      form.submit()
      expect($('.status').first().text()).toMatch('Please enter your name')
  });
});
```&lt;/p&gt;

&lt;p&gt;Thats all. In this way it is assured that the HTML is consistent with the actual view. The only thing that needs to be taken care is to make sure that the controller spec should be run whenever there is a change in the DOM, so that it is available to JS unit tests.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>A Macro Level Perspective of Software Development</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2011/02/a-macro-level-perspective-of-software-development/"/>
    <id>http://www.multunus.com/blog/2011/02/a-macro-level-perspective-of-software-development/</id>
    <published>2011-02-09T05:47:24+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Why is delivering good software on a consistent basis hard? There are many existing answers to this question already. This is our version. A list of things good software should achieve:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Should solve a real problem&lt;/li&gt;
  &lt;li&gt;Should be shipped and maintained within the budgeted cost and time&lt;/li&gt;
  &lt;li&gt;Should be easy to use&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt;
We’ve now migrated to &lt;a href="http://jamesshore.com/Agile-Book/why_agile.html"&gt;James Shore’s definition&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Success is usually defined as delivering on time, under budget, and as specified. That’s a flawed definition. Many late projects are huge successes for their organizations, and many on-time projects don’t deliver any value. Instead, think in terms of organizational, technical, and personal success.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What it takes to build such software:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Great code&lt;/strong&gt; : Easily Testable, Maintainable &amp;amp; Scalable code across ALL Tiers of the App&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Constant estimating and planning&lt;/strong&gt; : Has to be woven into the Iterative Release process&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Feedback Management&lt;/strong&gt; : Collection &amp;amp; Processing of Qualitative &amp;amp; Quantitative Feedback&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Continuous Improvement&lt;/strong&gt; : A team habit of proactively finding and fixing problems&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Good Infrastructure&lt;/strong&gt; : S/W &amp;amp; H/W tools to improve Team &amp;amp; Apps efficiency&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High Quality&lt;/strong&gt; : Focus on all &lt;a href="http://onestepbacktwostepsforward.blogspot.com/2009/06/agile-testing-quadrants.html"&gt;4 Agile Testing&lt;/a&gt;Quadrants&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Constant Communication&lt;/strong&gt; : Customer Collaboration &amp;amp; Team Interaction along with just enough Documentation&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Great Design&lt;/strong&gt; : Balancing Form with Function&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Constant UX Focus&lt;/strong&gt; : Focus on the user’s interactive experience [along with focus on Copy] woven into the Iterative Release Process. This is covered by Quadrant 3 in the Agile Testing diagram linked to above - but I’m mentioning it separately because its usually happens to get less attention.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Knowledgeable, Skilled and Motivated Team&lt;/strong&gt; : Important roles include Managers, Programmers, Testers, Analysts, Leads, Architects and Designers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our version of the software life-“cycle” :-) :
&lt;a href="https://s3.amazonaws.com/multunus-website/uploads/2014/01/softwaredev.png"&gt;&lt;img src="https://s3.amazonaws.com/multunus-website/uploads/2014/01/softwaredev-300x271.png" alt="softwaredev" /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Rails threadsafe and rake task</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/11/rails-threadsafe-and-rake-task/"/>
    <id>http://www.multunus.com/blog/2010/11/rails-threadsafe-and-rake-task/</id>
    <published>2010-11-03T20:52:08+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We’ve got an application which uses JRuby + RoR deployed in Glassfish. We enabled &lt;code&gt;config.threadsafe!&lt;/code&gt; in the production.rb file to support multithreaded environment.&lt;/p&gt;

&lt;p&gt;The server was working fine, but the rake tasks started failing because of a class loading issue. The immediate fix we had was to disable threadsafe for rake tasks and enable it when the server is started. This is not a scalable solution and when we started looking further into it, we found that the following change in the rails initializer should resolve the issue:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open the file railities/lib/initiazer.rb&lt;/li&gt;
  &lt;li&gt;Change the line &lt;code&gt;return if $rails_rake_task&lt;/code&gt; in load_application_classes method to &lt;code&gt;return if $rails_rake_task &amp;amp;&amp;amp; configuration.dependency_loading&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see the issue and solution being discussed in the following thread:
&lt;a href="http://groups.google.com/group/rubyonrails-core/browse_thread/thread/b13dbe0b8f12b7dc"&gt;http://groups.google.com/group/rubyonrails-core/browse_thread/thread/b13dbe0b8f12b7dc&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Configuring Hudson CI server behind firewall</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/09/configuring-hudson-ci-server-behind-firewall/"/>
    <id>http://www.multunus.com/blog/2010/09/configuring-hudson-ci-server-behind-firewall/</id>
    <published>2010-09-02T20:14:17+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;When firewall was introduced within our local network, the Hudson server stopped working with the error:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
javax.jmdns.impl.tasks.Prober run
WARNING: run() exception
java.io.IOException: Operation not permitted
at java.net.PlainDatagramSocketImpl.send(Native Method)
at java.net.DatagramSocket.send(DatagramSocket.java:625)
at javax.jmdns.impl.JmDNSImpl.send(JmDNSImpl.java:1200)
at javax.jmdns.impl.tasks.Prober.run(Prober.java:163)
at java.util.TimerThread.mainLoop(Timer.java:512)
at java.util.TimerThread.run(Timer.java:462)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And when you access hudson in browser, it stays with the message &lt;strong&gt;“Please wait while Hudson is getting ready to work….”&lt;/strong&gt; forever.&lt;/p&gt;

&lt;p&gt;Initially I thought the problem might be because the ports which are required by the Hudson server i.e. 8080 and 5353, were not opened in the Firewall. I opened those, but the error remained.&lt;/p&gt;

&lt;p&gt;After googling for sometime, I could find similar issues being reported here:
&lt;a href="http://issues.hudson-ci.org/browse/HUDSON-7129?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab"&gt;http://issues.hudson-ci.org/browse/HUDSON-7129?page=com.atlassian.streams.streams-jira-plugin:activity-stream-issue-tab&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the issue got fixed by adding&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
-Dhudson.DNSMultiCast.disabled=true
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;to the java command as follows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
java -Dhudson.DNSMultiCast.disabled=true -jar hudson.war --httpPort=8080
&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our experience with Comatose - the MicroCMS</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/02/our-experience-with-comatose-the-microcms/"/>
    <id>http://www.multunus.com/blog/2010/02/our-experience-with-comatose-the-microcms/</id>
    <published>2010-02-23T19:16:44+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;In one of our projects which is primarily a web application, the client had asked that we go ahead and make as much of the copy available across the site, editable. This included not just copy in static pages such as “About Us”, but also copy in dynamic pages. I mean things like tooltips for fields in forms, for example.&lt;/p&gt;

&lt;p&gt;We first looked at &lt;a href="http://radiantcms.org/"&gt;RadiantCMS&lt;/a&gt;, with the intention of building our web application on top of it. But then decided to instead build our web app from scratch and then make parts of it editable using &lt;a href="http://github.com/darthapo/comatose"&gt;Comatose&lt;/a&gt; [which is a “MicroCMS”]. This way, we have more flexibility to add features to the web app using the Rails API and available plugins, rather than being constrained by RadiantCMS system.&lt;/p&gt;

&lt;h3 id="things-we-liked-about-comatose"&gt;Things we liked about Comatose:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Its implemented as a Rails plugin - which makes it a breeze to install&lt;/li&gt;
  &lt;li&gt;Implementing Single Sign On is also simple. Because it works well with the 
&lt;a href="http://agilewebdevelopment.com/plugins/restful_authentication"&gt;restful_authentication plugin&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Comatose allows rendering of pages inline from your application view - just like rendering a partial in a Rails app. To include an “editable” tool tip within a form, something as simple as the following is enough:&lt;/li&gt;
  &lt;li&gt;[ror]&amp;lt;%= render :comatose=&amp;gt;’about’ %&amp;gt;[/ror]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s of course a lot more you can do with this plugin. Check it out.&lt;/p&gt;

&lt;h3 id="now-for-the-bad-part--"&gt;Now for the bad part :-(&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;The main issue is font inconsistency. There are some options for setting the font size, but they don’t work as expected - because the CSS styles are inherited from our app.&lt;/li&gt;
  &lt;li&gt;In production mode, there is a noticeable delay between making changes in the CMS and the updated content showing up on the main site. Not sure why this is the case.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Lessons learned from Agile Bengaluru 2010</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/02/lessons-learned-from-agile-bengaluru-2010/"/>
    <id>http://www.multunus.com/blog/2010/02/lessons-learned-from-agile-bengaluru-2010/</id>
    <published>2010-02-14T15:25:48+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;It was a great feeling after attending the &lt;a href="http://www.agileindia.org/agilebengaluru2010"&gt;Agile Bengaluru Conf 2010&lt;/a&gt;. The theme for this Agile Conference was &lt;strong&gt;Post-Modern Agile&lt;/strong&gt; i.e. what’s next after Agile. Most of the sessions were talking mainly on what needs to be done to make a product a success. Just following agile practices will not make any product a success. The team needs to get out of their circle and think outside the coding level to understand their customers. The main takeaway points of the session are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Frequent Validation&lt;/strong&gt; - Always validate with actual customers. Talk directly to them, take their feedback, implement it and soon release it. This cycle has to continue. If we don’t do this, there is no meaning in building any product with BDD/TDD, Automated tests etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Limiting WIP&lt;/strong&gt; [Work-In-Progress] - Never leave too many things untested or unreleased. Get your QA team to test as soon as the dev team is done. Release to production as soon as QA is done. When we make frequent releases, you can also get frequent validation.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Checking vs Testing&lt;/strong&gt; - If you’re not sure what the difference is, there’s an &lt;a href="http://www.infoq.com/news/2009/12/testing-or-checking"&gt;article on InfoQ&lt;/a&gt; that explains this well. The bottom line is, use automated tests for mundane tasks [“checking”] and use manual testing for exploratory testing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There was an &lt;a href="http://www.agileindia.org/agilebengaluru2010/agile-bengaluru-2010-a-startup-journey.htm"&gt;interesting session&lt;/a&gt; by 
&lt;strong&gt;Siddhartha Govindaraj&lt;/strong&gt;, who is the founder of Silver Stripe Software. He talked about how they evolved from ad-hoc to Agile and from Agile to &lt;a href="http://en.wikipedia.org/wiki/Kanban"&gt;Kanban&lt;/a&gt;. The points I felt interesting and which are worth trying out are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;No iterations/sprint&lt;/strong&gt; - Always take top items from backlog - What usually happens during an iteration is, either you might finish all the items in an iteration and as there is still more time left you might have to pull some item from the backlog. The other case can be, you are not fully done with some tasks you might have to push some items to next sprint. Instead of this, always take items from backlog. The developers are supposed to work on the top items in the backlog and QA will be testing as soon as the development is done. QA need not have to wait for a certain period to test.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Limiting WIP (Work In Progress)&lt;/strong&gt; - Don’t pile up stuff, never leave anything untested/unreleased. If WIP goes beyond a specific number, then change the plan like stop development make devs to test. And don’t keep tested stuff unreleased. Alway keep a maximum number of items that needs to be part of released. So even if the release is planned weekly, there can be multiple releases during the week if a lot of features are implemented during a certain week. Another advantage with this approach is, when dev team gets a chance to sit with QA, they also learn about exploratory testing.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Single backlog for multiple projects&lt;/strong&gt; - This is an interesting point. He had multiple projects say A &amp;amp; B, both in maintenance stage. He has a team of 5. So rather than splitting the team into 2 across these 2 projects, they kept a single backlog of both projects. They prioritize the backlog and take items from that. This way both projects move in parallel more smoothly.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Checking vs testing&lt;/strong&gt; - Checking should always be automated while  Manual testing effort should be reserved for exploratory testing only.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;He also suggests avoiding a daily Scrum meeting. The point he had was, the team should be interacting so closely throughout the day, which avoids the need for a stand-up . But if there is an issue that needs to be discussed or if there is a requirement for having a discussion within teams, then such a stand-up is called for. I heard the same being discussed by many people - that Scrum is not really mandatory but am not sure about the same as of now. At Multunus, we still get quite a lot of value out of the stand- ups, because 
&lt;a href="http://www.multunus.com/2010/01/our-pragmatic-processes/"&gt;we do it a little differently&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was a pretty simple presentation in which he was talking about how their company has evolved. As it was about his own experience, he had concrete examples for validating his points. There were questions from the audience like, how velocity is calculated if there were no sprints, how the team would get adjusted to context switching in case of single backlog etc. His answer was that, they are a small team - so these were mostly non-issues for them. And about velocity, productivity etc, those really will come into picture only if there is not enough trust in the team. If the team trusts the management and the management also trusts the team, then these productivity/burn down charts etc are meaningless. That point really made a lot of sense to me. If the team always perform/deliver well and if the management has trust on the team, why should they look at the burn down charts etc to see the team’s performance ?.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our new reading list</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/02/our-new-reading-list/"/>
    <id>http://www.multunus.com/blog/2010/02/our-new-reading-list/</id>
    <published>2010-02-09T17:09:55+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;As mentioned in an &lt;a href="http://www.multunus.com/2010/01/our-pragmatic-processes/"&gt;earlier post&lt;/a&gt;, our team shares what they learn on a daily basis in our morning stand-ups. Considering our primary focus as a company is lean product development, we felt we could be more aligned with our goals if each of us read books [or blogs] on related subjects. Here’s the current list that we’ve come up with.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Web-Analytics-Hour-Avinash-Kaushik/dp/0470130652"&gt;Web Analytics An Hour A Day&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Rocket-Surgery-Made-Easy-Yourself/dp/0321657292"&gt;Rocket Surgery Made Easy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Art-Lean-Software-Development-Incremental/dp/0596517319"&gt;The Art of Lean Software Development&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://startuplessonslearned.com/"&gt;StartUpLessonsLearned.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959"&gt;Mythical Man Month&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Think-Common-Sense-Approach-Usability/dp/0789723107"&gt;Don’t make me think&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/User-Stories-Applied-Software-Development/dp/0321205685"&gt;User Stories Applied&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.amazon.com/Agile-Estimating-Planning-Mike-Cohn/dp/0131479415"&gt;Agile Estimating and Planning&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do you like this list? Or not? Have suggestions for more? Go ahead, talk to us in the comments below. We’d LOVE to hear from you.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Convert code signing certificates from "pfx" to "p12" format</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/02/convert-code-signing-certificates-from-pfx-to-p12-format/"/>
    <id>http://www.multunus.com/blog/2010/02/convert-code-signing-certificates-from-pfx-to-p12-format/</id>
    <published>2010-02-06T10:43:34+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the requirements we had was to sign the applet that we built for 
&lt;a href="http://alpha.userthoughts.com/"&gt;UserThoughts&lt;/a&gt;. We had purchased Comodo’s 
&lt;a href="http://en.wikipedia.org/wiki/Code_signing"&gt;code signing certificate&lt;/a&gt; from 
&lt;a href="https://secure.ksoftware.net/code_signing.html?gclid=CN-epdfskZ8CFVBd4wodTC6EIA"&gt;KSoftware&lt;/a&gt;. 
When you download the certificate from their site, it automatically gets installed in IE. Follow these steps for converting it into format which you can use with the Java Jarsigner:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Export the certificate from IE by following the instructions given here: 
 &lt;a href="http://www.tech-pro.net/export-to-pfx.html"&gt;http://www.tech-pro.net/export-to-pfx.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The certificate with Private key will be exported as PFX format in the above step - but this 
&lt;strong&gt;cannot&lt;/strong&gt; be used by the jarsigner. So you need to convert it into “p12 format” which the jarsigner can understand. For that you need to use Mozilla. First import the certificate  saved in step 1 into Mozilla as follows:
    &lt;ul&gt;
      &lt;li&gt;From the “Edit” menu select “Preferences” and open the “Privacy &amp;amp; Security” category and click on the “Certificates” item.&lt;/li&gt;
      &lt;li&gt;In the “Manage Certificates” section, click on the “Manage Certificates” button.&lt;/li&gt;
      &lt;li&gt;In the “Certificate Manager” window, the “Your Certificates” tab should automatically open. (If not, select it.)&lt;/li&gt;
      &lt;li&gt;Click the “Impor”t button at the bottom of the window.&lt;/li&gt;
      &lt;li&gt;It prompts you to select an existing file; select your certificate file from the location where you saved it in when you exported it.&lt;/li&gt;
      &lt;li&gt;It prompts you to provide the “Master Password”; enter it, if you have set one.&lt;/li&gt;
      &lt;li&gt;It prompts you to provide the password used to encrypt the certificate backup; enter it.&lt;/li&gt;
      &lt;li&gt;It should say “Successfully restored your certificate(s) and private key(s).” Click OK.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Then export the certificate as p12 format:
    &lt;ul&gt;
      &lt;li&gt;From the “Edit” menu select “Preferences” and open the “Privacy &amp;amp; Security” category and click on the “Certificates” item&lt;/li&gt;
      &lt;li&gt;In the “Manage Certificates” section, click on the “Manage Certificates” button.&lt;/li&gt;
      &lt;li&gt;In the “Certificate Manager” window, the “Your Certificates” tab should automatically open. (If not, select it.)&lt;/li&gt;
      &lt;li&gt;To export your “DOEGrids” or “KCA Personal Certificate”, click on it to select it, and click the “Backup” button at the bottom of the window.&lt;/li&gt;
      &lt;li&gt;You’ll be prompted to specify a filename and location for the “PKCS#12-format” certificate file (file extension will be “.p12” in UNIX/Linux,  ”.pfx” in Windows).  Provide them and click OK.&lt;/li&gt;
      &lt;li&gt;A dialog box requesting the Master Password may appear (the password and certificate database). If you have set a Master Password, provide it. If not, you can make one up and provide it (optional). 
 &lt;strong&gt;Remember this password!&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;You’ll be prompted to make up and (twice) enter a second password. This one is for restoring this particular backup of this certificate. 
 &lt;strong&gt;Remember this password!&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Once the system says it’s successfully backed up your certificate and private key, click OK.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We also need to know the alias of the “.p12” file so run:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
 keytool -list -storetype pkcs12 -keystore &amp;lt;path to the cert file
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;Then you will see output like this:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
 Keystore type: pkcs12 Keystore provider: SunJSSE
 Your keystore contains 1 entry
 xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx, Apr 26, 2006, keyEntry,
 Certificate fingerprint (MD5):hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh:hh
 The xxxx-xxx… number is the alias for the key
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change your ant script as follows to sign the certificate:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;
 [xml]&amp;lt;target name=”signjar” depends=”jar”&amp;gt; &amp;lt;signjar jar=”yourJar.jar” storetype=”pkcs12″ keystore=”yourkey.p12″ alias=”Your Alias” storepass=”your password”/&amp;gt;&amp;lt;/target&amp;gt;[/xml]
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
  </entry>
  <entry>
    <title>JQuery Tools: Smooth JS widgets</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/02/jquery-tools-smooth-js-widgets/"/>
    <id>http://www.multunus.com/blog/2010/02/jquery-tools-smooth-js-widgets/</id>
    <published>2010-02-01T11:20:24+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;Does your web site design have a lot of widgets like tabs, overlays, scrollable etc., to be implemented? Do you want to design and implement smooth looking sites with out using flash? Do you want to improve the UX on your site ? If your answer is yes for any of these questions then &lt;a href="http://flowplayer.org/tools/demos/index.html"&gt;JQuery Tools&lt;/a&gt; is probably worth taking a look at.&lt;/p&gt;

&lt;p&gt;JQT is a family of JQuery plugins comprising of the most common widgets used in “modern” sites.  We’ve used quite a few of the widgets on our sites in the last 3-4 projects and it  has certainly helped us improve the look and feel of these sites - with much less effort that what would have been required otherwise.&lt;/p&gt;

&lt;p&gt;Installing and using JQT on your site is also super simple.  Download a JS file of ~6kb and include in your web page.  The documentation and demos provided for each widget is excellent - so you should be on your way to actually getting stuff done very quickly after the download.&lt;/p&gt;

&lt;p&gt;Bottom line - you’ve got pretty much no excuse, to not check it out :-).&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Working with DLLs, the Java way</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/01/working-with-dlls-the-java-way/"/>
    <id>http://www.multunus.com/blog/2010/01/working-with-dlls-the-java-way/</id>
    <published>2010-01-29T17:50:51+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;We had a very simple requirement, to invoke my DLLs using Java code for couple of reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We want to reuse application code built for a .NET application&lt;/li&gt;
  &lt;li&gt;We want to integrate the DLLs with a Java based sever technology&lt;/li&gt;
  &lt;li&gt;Should be simple enough to maintain the code by .NET professionals&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are couple of Java-COM bridging solutions I came across.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Java_Native_Interface"&gt;Java Native Interface (JNI)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://sourceforge.net/projects/jacob-project/"&gt;JACOB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://groovy.codehaus.org/COM+Scripting"&gt;Scriptom (Groovy - COM Scripting)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jna.dev.java.net/"&gt;Java Native Access (JNA)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://www.jnbridge.com/"&gt;JNBridge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post, we’ll see how Scriptom can be used to access DLLs.&lt;/p&gt;

&lt;p&gt;Scriptom is a module in Groovy (A Java VM based scripting language) which wraps the JACOB classes to make it more usable. Scriptom’s syntax looks like VB.NET code.&lt;/p&gt;

&lt;p&gt;Lets jump in to the sample application.&lt;/p&gt;

&lt;p&gt;Assume that we have a VB class named TimerState in the TestDLL VB.NET project, exposes the COM, signed and generates the DLLs.&lt;/p&gt;

&lt;p&gt;Following is the TimerState VB class. In this class, we have an event
UpdateTime which raises an event when to notify updated time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
Public Event UpdateTime(ByVal Jump As Double)
    Public Sub TimerTask(ByVal Duration As Double)
        Dim Start As Double
        Dim Second As Double
        Dim SoFar As Double
        Start = Timer
        SoFar = Start
        Do While Timer &amp;lt; Start + Duration
            If Timer - SoFar &amp;gt;= 0.1 Then
                SoFar = SoFar + 0.1
                RaiseEvent UpdateTime(Timer - Start)
            End If
        Loop
    End Sub
End Class
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We want to use this logic in the Scriptom code and do something whenever a UpdateTime event is raised. Here are the steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Register the DLLs (this is required step for the Java Virtual Machine to get meta data about the DLLs)&lt;/li&gt;
  &lt;li&gt;Download Scriptom&lt;/li&gt;
  &lt;li&gt;Copy the jacob-&lt;code&gt;* .dll to any system PATH&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Have all the JARS from Scriptom jar folder available in the CLASSPATH&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Following is the sample code for invoking
&lt;code&gt;
import org.codehaus.groovy.scriptom.ActiveXObject // Imports the ActiveX object class which holds the reference to the class in DLL
def timer = new ActiveXObject("TestDLL.TimerState") // Looks for the meta data in the registry with "TestDLL.TimerState" name and creates a reference to that class
def time = 1.00
timer.events.UpdateTime = { variants -&amp;gt; // event registration for UpdateTime event in the VB class. Variants holds the data passed from the event. In this case, it is Jump value.
    println "UpdateTime: " + variants[0] // We're just printing the upated time
}
timer.TimerTask(time) // starting the timer task in TimerState class
while(true) { // keeping itself alive to respond when timer events are raised
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Please refer  &lt;a href="http://groovy.codehaus.org/COM+Data+Types+in+Scriptom"&gt;COM Data Types in Scriptom&lt;/a&gt; for the .NET data types supported in Scriptom.&lt;/p&gt;

&lt;p&gt;In the next post, we’ll discuss about JNBridge, a comercial solution.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Our Pragmatic Processes</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/01/our-pragmatic-processes/"/>
    <id>http://www.multunus.com/blog/2010/01/our-pragmatic-processes/</id>
    <published>2010-01-29T17:32:22+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;One of the things we do is to create a culture of continuous improvement. To help ourselves stay on track and not lose sight of the forest for the trees, we do the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We do our standups a little different. We talk about what we &lt;strong&gt;learned&lt;/strong&gt; yesterday than what we got done. Credit for this idea goes to &lt;a href="http://www.hashrocket.com/"&gt;HashRocket&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Encourage our people to read awesome books [
&lt;a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X"&gt;Pragmatic Programmer&lt;/a&gt; and 
&lt;a href="http://gettingreal.37signals.com/"&gt;Getting Real&lt;/a&gt; are our current favourites] and then share what they read in our standups. It only takes 30min [or less] to read enough to share something useful in the next day’s standup.&lt;/li&gt;
  &lt;li&gt;Encourage our people to be generalists rather than specialists. This approach has resulted in most of our people being 
&lt;a href="http://memeagora.blogspot.com/2006/12/polyglot-programming.html"&gt;polyglots&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;We’ve woven UX improvement into our sprints. This results in software that’s balanced both in terms of user interaction and functionality.&lt;/li&gt;
  &lt;li&gt;Test Driven Development: We’re yet to get completely infected by this discipline. But we’re getting there.&lt;/li&gt;
  &lt;li&gt;Not interrupting each other: It takes 15min for people to regain their “flow” if they get interrupted. And if this happens many times in a day, we end up with a stressed out team at the end of each long day. So we prefer patience to instant gratification. [Tip: 
&lt;a href="http://campfirenow.com/"&gt;Campfire&lt;/a&gt; is a great tool in this regard. We prefer this to IM].&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll be blogging about some of the above topics in more detail in the coming weeks. Do drop a line in the comments section below, if you’d like to learn more about anything specifically.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Learnings from 2009</title>
    <link rel="alternate" href="http://www.multunus.com/blog/2010/01/learnings-from-2009/"/>
    <id>http://www.multunus.com/blog/2010/01/learnings-from-2009/</id>
    <published>2010-01-29T16:25:05+05:30</published>
    <updated>2017-08-30T09:25:05+05:30</updated>
    <content type="html">&lt;p&gt;2009 was a year of many special events. We completed 2 years of operations last year. We moved to a new more spacious office. We created our first product. We discovered our niche [more on this in the coming weeks].&lt;/p&gt;

&lt;p&gt;But those events are nothing more than punctuations in this journey we’ve embarked on. Its the learnings that we treasure and rely on, to propel us forward. So here’s my list:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Constraints enforce creativity.&lt;/strong&gt; Last year was difficult for almost everybody and we were no exception. Client work diminished rapidly and soon our team of passionate, talented engineers were finally “available”, to do some creative work for ourselves. We were forced to innovate at this time. And we did. We came up with the idea of UserThoughts and got the first prototype out in less than 2 months.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Resilience pays.&lt;/strong&gt; There are now clear signs that the worst is behind us and that 2010 will be a year of robust growth. But mid-last year, the situation was quite different. To look beyond the current and work towards a better future, requires faith and dedication. Last year has proven that our team is built with that kind of DNA.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Integrity pays.&lt;/strong&gt; Its hard to do the right thing, every time. But I just took a look at our “ethics account book”, and so far, we’re quite profitable :-). We create value for our clients with a sincere intention that they should succeed in their respective businesses. And sooner or later, this gets noticed.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Passion results in new ideas.&lt;/strong&gt; We’ve always been obsessed with user experience. So much so that, we’ve weaved a high level of focus on UX into our development cycles. Its probably not an accident then, that, our product seeks to solve problems in this very space.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have a look at this &lt;a href="https://www.youtube.com/watch?v=T6MhAwQ64c0"&gt;video&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
</feed>
